{"version":3,"sources":["Components/Home/Banner.js","Components/Home/MainView.js","Components/Home/Tags.js","Stores/Common/Actions.js","Stores/Auth/Actions.js","Stores/middleware.js","Stores/createStore.js","Stores/Profile/Actions.js","Stores/Comment/Actions.js","Services/ApiService.js","Services/Api/AuthService.js","Services/Api/ArticleService.js","Services/Api/CommentService.js","Services/Api/ProfileService.js","Services/Api/TagService.js","Sagas/ArticleSaga.js","Sagas/AuthSaga.js","Sagas/CommentSaga.js","Sagas/ProfileSaga.js","Sagas/TagSaga.js","Sagas/index.js","Stores/Article/InitialState.js","Stores/Article/Reducers.js","Stores/Auth/InitialState.js","Stores/Auth/Reducers.js","Stores/Comment/InitialState.js","Stores/Comment/Reducers.js","Stores/Profile/Reducers.js","Stores/Profile/InitialState.js","Stores/Tag/Reducers.js","Stores/Tag/InitialState.js","Stores/Common/InitialState.js","Stores/Common/Reducers.js","Stores/Editor/Actions.js","Stores/Editor/Reducers.js","Stores/Editor/InitialState.js","Stores/Home/Actions.js","Stores/Home/Reducers.js","Stores/Home/InitialState.js","Stores/index.js","serviceWorker.js","Components/Header.js","Components/Article/PerformActions.js","Components/Article/ArticleMeta.js","Components/Article/CommentInput.js","Components/Article/DeleteButton.js","Components/Article/Comment.js","Components/Article/CommentList.js","Components/Article/CommentContainer.js","Components/Article/index.js","Components/ListErrors.js","Components/Editor.js","Components/Login.js","Components/Profile.js","Components/ProfileFavorites.js","Components/Register.js","Components/Settings.js","Components/App.js","index.js","Stores/Tag/Actions.js","Stores/Article/Actions.js","Components/ArticlePreview.js","Components/ListPagination.js","Components/ArticleList.js","Components/Home/index.js"],"names":["Banner","appName","token","className","toLowerCase","YourFeedTab","props","href","tab","onClick","ev","preventDefault","onTabClick","ArticleActions","getFeed","GlobalFeedTab","getArticles","TagFilterTab","tag","connect","state","article","tags","common","dispatch","pager","payload","changeTabs","loadArticles","articles","loading","articlesCount","currentPage","onClickTag","getArticlesByTag","articleTags","map","key","page","createActions","appLoad","redirect","pageUnloaded","Types","Creators","CommonTypes","getCurrentUser","currentUserSuccess","currentUserError","login","loginSuccess","loginError","register","registerSuccess","registerError","save","saveSuccess","saveError","setToken","updateFieldAuth","asyncStart","asyncEnd","logout","AuthTypes","promiseMiddleware","store","next","action","v","then","AuthActions","currentView","getState","viewChangeCounter","skipTracking","res","currentState","currentUser","console","log","error","response","body","localStorageMiddleware","auth","loginIsLoading","registerIsLoading","window","localStorage","setItem","user","logoutIsLoading","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","persistConfig","storage","whitelist","followUser","followUserSuccess","followUserError","getProfile","profileSuccess","profileError","unfollowUser","unfollowUserSucess","unfollowUserError","profilePageLoaded","ProfileTypes","createComment","createCommentSuccess","createCommentError","deleteComment","deleteCommentSuccess","deleteCommentError","getArticleComments","articleCommentsSuccess","articleCommentsError","CommentTypes","ApiService","create","baseURL","headers","timeout","addResponseTransform","ok","getItem","addRequestTransform","request","Authorization","AuthService","get","email","password","post","username","put","omitSlug","Object","assign","slug","undefined","ArticleService","limit","offset","author","delete","CommentService","comment","commentId","ProfileService","TagService","getArticlesByAuthor","deleteArticle","setFavoriteArticle","getFavouritedByArticle","getArticle","unfavoriteArticle","updateArticle","createArticle","call","data","articlesSuccess","articlesError","getArticlesByAuthorSuccess","getArticlesByAuthorError","articlesByTagSuccess","articlesByTagError","deleteArticleSuccess","deleteArticleError","favouriteArticleSuccess","favouriteArticleError","getArticleFavoritedBySuccess","getArticleFavoritedByError","feedSuccess","feedError","articleSuccess","articleError","unfavouriteArticleSuccess","unfavouriteArticleError","updateArticleSuccess","updateArticleError","createArticleSuccess","createArticleError","CommentActions","ProfileActions","followUsertError","getProfileSuccess","getProfileError","unfollowUserSuccess","getTags","TagActions","getTagsSuccess","getTagsError","root","all","takeLatest","ArticleTypes","GET_ARTICLES","GET_ARTICLES_BY_AUTHOR","GET_ARTICLES_BY_TAG","DELETE_ARTICLE","SET_FAVOURITE_ARTICLE","GET_FAVOURITED_BY_ARTICLE","GET_FEED","GET_ARTICLE","UNFAVOURITE_ARTICLE","UPDATE_ARTICLE","CREATE_ARTICLE","GET_CURRENT_USER","LOGIN","REGISTER","SAVE","CREATE_COMMENT","DELETE_COMMENT","GET_ARTICLE_COMMENTS","FOLLOW_USER","GET_PROFILE","UNFOLLOW_USER","TagTypes","GET_TAGS","INITIAL_STATE","feeds","articlesIsLoading","articleIsLoading","articlesByAuthorIsLoading","articlesByAuthorErrors","articlesByTagIsLoading","articlesByTagErrors","deleteArticleIsLoading","deleteArticleErrors","getFavouritedByIsLoading","getFavouritedByErrors","getFeedIsLoading","getFeedErrors","unfavoriteArticleIsLoading","unfavoriteArticleErrors","updateArticleIsLoading","updateArticleErrors","createArticleIsLoading","createArticleErrors","redirectTo","reducer","createReducer","articlesErrors","ARTICLES_SUCCESS","ARTICLES_ERROR","errors","articleErrors","ARTICLE_SUCCESS","ARTICLE_ERROR","ARTICLES_BY_AUTHOR_SUCCESS","length","concat","ARTICLES_BY_AUTHOR_ERROR","ARTICLES_BY_TAG_SUCCESS","ARTICLES_BY_TAG_ERROR","DELETE_ARTICLE_SUCCESS","DELETE_ARTICLE_ERROR","setFavouriteArticleIsLoading","setFavouriteArticleErrors","FAVOURITE_ARTICLE_SUCCESS","favorited","favoritesCount","FAVOURITE_ARTICLE_ERROR","FAVOURITED_BY_ARTICLE_SUCCESS","FAVOURITED_BY_ARTICLE_ERROR","UNFAVOURITE_ARTICLE_SUCCESS","UNFAVOURITE_ARTICLE_ERROR","FEED_SUCCESS","FEED_ERROR","UPDATE_ARTICLE_SUCCESS","UPDATE_ARTICLE_ERROR","CREATE_ARTICLE_SUCCESS","CREATE_ARTICLE_ERROR","SET_PAGE","APPLY_TAG_FILTER","HOME_PAGE_LOADED","CHANGE_TABS","PROFILE_PAGE_LOADED","getcurrentUserIsLoading","getcurrentUserErrors","saveIsLoading","saveErrors","registerErrors","inProgress","loginErrors","CURRENT_USER_SUCCESS","CURRENT_USER_ERROR","LOGIN_SUCCESS","LOGIN_ERROR","REGISTER_SUCCESS","REGISTER_ERROR","SAVE_SUCCESS","SAVE_ERROR","SET_TOKEN","UPDATE_FIELD_AUTH","value","ASYNC_START","ASYNC_END","comments","createCommenIsLoading","createCommenErrors","deleteCommentIsLoading","deleteCommentErrors","getArticleCommentsIsLoading","getArticleCommentsErrors","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_ERROR","createCommentErrors","DELETE_COMMENT_SUCCESS","filter","id","DELETE_COMMENT_ERROR","ARTICLE_COMMENTS_SUCCESS","ARTICLE_COMMENTS_ERROR","profile","followUserIsLoading","followUserErrors","getProfileIsLoading","getProfileErrors","unfollowUserIsLoading","unfollowUserErrors","FOLLOW_USER_SUCCESS","FOLLOW_USER_ERROR","PROFILE_SUCCESS","PROFILE_ERROR","getTagsIsLoading","getTagsErrors","GET_TAGS_SUCCESS","GET_TAGS_ERROR","appLoaded","APP_LOAD","REDIRECT","PAGE_UNLOADED","editorPageLoaded","articleSubmitted","articleSubmittedSuccess","articleSubmittedError","addTag","removeTag","updateFieldEditor","EditorTypes","EDITOR_PAGE_LOADED","articleSlug","title","description","tagInput","tagList","ARTICLE_SUBMITTED","articleSubmittedIsLoading","articleSubmittedErrors","ARTICLE_SUBMITTED_SUCCESS","ARTICLE_SUBMITTED_ERROR","ADD_TAG","REMOVE_TAG","UPDATE_FIELD_EDITOR","homePageLoaded","HomeTypes","rootReducer","rootSaga","middleware","enhancers","sagaMiddleware","createSagaMiddleware","push","createLogger","applyMiddleware","persistedReducer","persistReducer","composeEnhancers","composeWithDevTools","createStore","persistor","persistStore","run","configureStore","combineReducers","ArticleReducer","AuthReducer","CommentReducer","ProfileReducer","TagReducer","CommonReducer","editor","EditorReducer","home","HomeReducer","router","routerReducer","Boolean","location","hostname","match","LoggedOutView","to","LoggedInView","src","image","alt","Header","this","React","Component","onClickDelete","canModify","ArticleMeta","Date","createdAt","toDateString","CommentInput","setBody","setState","target","onSubmit","placeholder","onChange","rows","type","CommentAtions","show","Comment","CommentList","CommentContainer","Article","Promise","onLoad","params","loadComments","onUnload","markup","__html","marked","dangerouslySetInnerHTML","commentErrors","CommonActions","ListErrors","keys","Editor","updateFieldEvent","onUpdateField","changeTitle","changeDescription","changeBody","changeTagInput","watchForEnter","keyCode","onAddTag","removeTagHandler","onRemoveTag","submitForm","promise","onUpdateArticle","onCreateArticle","nextProps","onGetArticles","onKeyUp","disabled","EditorActions","editorPageloaded","Login","changeEmail","onChangeEmail","changePassword","onChangePassword","EditProfileSettings","isUser","FollowUserButton","classes","following","unfollow","follow","Profile","onGetProfile","onGetArtilesByAuthor","bio","onFollow","onUnfollow","renderTabs","ArticleList","mapStateToProps","articleList","articlesByAuthorSuccess","ProfileFavorites","onGetArticleFavoritedBy","propTypes","PropTypes","string","func","getArticleFavoritedBy","Register","changeUsername","onChangeUsername","SettingsForm","updateState","field","newState","onSubmitForm","Settings","onClickLogout","App","onRedirect","onGetCurrentUser","exact","path","component","Home","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","articlesByAuthorError","setFavouriteArticle","favouritedByArticleSuccess","favouritedByArticleError","unfavouriteArticle","setPage","applyTagFilter","favorite","unfavorite","favouriteButtonClass","favouritesCount","onSetPage","range","i","Math","ceil","isCurrent","toString","global","articlesPromise","loadFeed","loadTags"],"mappings":"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","file":"static/js/main.b51a8964.chunk.js","sourcesContent":["import React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst Banner = ({ appName, token }) => {\r\n  if (token) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"banner\">\r\n      <div className=\"container\">\r\n        <h1 className=\"logo-font\">\r\n          {appName.toLowerCase()}\r\n        </h1>\r\n        <p>A place to share your knowledge.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nBanner.propTypes = {\r\n  appName: PropTypes.string,\r\n  token: PropTypes.string,\r\n}\r\nexport default Banner;\r\n","import ArticleList from '../ArticleList';\r\nimport React from 'react';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst YourFeedTab = (props) => {\r\n  if (props.token) {\r\n    const clickHandler = ev => {\r\n      ev.preventDefault();\r\n      props.onTabClick('feed', ArticleActions.getFeed, ArticleActions.getFeed());\r\n    }\r\n\r\n    return (\r\n      <li className=\"nav-item\">\r\n        <a  href={\"null\"}\r\n            className={ props.tab === 'feed' ? 'nav-link active' : 'nav-link' }\r\n            onClick={clickHandler}>\r\n          Your Feed\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nYourFeedTab.propTypes = {\r\n  token: PropTypes.string,\r\n  tab: PropTypes.string,\r\n  onTabClick: PropTypes.func,\r\n}\r\n\r\nconst GlobalFeedTab = (props) => {\r\n  const clickHandler = ev => {\r\n    ev.preventDefault();\r\n    props.onTabClick('all', ArticleActions.getArticles, ArticleActions.getArticles());\r\n  };\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a\r\n        href={\"null\"}\r\n        className={ props.tab === 'all' ? 'nav-link active' : 'nav-link' }\r\n        onClick={clickHandler}>\r\n        Global Feed\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nGlobalFeedTab.propTypes = {\r\n  tab: PropTypes.string,\r\n  onTabClick: PropTypes.func,\r\n}\r\n\r\nconst TagFilterTab = (props) => {\r\n  if (!props.tag) {\r\n    return null;\r\n  }\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a href={\"null\"} className=\"nav-link active\">\r\n        <i className=\"ion-pound\"></i> {props.tag}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nTagFilterTab.propTypes = {\r\n  tab: PropTypes.string,\r\n}\r\n\r\nconst MainView = (props) => {\r\n  return (\r\n    <div className=\"col-md-9\">\r\n      <div className=\"feed-toggle\">\r\n        <ul className=\"nav nav-pills outline-active\">\r\n\r\n          <YourFeedTab\r\n            token={props.token}\r\n            tab={props.tab}\r\n            onTabClick={props.onTabClick} />\r\n\r\n          <GlobalFeedTab tab={props.tab} onTabClick={props.onTabClick} />\r\n\r\n          <TagFilterTab tag={props.tag} />\r\n\r\n        </ul>\r\n      </div>\r\n\r\n      <ArticleList\r\n        pager={props.pager}\r\n        articles={props.articles}\r\n        loading={props.loading}\r\n        articlesCount={props.articlesCount}\r\n        currentPage={props.currentPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nMainView.propTypes = {\r\n  articles: PropTypes.array,\r\n  tags: PropTypes.array,\r\n  tab: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  articlesCount: PropTypes.number,\r\n  token: PropTypes.string,\r\n  currentPage: PropTypes.number,\r\n  pager: PropTypes.number,\r\n  onTabClick: PropTypes.func,\r\n  loadArticles: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.article,\r\n  tags: state.tag.tags,\r\n  token: state.common.token\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onTabClick: (tab, pager, payload) => dispatch(ArticleActions.changeTabs(tab, pager, payload )),\r\n  loadArticles: (pager) =>\r\n  dispatch(ArticleActions.getArticles(pager)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainView);\r\n","import React from 'react';\r\n//import TagActions from '../../Stores/Tag/Actions';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport { PropTypes } from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Tags = (props) => {\r\n  const tags = props.tags;\r\n  if (tags) {\r\n    return (\r\n      <div className=\"tag-list\">\r\n        {\r\n          tags.map(tag => {\r\n            const handleClick = ev => {\r\n              ev.preventDefault();\r\n              props.onClickTag(tag, page => props.articleTags(tag, page), props.articleTags(tag));\r\n            };\r\n            \r\n            return (\r\n              <a \r\n                href={\"null\"}\r\n                className=\"tag-default tag-pill\"\r\n                key={tag}\r\n                onClick={handleClick}\r\n                >\r\n                {tag}\r\n              </a>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>Loading Tags...</div>\r\n    );\r\n  }\r\n};\r\nTags.propTypes = {\r\n  tags: PropTypes.array,\r\n  onClickTag: PropTypes.func,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickTag: (tag, pager, payload) =>\r\n    dispatch(ArticleActions.getArticlesByTag(tag, pager, payload)),\r\n  articleTags: (tag, pager, payload) =>\r\n    dispatch(ArticleActions.getArticlesByTag(tag, pager, payload)),\r\n});\r\nexport default connect(() => ({}), mapDispatchToProps)(Tags);\r\n","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    appLoad: ['user','token','skipTracking'],\r\n    redirect: null,\r\n    pageUnloaded: null,\r\n})\r\nexport const CommonTypes = Types\r\nexport default Creators","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    getCurrentUser: null,\r\n    currentUserSuccess: ['payload'],\r\n    currentUserError: ['error'],\r\n    login: ['email','password'],\r\n    loginSuccess: ['payload'],\r\n    loginError: ['error'],\r\n    register: ['username','email','password'],\r\n    registerSuccess: ['user'],\r\n    registerError: ['error'],\r\n    save: ['user'],\r\n    saveSuccess: ['user'],\r\n    saveError: ['error'],\r\n    setToken: ['token'],\r\n    updateFieldAuth: ['action'],\r\n    asyncStart: null,\r\n    asyncEnd: null,\r\n    logout: null\r\n})\r\nexport const AuthTypes = Types\r\nexport default Creators","import AuthActions from './Auth/Actions';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action)) {\r\n    store.dispatch(AuthActions.asyncStart());\r\n\r\n    const currentView = store.getState().common.viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState().common.currentUser\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        console.log('RESULT', res);\r\n        action.payload = res;\r\n        store.dispatch(AuthActions.asyncEnd());\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState().common\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        console.log('ERROR', error);\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch(AuthActions.asyncEnd());\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (store.getState().auth.loginIsLoading || store.getState().auth.registerIsLoading) {\r\n    if (!action.error) {\r\n      console.log(action)\r\n      window.localStorage.setItem('jwt', action.payload.user.token);\r\n      AuthActions.setToken(action.payload.user.token);\r\n    }\r\n  } else if (store.getState().auth.logoutIsLoading) {\r\n    window.localStorage.setItem('jwt', '');\r\n    AuthActions.setToken(null);\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\r\nimport { createBrowserHistory } from 'history'\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\r\nimport { createLogger } from 'redux-logger'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst history = createBrowserHistory();\r\n// Build the middleware for intercepting and dispatching navigation actions\r\nconst myRouterMiddleware = routerMiddleware(history);\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  whitelist: []\r\n}\r\n\r\nexport default (rootReducer, rootSaga) => {\r\n  const middleware = []\r\n  const enhancers = []\r\n\r\n  // Connect the sagas to the redux store\r\n  const sagaMiddleware = createSagaMiddleware()\r\n\r\n  middleware.push(sagaMiddleware)\r\n  \r\n  const logger = createLogger()\r\n  const getMiddleware = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, ...middleware);\r\n    } else {\r\n      // Enable additional logging in non-production environments.\r\n      return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, ...middleware, logger)\r\n    }\r\n  };\r\n\r\n  enhancers.push(getMiddleware())\r\n\r\n  // Redux persist\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  // Redux debbugger\r\nconst composeEnhancers = composeWithDevTools({})\r\n\r\n  const store = createStore(persistedReducer, composeEnhancers(...enhancers))\r\n  const persistor = persistStore(store)\r\n\r\n  // Kick off the root saga\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  return { store, persistor, history}\r\n}","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    followUser: ['username'],\r\n    followUserSuccess: null,\r\n    followUserError: ['error'],\r\n    getProfile: ['username'],\r\n    profileSuccess: ['profile'],\r\n    profileError: ['error'],\r\n    unfollowUser: ['username'],\r\n    unfollowUserSucess: null,\r\n    unfollowUserError: ['error'],\r\n    profilePageLoaded: ['action'],\r\n})\r\nexport const ProfileTypes = Types\r\nexport default Creators","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    createComment: ['slug','comment'],\r\n    createCommentSuccess: ['commentId'],\r\n    createCommentError: ['error'],\r\n    deleteComment: ['slug','commentId'],\r\n    deleteCommentSuccess: ['comment'],\r\n    deleteCommentError: ['error'],\r\n    getArticleComments: ['slug'],\r\n    articleCommentsSuccess: ['comments'],\r\n    articleCommentsError: ['error']\r\n})\r\nexport const CommentTypes = Types\r\nexport default Creators","import { create } from 'apisauce'\r\n\r\n//const tokens = {}\r\n\r\nconst API_ROOT = 'https://conduit.productionready.io/api';\r\n\r\n\r\nexport const ApiService = create({\r\n  baseURL: API_ROOT,\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 30000,\r\n})\r\n\r\nApiService.addResponseTransform((response) => {\r\n  if (response.ok) {\r\n    if (window.localStorage.getItem('jwt')) {\r\n      window.localStorage.getItem('jwt')\r\n    }\r\n  }\r\n})\r\nApiService.addRequestTransform((request) => {\r\n  if (window.localStorage.getItem('jwt')) {\r\n    request.headers.Authorization = `Token ${window.localStorage.getItem('jwt')}`\r\n  }\r\n})\r\n","import { ApiService } from '../ApiService'\r\n\r\nfunction getCurrentUser() {\r\n  return ApiService.get('/user')\r\n}\r\n\r\nfunction login(email,password) {\r\n    return ApiService.post('/users/login',{user : email,password})\r\n}\r\n\r\nfunction register(username,email,password) {\r\n    return ApiService.post('/users',{ user: username,email,password})\r\n}\r\n\r\nfunction save(user) {\r\n    return ApiService.put('/user',{ user })\r\n}\r\n\r\nfunction logout() {\r\n    return ApiService.post('/users/logout')\r\n}\r\n\r\nexport const AuthService = {\r\n    getCurrentUser,\r\n    login,\r\n    register,\r\n    save,\r\n    logout,\r\n}\r\n  ","import { ApiService } from '../ApiService'\r\n\r\nconst omitSlug = article => Object.assign({}, article, { slug: undefined })\r\nconst COUNT = 10\r\n\r\nfunction getArticles(page) {\r\n  return ApiService.get('/articles', {\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction getArticlesByAuthor(author,page) {\r\n  return ApiService.get('/articles', {\r\n    author: author,\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction getArticlesByTag(tag,page) {\r\n  return ApiService.get('/articles', {\r\n    tag: tag,\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction deleteArticle(slug) {\r\n  return ApiService.delete(`/articles/${slug}`)\r\n}\r\n\r\nfunction setFavoriteArticle(slug) {\r\n  return ApiService.post(`/articles/${slug}/favorite`)\r\n}\r\n\r\nfunction getFavouritedByArticle(author, page) {\r\n  return ApiService.get('/articles',{\r\n    author: author,\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction getFeed() {\r\n  return ApiService.get('/articles/feed',{\r\n    limit: COUNT,\r\n    offset: 0\r\n  })\r\n}\r\n\r\nfunction getArticle(slug) {\r\n  return ApiService.get(`/articles/${slug}`)\r\n}\r\n\r\nfunction unfavoriteArticle(slug) {\r\n  return ApiService.delete(`/articles/${slug}/favorite`)\r\n}\r\n\r\nfunction updateArticle(article) {\r\n  return ApiService.put(`/articles/${article.slug}`,{\r\n    article: omitSlug(article)\r\n  })\r\n}\r\n\r\nfunction createArticle(article) {\r\n  return ApiService.post('/articles',{article})\r\n}\r\n\r\nexport const ArticleService = {\r\n  getArticles,\r\n  getArticlesByAuthor,\r\n  getArticlesByTag,\r\n  deleteArticle,\r\n  setFavoriteArticle,\r\n  getFavouritedByArticle,\r\n  getFeed,\r\n  getArticle,\r\n  unfavoriteArticle,\r\n  updateArticle,\r\n  createArticle\r\n}\r\n","import { ApiService } from '../ApiService'\r\n\r\n\r\nfunction createComment(slug , comment) {\r\n  return ApiService.post(`/articles/${slug}/comments`, { comment })\r\n}\r\n\r\nfunction deleteComment(slug , commentId) {\r\n    return ApiService.delete(`/articles/${slug}/comments`, { commentId })\r\n}\r\n\r\nfunction getArticleComments(slug) {\r\n    return ApiService.get(`/articles/${slug}/comments`)\r\n}\r\n\r\nexport const CommentService = {\r\n    createComment,\r\n    deleteComment,\r\n    getArticleComments,\r\n  }\r\n  ","import { ApiService } from '../ApiService'\r\n\r\nfunction followUser(username) {\r\n  return ApiService.post(`/profiles/${username}/follow`)\r\n}\r\n\r\nfunction getProfile(username) {\r\n    return ApiService.post(`/profiles/${username}`)\r\n}\r\n\r\nfunction unfollowUser(username) {\r\n    return ApiService.delete(`/profiles/${username}/follow`)\r\n}\r\n\r\nexport const ProfileService = {\r\n    followUser,\r\n    getProfile,\r\n    unfollowUser,\r\n  }\r\n  ","import { ApiService } from '../ApiService'\r\n\r\nfunction getTags() {\r\n  return ApiService.get('/tags')\r\n}\r\n\r\nexport const TagService = {\r\n    getTags,\r\n  }","import { put, call} from 'redux-saga/effects'\r\nimport ArticleActions from '../Stores/Article/Actions'\r\nimport { ArticleService } from '../Services/Api'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get all Articles\r\nexport function* getArticles({ page }) {\r\n  const response = yield call(ArticleService.getArticles,page)\r\n  if (response.ok === true) {\r\n    console.log(response.data)\r\n    yield put(ArticleActions.articlesSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articlesError(response.data))\r\n}\r\n\r\n// get article by author\r\nexport function* getArticlesByAuthor({ author, page }) {\r\n  const response = yield call(ArticleService.getArticlesByAuthor,author,page)\r\n // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.getArticlesByAuthorSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.getArticlesByAuthorError(response.data))\r\n}\r\n\r\n// get article by tag\r\nexport function* getArticlesByTag({ tag,page }) {\r\n  const response = yield call(ArticleService.getArticlesByTag,tag,page)\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.articlesByTagSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articlesByTagError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* deleteArticle({ slug }) {\r\n  const response = yield call(ArticleService.deleteArticle,slug)\r\n   // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.deleteArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.deleteArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* setFavoriteArticle({ slug }) {\r\n  const response = yield call(ArticleService.setFavoriteArticle,slug)\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.favouriteArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.favouriteArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* getFavouritedByArticle({ author, page }) {\r\n  const response = yield call(ArticleService.getFavouritedByArticle, {author, page})\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.getArticleFavoritedBySuccess(response.data))\r\n    return\r\n    }\r\n  yield put(ArticleActions.getArticleFavoritedByError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* getFeed() {\r\n  const response = yield call(ArticleService.getFeed)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.feedSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.feedError(response.data)) \r\n}\r\n\r\n// delete article by slug\r\nexport function* getArticle({ slug }) {\r\n  const response = yield call(ArticleService.getArticle,{slug})\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    console.log(response.data)\r\n    yield put(ArticleActions.articleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* unfavoriteArticle({ slug }) {\r\n  const response = yield call(ArticleService.unfavoriteArticle,slug)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.unfavouriteArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.unfavouriteArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* updateArticle({ article }) {\r\n  const response = yield call(ArticleService.updateArticle, {article})\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.updateArticleSuccess(response.data))\r\n    return\r\n  }\r\n    yield put(ArticleActions.updateArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* createArticle({ article }) {\r\n  const response = yield call(ArticleService.createArticle, {article})\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.createArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.createArticleError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport AuthActions from '../Stores/Auth/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { AuthService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\nexport function* getCurrentUser() {\r\n  const response = yield call(AuthService.getCurrentUser)\r\n  if (response.ok === true) {\r\n    console.log(response.data)\r\n    yield put(AuthActions.currentUserSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.currentUserError(response.data))\r\n}\r\n\r\n// login user\r\nexport function* login({email,password}) {\r\n  const response = yield call(AuthService.login,{email,password})\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.loginSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.loginError(response.data))\r\n}\r\n\r\n// register new user\r\nexport function* register({username,email,password}) {\r\n  console.log(email)\r\n  const response = yield call(AuthService.register,{username,email,password})\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.loginSuccess(response.data))\r\n    return\r\n  }\r\n  console.log(response.data)\r\n  yield put(AuthActions.loginError(response.data))\r\n}\r\n\r\n// register new user\r\nexport function* save({user}) {\r\n  const response = yield call(AuthService.save,{ user })\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.saveSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.saveError(response.data))\r\n}\r\n\r\n// logout user\r\nexport function* logout() {\r\n  const response = yield call(AuthService.logout)\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.logoutSuccess())\r\n    return\r\n  }\r\n  yield put(AuthActions.logoutError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport CommentActions from '../Stores/Comment/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { CommentService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\nexport function* createComment() {\r\n  const response = yield call(CommentService.createComment)\r\n  if (response.ok === true) {\r\n    yield put(CommentActions.createCommentSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(CommentActions.createCommentError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* deleteComment({slug, commentId}) {\r\n  const response = yield call(CommentService.deleteComment,{slug, commentId})\r\n  if (response.ok === true) {\r\n    yield put(CommentActions.deleteCommentSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(CommentActions.deleteCommentError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* getArticleComments({slug}) {\r\n  const response = yield call(CommentService.getArticleComments,{ slug })\r\n  if (response.ok === true) {\r\n    console.log(response.data)\r\n    yield put(CommentActions.articleCommentsSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(CommentActions.articleCommentsError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport ProfileActions from '../Stores/Comment/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { ProfileService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\nexport function* followUser( {username}) {\r\n  const response = yield call(ProfileService.followUser,{username})\r\n  if (response.ok === true) {\r\n    yield put(ProfileActions.followUserSuccess(response.data))\r\n    return\r\n  }\r\n    yield put(ProfileActions.followUsertError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* getProfile({username}) {\r\n  const response = yield call(ProfileService.getProfile,{username})\r\n  if (response.ok === true) {\r\n    yield put(ProfileActions.getProfileSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ProfileActions.getProfileError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* unfollowUser({username}) {\r\n  const response = yield call(ProfileService.unfollowUser,{username})\r\n  if (response.ok === true) {\r\n    yield put(ProfileActions.unfollowUserSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ProfileActions.unfollowUserError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport TagActions from '../Stores/Tag/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { TagService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\n\r\nexport function* getTags() {\r\n  const response = yield call(TagService.getTags)\r\n  if (response.ok === true) {\r\n   yield put(TagActions.getTagsSuccess(response.data.tags))\r\n   return\r\n  }\r\n  yield put(TagActions.getTagsError(\"uchenna\"))\r\n}","import { takeLatest, all } from 'redux-saga/effects'\r\nimport { ArticleTypes } from '../Stores/Article/Actions'\r\nimport { AuthTypes } from '../Stores/Auth/Actions'\r\nimport { ProfileTypes } from '../Stores/Profile/Actions'\r\nimport { CommentTypes } from '../Stores/Comment/Actions'\r\nimport { TagTypes } from '../Stores/Tag/Actions'\r\n\r\nimport { \r\n  getArticles,\r\n  getArticlesByAuthor,\r\n  getArticlesByTag,\r\n  deleteArticle,\r\n  setFavoriteArticle,\r\n  getFavouritedByArticle,\r\n  getFeed,\r\n  getArticle,\r\n  unfavoriteArticle,\r\n  updateArticle,\r\n  createArticle } from './ArticleSaga'\r\nimport { \r\n  getCurrentUser,\r\n  login,\r\n  register,\r\n  save } from './AuthSaga'\r\nimport { \r\n  createComment,\r\n  deleteComment,\r\n  getArticleComments } from './CommentSaga'\r\nimport { \r\n  followUser,\r\n  getProfile,\r\n  unfollowUser } from './ProfileSaga'\r\nimport { getTags } from './TagSaga'\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeLatest(ArticleTypes.GET_ARTICLES, getArticles),\r\n    takeLatest(ArticleTypes.GET_ARTICLES_BY_AUTHOR, getArticlesByAuthor),\r\n    takeLatest(ArticleTypes.GET_ARTICLES_BY_TAG, getArticlesByTag),\r\n    takeLatest(ArticleTypes.DELETE_ARTICLE, deleteArticle),\r\n    takeLatest(ArticleTypes.SET_FAVOURITE_ARTICLE, setFavoriteArticle),\r\n    takeLatest(ArticleTypes.GET_FAVOURITED_BY_ARTICLE, getFavouritedByArticle),\r\n    takeLatest(ArticleTypes.GET_FEED, getFeed),\r\n    takeLatest(ArticleTypes.GET_ARTICLE, getArticle),\r\n    takeLatest(ArticleTypes.UNFAVOURITE_ARTICLE, unfavoriteArticle),\r\n    takeLatest(ArticleTypes.UPDATE_ARTICLE, updateArticle),\r\n    takeLatest(ArticleTypes.CREATE_ARTICLE, createArticle),\r\n\r\n    takeLatest(AuthTypes.GET_CURRENT_USER, getCurrentUser),\r\n    takeLatest(AuthTypes.LOGIN, login),\r\n    takeLatest(AuthTypes.REGISTER, register),\r\n    takeLatest(AuthTypes.SAVE, save),\r\n\r\n    takeLatest(CommentTypes.CREATE_COMMENT, createComment),\r\n    takeLatest(CommentTypes.DELETE_COMMENT, deleteComment),\r\n    takeLatest(CommentTypes.GET_ARTICLE_COMMENTS, getArticleComments),\r\n\r\n    takeLatest(ProfileTypes.FOLLOW_USER, followUser),\r\n    takeLatest(ProfileTypes.GET_PROFILE, getProfile),\r\n    takeLatest(ProfileTypes.UNFOLLOW_USER, unfollowUser),\r\n\r\n    takeLatest(TagTypes.GET_TAGS, getTags),\r\n\r\n  ])\r\n}","  export const INITIAL_STATE = {\r\n    articles: [],\r\n    article: {},\r\n    feeds: [],\r\n    articlesIsLoading: false,\r\n    articlesError: null,\r\n    articleIsLoading: false,\r\n    articleError: null,\r\n    articlesByAuthorIsLoading: false,\r\n    articlesByAuthorErrors: null,\r\n    articlesByTagIsLoading: false,\r\n    articlesByTagErrors: null,\r\n    deleteArticleIsLoading: false,\r\n    deleteArticleErrors: null,\r\n    getFavouritedByIsLoading: false,\r\n    getFavouritedByErrors: null,\r\n    getFeedIsLoading: false,\r\n    getFeedErrors: null,\r\n    unfavoriteArticleIsLoading: false,\r\n    unfavoriteArticleErrors: null,\r\n    updateArticleIsLoading: false,\r\n    updateArticleErrors: null,\r\n    createArticleIsLoading: false,\r\n    createArticleErrors: null,\r\n    redirectTo: null,\r\n    currentPage: 0,\r\n    articlesCount: 0,\r\n    tab: null,\r\n    pager: null,\r\n    tags: []\r\n  }\r\n  ","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { ArticleTypes } from './Actions'\r\n\r\nexport const getArticles = (state) => ({\r\n  ...state,\r\n  articlesIsLoading: true,\r\n  articlesErrors: null,\r\n})\r\n\r\nexport const articlesSuccess = (state, { payload }) => ({\r\n  ...state,\r\n  articles: payload.articles,\r\n  articlesCount: payload.articlesCount,\r\n  articlesIsLoading: false,\r\n  articlesErrors: null,\r\n})\r\n\r\nexport const articlesError = (state, errors) => ({\r\n  ...state,\r\n  articlesIsLoading: false,\r\n  articlesErrors: errors,\r\n  articles: INITIAL_STATE.articles,\r\n})\r\n\r\nexport const getArticle = (state) => ({\r\n  ...state,\r\n  articleIsLoading: true,\r\n  articleErrors: null,\r\n})\r\n\r\nexport const articleSuccess = (state, { article }) => ({\r\n    ...state,\r\n    articles: INITIAL_STATE.articles,\r\n    article: article,\r\n    articleIsLoading: false,\r\n    articleErrors: null,\r\n  })\r\n  \r\nexport const articleError = (state, {errors}) => ({\r\n...state,\r\narticleIsLoading: false,\r\narticleErrors: errors,\r\narticle: INITIAL_STATE.article,\r\n})\r\n  \r\nexport const resetAll = () => ({\r\n  ...INITIAL_STATE,\r\n})\r\n\r\nexport const getArticlesByAuthor = (state) => ({\r\n    ...state,\r\n    articlesByAuthorIsLoading: true,\r\n    articlesByAuthorErrors: null,\r\n  })\r\n  \r\nexport const articlesByAuthorSuccess = (state, { articles }) => ({\r\n    ...state,\r\n    articles: state.articles.length <= 0 ? articles : state.articles.concat(articles),\r\n    articlesByAuthorIsLoading: false,\r\n    articlesByAuthorErrors: null,\r\n})\r\n    \r\nexport const articlesByAuthorError = (state, {errors}) => ({\r\n    ...state,\r\n    articlesByAuthorIsLoading: false,\r\n    articlesByAuthorErrors: errors,\r\n    articles: INITIAL_STATE.articles,\r\n})\r\n\r\nexport const getArticlesByTag = (state) => ({\r\n    ...state,\r\n    articlesByTagIsLoading: true,\r\n    articlesByTagErrors: null,\r\n  })\r\n  \r\nexport const articlesByTagSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    articles: payload.articles,\r\n    articlesCount: payload.articlesCount,\r\n    articlesByTagIsLoading: false,\r\n    articlesByTagErrors: null,\r\n})\r\n    \r\nexport const articlesByTagError = (state, {errors}) => ({\r\n    ...state,\r\n    articlesByTagIsLoading: false,\r\n    articlesByTagErrors: errors,\r\n    articles: INITIAL_STATE.articles,\r\n})\r\n\r\nexport const deleteArticle = (state) => ({\r\n    ...state,\r\n    deleteArticleIsLoading: true,\r\n    deleteArticleErrors: null,\r\n  })\r\n  \r\nexport const deleteArticleSuccess = (state) => ({\r\n    ...state,\r\n    deleteArticleIsLoading: false,\r\n    deleteArticleErrors: null,\r\n    redirectTo: '/',\r\n})\r\n    \r\nexport const deleteArticleError = (state, {errors}) => ({\r\n    ...state,\r\n    deleteArticleIsLoading: false,\r\n    deleteArticleErrors: errors,\r\n    articles: INITIAL_STATE.articles,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n})\r\n\r\nexport const setFavouriteArticle = (state, { slug }) => ({\r\n    ...state,\r\n    slug: slug,\r\n    setFavouriteArticleIsLoading: true,\r\n    setFavouriteArticleErrors: null,\r\n  })\r\n  \r\nexport const favouriteArticleSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    articles: state.articles.map(article => {\r\n      if (article.slug === payload.article.slug) {\r\n        return {\r\n          ...article,\r\n          favorited: payload.article.favorited,\r\n          favoritesCount: payload.article.favoritesCount\r\n        };\r\n      }\r\n      return article;\r\n    }),\r\n    setFavouriteArticleIsLoading: false,\r\n    setFavouriteArticleErrors: null,\r\n})\r\n    \r\nexport const favouriteArticleError = (state, {error}) => ({\r\n    ...state,\r\n    setFavouriteArticleIsLoading: false,\r\n    setFavouriteArticleErrors: error,\r\n})\r\n\r\nexport const getFavouritedByArticle = (state) => ({\r\n    ...state,\r\n    getFavouritedByIsLoading: true,\r\n    getFavouritedByErrors: null,\r\n  })\r\n  \r\nexport const favouritedByArticleSuccess = (state) => ({\r\n    ...state,\r\n    getFavouritedByIsLoading: false,\r\n    getFavouritedByErrors: null,\r\n})\r\n    \r\nexport const favouritedByArticleError = (state, {errors}) => ({\r\n    ...state,\r\n    getFavouritedByIsLoading: false,\r\n    getFavouritedByErrors: errors,\r\n})\r\n\r\nexport const getFeed = (state) => ({\r\n    ...state,\r\n    getFeedIsLoading: true,\r\n    getFeedErrors: null,\r\n  })\r\n  \r\nexport const feedSuccess = (state) => ({\r\n    ...state,\r\n    getFeedIsLoading: false,\r\n    getFeedErrors: null,\r\n})\r\n    \r\nexport const feedError = (state, {errors}) => ({\r\n    ...state,\r\n    getFeedIsLoading: false,\r\n    getFeedErrors: errors,\r\n})\r\n\r\nexport const unfavouriteArticle = (state) => ({\r\n    ...state,\r\n    unfavoriteArticleIsLoading: true,\r\n    unfavoriteArticleErrors: null,\r\n  })\r\n  \r\nexport const unfavouriteArticleSuccess = (state,{ payload }) => ({\r\n    ...state,\r\n    articles: state.articles.map(article => {\r\n      if (article.slug === payload.article.slug) {\r\n        return {\r\n          ...article,\r\n          favorited: payload.article.favorited,\r\n          favoritesCount: payload.article.favoritesCount\r\n        };\r\n      }\r\n      return article;\r\n    }),\r\n    unfavoriteArticleIsLoading: false,\r\n    unfavoriteArticleErrors: null,\r\n})\r\n    \r\nexport const unfavouriteArticleError = (state, {errors}) => ({\r\n    ...state,\r\n    unfavoriteArticleIsLoading: false,\r\n    unfavoriteArticleErrors: errors,\r\n})\r\n\r\nexport const updateArticle = (state) => ({\r\n    ...state,\r\n    updateArticleIsLoading: true,\r\n    updateArticleErrors: null,\r\n  })\r\n  \r\nexport const updateArticleSuccess = (state) => ({\r\n    ...state,\r\n    updateArticleIsLoading: false,\r\n    updateArticleErrors: null,\r\n})\r\n    \r\nexport const updateArticleleError = (state, {errors}) => ({\r\n    ...state,\r\n    updateArticleIsLoading: false,\r\n    updateArticleErrors: errors,\r\n})\r\n\r\nexport const createArticle = (state) => ({\r\n    ...state,\r\n    createArticleIsLoading: true,\r\n    createArticleErrors: null,\r\n  })\r\n  \r\nexport const createArticleSuccess = (state,{article}) => ({\r\n    ...state,\r\n    redirectTo: `/article/${article.slug}`,\r\n    createArticleIsLoading: false,\r\n    createArticleErrors: null,\r\n})\r\n    \r\nexport const createArticleleError = (state, {errors}) => ({\r\n    ...state,\r\n    createArticleIsLoading: false,\r\n    createArticleErrors: errors,\r\n})\r\n\r\nexport const setPage = (state,{ payload }) => ({\r\n  ...state,\r\n  articles: payload.articles,\r\n  articlesCount: payload.articlesCount,\r\n  currentPage:  payload.page\r\n})\r\n\r\nexport const applyTagFilter = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  articles: action.payload.articles,\r\n  articlesCount: action.payload.articlesCount,\r\n  tab: null,\r\n  tag: action.tag,\r\n  currentPage: 0\r\n})\r\n\r\nexport const homePageLoaded = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  tags: action.payload[0].tags,\r\n  articles: action.payload[1].articles,\r\n  articlesCount: action.payload[1].articlesCount,\r\n  currentPage: 0,\r\n  tab: action.tab\r\n})\r\n\r\nexport const changeTabs = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  articles: action.articles,\r\n  articlesCount: action.articlesCount,\r\n  tab: action.tab,\r\n  currentPage: 0,\r\n  tag: null\r\n})\r\nexport const profilePageLoaded = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  articles: action.payload[1].articles,\r\n  articlesCount: action.payload[1].articlesCount,\r\n  currentPage: 0\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  [ArticleTypes.GET_ARTICLES]: getArticles,\r\n  [ArticleTypes.ARTICLES_SUCCESS]: articlesSuccess,\r\n  [ArticleTypes.ARTICLES_ERROR]: articlesError,\r\n  [ArticleTypes.GET_ARTICLE]: getArticle,\r\n  [ArticleTypes.ARTICLE_SUCCESS]: articleSuccess,\r\n  [ArticleTypes.ARTICLE_ERROR]: articleError,\r\n  [ArticleTypes.GET_ARTICLES_BY_AUTHOR]: getArticlesByAuthor,\r\n  [ArticleTypes.ARTICLES_BY_AUTHOR_SUCCESS]: articlesByAuthorSuccess,\r\n  [ArticleTypes.ARTICLES_BY_AUTHOR_ERROR]: articlesByAuthorError,\r\n  [ArticleTypes.GET_ARTICLES_BY_TAG]: getArticlesByTag,\r\n  [ArticleTypes.ARTICLES_BY_TAG_SUCCESS]: articlesByTagSuccess,\r\n  [ArticleTypes.ARTICLES_BY_TAG_ERROR]: articlesByTagError,\r\n  [ArticleTypes.DELETE_ARTICLE]: deleteArticle,\r\n  [ArticleTypes.DELETE_ARTICLE_SUCCESS]: deleteArticleSuccess,\r\n  [ArticleTypes.DELETE_ARTICLE_ERROR]: deleteArticleError,\r\n  [ArticleTypes.SET_FAVOURITE_ARTICLE]: setFavouriteArticle,\r\n  [ArticleTypes.FAVOURITE_ARTICLE_SUCCESS]: favouriteArticleSuccess,\r\n  [ArticleTypes.FAVOURITE_ARTICLE_ERROR]: favouriteArticleError,\r\n  [ArticleTypes.GET_FAVOURITED_BY_ARTICLE]: getFavouritedByArticle,\r\n  [ArticleTypes.FAVOURITED_BY_ARTICLE_SUCCESS]: favouritedByArticleSuccess,\r\n  [ArticleTypes.FAVOURITED_BY_ARTICLE_ERROR]: favouritedByArticleError,\r\n  [ArticleTypes.UNFAVOURITE_ARTICLE]: unfavouriteArticle,\r\n  [ArticleTypes.UNFAVOURITE_ARTICLE_SUCCESS]: unfavouriteArticleSuccess,\r\n  [ArticleTypes.UNFAVOURITE_ARTICLE_ERROR]: unfavouriteArticleError,\r\n  [ArticleTypes.GET_FEED]: getFeed,\r\n  [ArticleTypes.FEED_SUCCESS]: feedSuccess,\r\n  [ArticleTypes.FEED_ERROR]: feedError,\r\n  [ArticleTypes.UPDATE_ARTICLE]: updateArticle,\r\n  [ArticleTypes.UPDATE_ARTICLE_SUCCESS]: updateArticleSuccess,\r\n  [ArticleTypes.UPDATE_ARTICLE_ERROR]: updateArticleleError,\r\n  [ArticleTypes.CREATE_ARTICLE]: createArticle,\r\n  [ArticleTypes.CREATE_ARTICLE_SUCCESS]: createArticleSuccess,\r\n  [ArticleTypes.CREATE_ARTICLE_ERROR]: createArticleleError,\r\n  [ArticleTypes.SET_PAGE]: setPage,\r\n  [ArticleTypes.APPLY_TAG_FILTER]: applyTagFilter,\r\n  [ArticleTypes.HOME_PAGE_LOADED]: homePageLoaded,\r\n  [ArticleTypes.CHANGE_TABS]: changeTabs,\r\n  [ArticleTypes.PROFILE_PAGE_LOADED]: profilePageLoaded\r\n})\r\n","export const INITIAL_STATE = {\r\n    user: {},\r\n    getcurrentUserIsLoading: false,\r\n    getcurrentUserErrors: null,\r\n    saveIsLoading: false,\r\n    saveErrors: null,\r\n    registerIsLoading: false,\r\n    registerErrors: null,\r\n    redirectTo: null,\r\n    token: null,\r\n    currentUser: {},\r\n    inProgress: false,\r\n    loginIsLoading: false,\r\n    loginErrors: null,\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { AuthTypes } from './Actions'\r\n\r\nexport const getCurrentUser = (state) => ({\r\n  ...state,\r\n  getcurrentUserIsLoading: true,\r\n  getcurrentUserErrors: null,\r\n})\r\n\r\nexport const currentUserSuccess = (state, { payload } ) => ({\r\n...state,\r\nuser: payload.user,\r\ncurrentUser: payload.user,\r\ngetcurrentUserIsLoading: false,\r\ngetcurrentUserErrors: null,\r\n})\r\n\r\nexport const currentUserError = (state, {error}) => ({\r\n...state,\r\ngetcurrentUserIsLoading: false,\r\ngetcurrentUserErrors: error,\r\nuser: INITIAL_STATE.user,\r\n})\r\n\r\nexport const login = (state) => ({\r\n    ...state,\r\n    loginIsLoading: true,\r\n    loginErrors: null,\r\n})\r\n  \r\nexport const loginSuccess = (state, { payload } ) => ({\r\n    ...state,\r\n    user: payload.user,\r\n    redirectTo: '/',\r\n    token: payload.user.token,\r\n    currentUser: payload.user,\r\n    loginIsLoading: false,\r\n    loginErrors: null,\r\n})\r\n  \r\n  export const loginError = (state, {error}) => ({\r\n    ...state,\r\n    loginIsLoading: false,\r\n    loginErrors: error,\r\n    user: INITIAL_STATE.user,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    token: INITIAL_STATE.token,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n})\r\n\r\nexport const register = (state) => ({\r\n    ...state,\r\n    registerIsLoading: true,\r\n    registerErrors: null,\r\n})\r\n  \r\nexport const registerSuccess = (state, {user,token,currentUser} ) => ({\r\n    ...state,\r\n    user: user,\r\n    redirectTo: '/',\r\n    token: token,\r\n    currentUser: currentUser,\r\n    registerIsLoading: false,\r\n    registerErrors: null,\r\n})\r\n  \r\nexport const registerError = (state, {error}) => ({\r\n    ...state,\r\n    registerIsLoading: false,\r\n    registerErrors: error,\r\n    user: INITIAL_STATE.user,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    token: INITIAL_STATE.token,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n})\r\n\r\nexport const save = (state) => ({\r\n    ...state,\r\n    saveIsLoading: true,\r\n    saveErrors: null,\r\n})\r\n  \r\nexport const saveSuccess = (state, {user, currentUser } ) => ({\r\n    ...state,\r\n    user: user,\r\n    redirectTo: '/',\r\n    currentUser: currentUser,\r\n    saveIsLoading: false,\r\n    saveErrors: null,\r\n})\r\n  \r\nexport const saveError = (state, {error}) => ({\r\n    ...state,\r\n    saveIsLoading: false,\r\n    saveErrors: error,\r\n    user: INITIAL_STATE.user,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n})\r\n\r\nexport const logout = (state) => ({\r\n    ...state,\r\n    getcurrentUserIsLoading: true,\r\n    getcurrentUserErrors: null,\r\n})\r\n  \r\nexport const logoutSuccess = (state) => ({\r\n    ...state,\r\n    redirectTo: '/',\r\n    token: null,\r\n    currentUser: null,\r\n    logoutIsLoading: false,\r\n    logoutErrors: null,\r\n})\r\n  \r\nexport const logoutError = (state, {error}) => ({\r\n    ...state,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    token: INITIAL_STATE.token,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n    logoutIsLoading: false,\r\n    logoutErrors: error,\r\n})\r\n\r\nexport const setToken = (state, {token}) => ({\r\n    ...state,\r\n  token: token,\r\n})\r\n\r\nexport const updateFieldAuth = (state, {action}) => ({\r\n    ...state,\r\n[action.key]: action.value\r\n})\r\n\r\nexport const asyncStart = (state) => ({\r\n    ...state,\r\ninProgress: true \r\n})\r\nexport const asyncEnd = (state) => ({\r\n    ...state,\r\ninProgress: false\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [AuthTypes.GET_CURRENT_USER]: getCurrentUser,\r\n    [AuthTypes.CURRENT_USER_SUCCESS]: currentUserSuccess,\r\n    [AuthTypes.CURRENT_USER_ERROR]: currentUserError,\r\n    [AuthTypes.LOGIN]: login,\r\n    [AuthTypes.LOGIN_SUCCESS]: loginSuccess,\r\n    [AuthTypes.LOGIN_ERROR]: loginError,\r\n    [AuthTypes.REGISTER]: register,\r\n    [AuthTypes.REGISTER_SUCCESS]: registerSuccess,\r\n    [AuthTypes.REGISTER_ERROR]: registerError,\r\n    [AuthTypes.SAVE]: save,\r\n    [AuthTypes.SAVE_SUCCESS]: saveSuccess,\r\n    [AuthTypes.SAVE_ERROR]: saveError,\r\n    [AuthTypes.SET_TOKEN]: setToken,\r\n    [AuthTypes.UPDATE_FIELD_AUTH]: updateFieldAuth,\r\n    [AuthTypes.ASYNC_START]: asyncStart,\r\n    [AuthTypes.ASYNC_END]: asyncEnd,\r\n  })\r\n  ","export const INITIAL_STATE = {\r\n    comments: [],\r\n    createCommenIsLoading: false,\r\n    createCommenErrors: null,\r\n    deleteCommentIsLoading: false,\r\n    deleteCommentErrors: null,\r\n    getArticleCommentsIsLoading: false,\r\n    getArticleCommentsErrors: null,\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { CommentTypes } from './Actions'\r\n\r\nexport const createComment = (state) => ({\r\n  ...state,\r\n  createCommenIsLoading: true,\r\n  createCommenErrors: null,\r\n})\r\n\r\nexport const createCommentSuccess = (state) => ({\r\n    ...state,\r\n    createCommenIsLoading: false,\r\n    createCommenErrors: null,\r\n})\r\n\r\n  export const createCommentError = (state,{error}) => ({\r\n    ...state,\r\n    createCommenIsLoading: false,\r\n    createCommentErrors: error,\r\n})\r\n\r\nexport const deleteComment = (state) => ({\r\n    ...state,\r\n    deleteCommentIsLoading: true,\r\n    deleteCommentErrors: null,\r\n  })\r\n  \r\n  export const deleteCommentSuccess = (state, {commentId}) => ({\r\n      ...state,\r\n      comments: state.comment.filter(comment => comment.id !== commentId),\r\n      deleteCommentIsLoading: false,\r\n      deleteCommentErrors: null,\r\n  })\r\n  \r\n    export const deleteCommentError = (state, {error} ) => ({\r\n      ...state,\r\n      deleteCommentIsLoading: false,\r\n      deleteCommentErrors: error,\r\n  })\r\n\r\nexport const getArticleComments = (state) => ({\r\n    ...state,\r\n    getArticleCommentsIsLoading: true,\r\n    getArticleCommentsErrors: null,\r\n})\r\n  \r\nexport const articleCommentsSuccess = (state,{comments}) => ({\r\n    ...state,\r\n    comments: comments,\r\n    getArticleCommentsIsLoading: false,\r\n    getArticleCommentsErrors: null,\r\n})\r\n  \r\nexport const articleCommentsError = (state,{error}) => ({\r\n    ...state,\r\n    getArticleCommentsIsLoading: false,\r\n    getArticleCommentsErrors: error,\r\n    comments: INITIAL_STATE.comments,\r\n})\r\n\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [CommentTypes.CREATE_COMMENT]: createComment,\r\n    [CommentTypes.CREATE_COMMENT_SUCCESS]: createCommentSuccess,\r\n    [CommentTypes.CREATE_COMMENT_ERROR]: createCommentError,\r\n    [CommentTypes.DELETE_COMMENT]: deleteComment,\r\n    [CommentTypes.DELETE_COMMENT_SUCCESS]: deleteCommentSuccess,\r\n    [CommentTypes.DELETE_COMMENT_ERROR]: deleteCommentError,\r\n    [CommentTypes.GET_ARTICLE_COMMENTS]: getArticleComments,\r\n    [CommentTypes.ARTICLE_COMMENTS_SUCCESS]: articleCommentsSuccess,\r\n    [CommentTypes.ARTICLE_COMMENTS_ERROR]: articleCommentsError,\r\n  })\r\n  ","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { ProfileTypes } from './Actions'\r\n\r\nexport const followUser = (state) => ({\r\n  ...state,\r\n  followUserIsLoading: true,\r\n  followUserErrors: null,\r\n})\r\n\r\nexport const followUserSuccess = (state, {action}) => ({\r\n    ...state,\r\n    ...action.payload.profile,\r\n    followUserIsLoading: false,\r\n    followUserErrors: null,\r\n})\r\nexport const followUserError = (state, {error}) => ({\r\n    ...state,\r\n    followUserIsLoading: false,\r\n    followUserErrors: error,\r\n})\r\n\r\nexport const getProfile = (state) => ({\r\n    ...state,\r\n    getProfileIsLoading: true,\r\n    getProfileErrors: null,\r\n})\r\n  \r\nexport const profileSuccess = (state, { profile }) => ({\r\n    ...state,\r\n    profile : profile,\r\n    getProfileIsLoading: false,\r\n    getProfileErrors: null,\r\n})\r\n\r\nexport const profileError = (state, {error}) => ({\r\n    ...state,\r\n    getProfileIsLoading: false,\r\n    getProfileErrors: error,\r\n})\r\n\r\nexport const unfollowUser = (state) => ({\r\n    ...state,\r\n    unfollowUserIsLoading: true,\r\n    unfollowUserErrors: null,\r\n})\r\n  \r\nexport const unfollowUserSuccess = (state,{action}) => ({\r\n    ...state,\r\n    ...action.payload.profile,\r\n    unfollowUserIsLoading: false,\r\n    unfollowUserErrors: null,\r\n})\r\n\r\nexport const unfollowUserError = (state, {error}) => ({\r\n    ...state,\r\n    unfollowUserIsLoading: false,\r\n    unfollowUserErrors: error,\r\n})\r\n\r\nexport const profilePageLoaded = (state, {action}) => ({\r\n    ...state,\r\n    ...action.payload[0].profile\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [ProfileTypes.FOLLOW_USER]: followUser,\r\n    [ProfileTypes.FOLLOW_USER_SUCCESS]: followUserSuccess,\r\n    [ProfileTypes.FOLLOW_USER_ERROR]: followUserError,\r\n    [ProfileTypes.GET_PROFILE]: getProfile,\r\n    [ProfileTypes.PROFILE_SUCCESS]: profileSuccess,\r\n    [ProfileTypes.PROFILE_ERROR]: profileError,\r\n    [ProfileTypes.PROFILE_PAGE_LOADED]: profilePageLoaded,\r\n  })\r\n  ","export const INITIAL_STATE = {\r\n    profile: {},\r\n    followUserIsLoading: false,\r\n    followUserErrors: null,\r\n    getProfileIsLoading: false,\r\n    getProfileErrors: null,\r\n    unfollowUserIsLoading: false,\r\n    unfollowUserErrors: null,\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { TagTypes } from './Actions'\r\n\r\nexport const getTags = (state) => ({\r\n  ...state,\r\n  getTagsIsLoading: true,\r\n  getTagsErrors: null,\r\n})\r\n\r\nexport const getTagsSuccess = (state, {tags}) => ({\r\n    ...state,\r\n    tags: tags,\r\n    getTagsIsLoading: false,\r\n    getTagsErrors: null,\r\n})\r\n\r\nexport const getTagsError = (state, { error }) => ({\r\n    ...state,\r\n    getTagsIsLoading: false,\r\n    getTagsErrors: error,\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [TagTypes.GET_TAGS]: getTags,\r\n    [TagTypes.GET_TAGS_SUCCESS]: getTagsSuccess,\r\n    [TagTypes.GET_TAGS_ERROR]: getTagsError\r\n    \r\n  })\r\n  ","export const INITIAL_STATE = {\r\n    tags: [],\r\n    getTagsIsLoading: false,\r\n    getTagsErrors: null,\r\n}","export const INITIAL_STATE = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0,\r\n    redirectTo: null,\r\n    currentUser: {},\r\n    appLoaded: false,\r\n    skipTracking: false\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { CommonTypes } from './Actions'\r\n\r\nexport const appLoad = (state,{user,token,skipTracking}) => ({\r\n  ...state,\r\n  token: token,\r\n  appLoaded: true,\r\n  currentUser: user,\r\n  skipTracking: skipTracking\r\n})\r\n\r\nexport const redirect = (state) => ({\r\n  ...state,\r\n  redirectTo: INITIAL_STATE.redirectTo,\r\n})\r\n\r\nexport const pageUnloaded = (state) => ({\r\n  ...state,\r\n  viewChangeCounter: INITIAL_STATE.redirectTo + 1,\r\n})\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [CommonTypes.APP_LOAD]: appLoad,\r\n    [CommonTypes.REDIRECT]: redirect,\r\n    [CommonTypes.PAGE_UNLOADED]: pageUnloaded,\r\n  })\r\n  ","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    editorPageLoaded: ['action'],\r\n    articleSubmitted: null,\r\n    articleSubmittedSuccess: ['action'],\r\n    articleSubmittedError: ['error'],\r\n    addTag: null,\r\n    removeTag: ['action'],\r\n    updateFieldEditor: ['action'],\r\n})\r\nexport const EditorTypes = Types\r\nexport default Creators","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { EditorTypes } from './Actions'\r\n\r\nexport const editorPageLoaded = (state, { action }) => ({\r\n  ...state,\r\n  articleSlug: action.payload ? action.payload.article.slug : '',\r\n  title: action.payload ? action.payload.article.title : '',\r\n  description: action.payload ? action.payload.article.description : '',\r\n  body: action.payload ? action.payload.article.body : '',\r\n  tagInput: '',\r\n  tagList: action.payload ? action.payload.article.tagList : []\r\n \r\n})\r\nexport const articleSubmitted = (state) => ({\r\n  ...state,\r\n  inProgress: true,\r\n  articleSubmittedIsLoading: true,\r\n  articleSubmittedErrors: null,\r\n})\r\nexport const articleSubmittedSuccess = (state, { action }) => ({\r\n  ...state,\r\n  inProgress: null,\r\n  articleSubmittedIsLoading: false,\r\n  articleSubmittedErrors: action.payload.errors,\r\n})\r\nexport const articleSubmittedError = (state, { action }) => ({\r\n  ...state,\r\n  inProgress: null,\r\n  articleSubmittedIsLoading: false,\r\n  articleSubmittedErrors: action.payload.errors,\r\n})\r\n\r\nexport const addTag = (state) => ({\r\n  ...state,\r\n  tagList: state.tagList.concat([state.tagInput]),\r\n  tagInput: ''\r\n})\r\n\r\nexport const removeTag = (state, {action}) => ({\r\n  ...state,\r\n  tagList: state.tagList.filter(tag => tag !== action.tag)\r\n})\r\n\r\nexport const updateFieldEditor = (state, {action}) => ({\r\n  ...state,\r\n  [action.key]: action.value \r\n})\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [EditorTypes.EDITOR_PAGE_LOADED]: editorPageLoaded,\r\n    [EditorTypes.ARTICLE_SUBMITTED]: articleSubmitted,\r\n    [EditorTypes.ARTICLE_SUBMITTED_SUCCESS]: articleSubmittedSuccess,\r\n    [EditorTypes.ARTICLE_SUBMITTED_ERROR]: articleSubmittedError,\r\n    [EditorTypes.ADD_TAG]: addTag,\r\n    [EditorTypes.REMOVE_TAG]: removeTag,\r\n    [EditorTypes.UPDATE_FIELD_EDITOR]: updateFieldEditor,\r\n  })","export const INITIAL_STATE = {\r\n    tags: [],\r\n}","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    homePageLoaded: ['action'],\r\n})\r\nexport const HomeTypes = Types\r\nexport default Creators","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { HomeTypes } from './Actions'\r\n\r\nexport const homePageLoaded = (state,{action}) => ({\r\n  ...state,\r\n  tags: action.payload[0].tags\r\n})\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [HomeTypes.HOME_PAGE_LOADED]: homePageLoaded,\r\n  })","export const INITIAL_STATE = {\r\n    tags: []\r\n}","import { combineReducers } from 'redux'\r\nimport configureStore from './createStore'\r\nimport rootSaga from '../Sagas'\r\nimport { reducer as ArticleReducer } from './Article/Reducers'\r\nimport { reducer as AuthReducer } from './Auth/Reducers'\r\nimport { reducer as CommentReducer } from './Comment/Reducers'\r\nimport { reducer as ProfileReducer } from './Profile/Reducers'\r\nimport { reducer as TagReducer } from './Tag/Reducers'\r\nimport { reducer as CommonReducer } from './Common/Reducers'\r\nimport { reducer as EditorReducer } from './Editor/Reducers'\r\nimport { reducer as HomeReducer } from './Home/Reducers'\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nexport default () => {\r\n  const rootReducer = combineReducers({\r\n    article: ArticleReducer,\r\n    auth: AuthReducer,\r\n    comment: CommentReducer,\r\n    profile: ProfileReducer,\r\n    tag: TagReducer,\r\n    common: CommonReducer,\r\n    editor: EditorReducer,\r\n    home: HomeReducer,\r\n    router: routerReducer,\r\n  })\r\n  return configureStore(rootReducer, rootSaga)\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types'\r\n\r\n\r\nconst LoggedOutView = (props) => {\r\n  if (!props.currentUser) {\r\n    return (\r\n      <ul className=\"nav navbar-nav pull-xs-right\">\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Sign in\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Sign up\r\n          </Link>\r\n        </li>\r\n\r\n      </ul>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nLoggedOutView.propTypes = {\r\n  currentUser: PropTypes.object\r\n}\r\n\r\nconst LoggedInView = (props) => {\r\n  if (props.currentUser) {\r\n    return (\r\n      <ul className=\"nav navbar-nav pull-xs-right\">\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/editor\" className=\"nav-link\">\r\n            <i className=\"ion-compose\"></i>&nbsp;New Post\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/settings\" className=\"nav-link\">\r\n            <i className=\"ion-gear-a\"></i>&nbsp;Settings\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            to={`/@${props.currentUser.username}`}\r\n            className=\"nav-link\">\r\n            <img src={props.currentUser.image} className=\"user-pic\" alt={props.currentUser.username} />\r\n            {props.currentUser.username}\r\n          </Link>\r\n        </li>\r\n\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nLoggedInView.propTypes = {\r\n  currentUser: PropTypes.object\r\n}\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light\">\r\n        <div className=\"container\">\r\n\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            {this.props.appName.toLowerCase()}\r\n          </Link>\r\n\r\n          <LoggedOutView currentUser={this.props.currentUser} />\r\n\r\n          <LoggedInView currentUser={this.props.currentUser} />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  appName: PropTypes.string,\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst PerformActions = (props) => {\r\n  const article = props.article;\r\n  const del = () => {\r\n    props.onClickDelete(article.slug)\r\n  };\r\n  if (props.canModify) {\r\n    return (\r\n      <span>\r\n\r\n        <Link\r\n          to={`/editor/${article.slug}`}\r\n          className=\"btn btn-outline-secondary btn-sm\">\r\n          <i className=\"ion-edit\"></i> Edit Article\r\n        </Link>\r\n\r\n        <button className=\"btn btn-outline-danger btn-sm\" onClick={del}>\r\n          <i className=\"ion-trash-a\"></i> Delete Article\r\n        </button>\r\n\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n    </span>\r\n  );\r\n};\r\nPerformActions.propTypes = {\r\n  article: PropTypes.object,\r\n  onClickDelete: PropTypes.func,\r\n  canModify: PropTypes.bool,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickDelete: slug =>\r\n    dispatch(ArticleActions.deleteArticle(slug))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(PerformActions);\r\n","import PerformActions from './PerformActions';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst ArticleMeta = (props) => {\r\n  const article = props.article;\r\n  return (\r\n    <div className=\"article-meta\">\r\n      <Link to={`/@${article.author.username}`}>\r\n        <img src={article.author.image} alt={article.author.username} />\r\n      </Link>\r\n\r\n      <div className=\"info\">\r\n        <Link to={`/@${article.author.username}`} className=\"author\">\r\n          {article.author.username}\r\n        </Link>\r\n        <span className=\"date\">\r\n          {new Date(article.createdAt).toDateString()}\r\n        </span>\r\n      </div>\r\n\r\n      <PerformActions canModify={props.canModify} article={article} />\r\n    </div>\r\n  );\r\n};\r\nArticleMeta.propTypes = {\r\n  article: PropTypes.object,\r\n  canModify: PropTypes.bool,\r\n}\r\nexport default ArticleMeta;\r\n","import React from 'react';\r\nimport CommentAtions from '../../Stores/Comment/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass CommentInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      body: ''\r\n    };\r\n\r\n    this.setBody = ev => {\r\n      this.setState({ body: ev.target.value });\r\n    };\r\n\r\n    this.createComment = ev => {\r\n      ev.preventDefault();\r\n      const slug = this.props.slug\r\n      const comment  =  this.state.body;\r\n      this.setState({ body: '' });\r\n      this.props.onSubmit(slug,comment);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"card comment-form\" onSubmit={this.createComment}>\r\n        <div className=\"card-block\">\r\n          <textarea className=\"form-control\"\r\n            placeholder=\"Write a comment...\"\r\n            value={this.state.body}\r\n            onChange={this.setBody}\r\n            rows=\"3\">\r\n          </textarea>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <img\r\n            src={this.props.currentUser.image}\r\n            className=\"comment-author-img\"\r\n            alt={this.props.currentUser.username} />\r\n          <button\r\n            className=\"btn btn-sm btn-primary\"\r\n            type=\"submit\">\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nCommentInput.propTypes = {\r\n  comments: PropTypes.array,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (slug,comment) =>\r\n    dispatch(CommentAtions.createComment(slug,comment))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(CommentInput);\r\n","import React from 'react';\r\nimport CommentActions from '../../Stores/Comment/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst DeleteButton = (props) => {\r\n  const del = () => {\r\n    props.onClick(props.slug, props.commentId);\r\n  };\r\n\r\n  if (props.show) {\r\n    return (\r\n      <span className=\"mod-options\">\r\n        <i className=\"ion-trash-a\" onClick={del}></i>\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nDeleteButton.propTypes = {\r\n  commentId: PropTypes.integer,\r\n  show: PropTypes.bool,\r\n  slug: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: (slug, commentId) =>\r\n    dispatch(CommentActions.deleteComment(slug,commentId))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(DeleteButton);\r\n","import DeleteButton from './DeleteButton';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst Comment = (props) => {\r\n  const comment = props.comment;\r\n  const show = props.currentUser &&\r\n    this.props.currentUser.username === comment.author.username;\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-block\">\r\n        <p className=\"card-text\">{comment.body}</p>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <Link\r\n          to={`/@${comment.author.username}`}\r\n          className=\"comment-author\">\r\n          <img src={comment.author.image} className=\"comment-author-img\" alt={comment.author.username} />\r\n        </Link>\r\n        &nbsp;\r\n        <Link\r\n          to={`/@${comment.author.username}`}\r\n          className=\"comment-author\">\r\n          {comment.author.username}\r\n        </Link>\r\n        <span className=\"date-posted\">\r\n          {new Date(comment.createdAt).toDateString()}\r\n        </span>\r\n        <DeleteButton show={show} slug={props.slug} commentId={comment.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.string,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string,\r\n}\r\nexport default Comment;\r\n","import Comment from './Comment';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst CommentList = (props) => {\r\n  return (\r\n    <div>\r\n      {\r\n        props.comments.map(comment => {\r\n          return (\r\n            <Comment\r\n              comment={comment}\r\n              currentUser={props.currentUser}\r\n              slug={props.slug}\r\n              key={comment.id} />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n};\r\nCommentList.propTypes = {\r\n  comments: PropTypes.array,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string\r\n}\r\nexport default CommentList;\r\n","import CommentInput from './CommentInput';\r\nimport CommentList from './CommentList';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst CommentContainer = (props) => {\r\n  if (props.currentUser) {\r\n    return (\r\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <div>\r\n          <list-errors errors={props.errors}></list-errors>\r\n          <CommentInput slug={props.slug} currentUser={props.currentUser} />\r\n        </div>\r\n\r\n        <CommentList\r\n          comments={props.comments}\r\n          slug={props.slug}\r\n          currentUser={props.currentUser} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <p>\r\n          <Link to=\"/login\">Sign in</Link>\r\n          &nbsp;or&nbsp;\r\n          <Link to=\"/register\">sign up</Link>\r\n          &nbsp;to add comments on this article.\r\n        </p>\r\n\r\n        <CommentList\r\n          comments={props.comments}\r\n          slug={props.slug}\r\n          currentUser={props.currentUser} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nCommentContainer.propTypes = {\r\n  comments: PropTypes.array,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string,\r\n}\r\nexport default CommentContainer;\r\n","import ArticleMeta from './ArticleMeta';\r\nimport CommentContainer from './CommentContainer';\r\nimport React from 'react';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport CommonActions from '../../Stores/Common/Actions';\r\nimport CommentActions from '../../Stores/Comment/Actions';\r\nimport { connect } from 'react-redux';\r\nimport marked from 'marked';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Article extends React.Component {\r\n  componentDidMount() {(Promise.all([\r\n    this.props.onLoad(this.props.match.params.id),\r\n    this.props.loadComments(this.props.match.params.id)\r\n    ]));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.article) {\r\n      return null;\r\n    }\r\n    console.log(this.props.article)\r\n    const markup = { __html: marked(this.props.article.body || '') };\r\n    const canModify = this.props.currentUser &&\r\n      this.props.currentUser.username === this.props.article.author.username;\r\n    return (\r\n      <div className=\"article-page\">\r\n\r\n        <div className=\"banner\">\r\n          <div className=\"container\">\r\n\r\n            <h1>{this.props.article.title}</h1>\r\n            <ArticleMeta\r\n              article={this.props.article}\r\n              canModify={canModify} />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container page\">\r\n\r\n          <div className=\"row article-content\">\r\n            <div className=\"col-xs-12\">\r\n\r\n              <div dangerouslySetInnerHTML={markup}></div>\r\n\r\n              <ul className=\"tag-list\">\r\n                {\r\n                  this.props.article.tagList.map(tag => {\r\n                    return (\r\n                      <li\r\n                        className=\"tag-default tag-pill tag-outline\"\r\n                        key={tag}>\r\n                        {tag}\r\n                      </li>\r\n                    );\r\n                  })\r\n                }\r\n              </ul>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"article-actions\">\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <CommentContainer\r\n              comments={this.props.comments || []}\r\n              errors={this.props.commentErrors}\r\n              slug={this.props.match.params.id}\r\n              currentUser={this.props.currentUser} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nArticle.propTypes = {\r\n  comments: PropTypes.array,\r\n  currentUser: PropTypes.object,\r\n  canModify: PropTypes.bool,\r\n  onLoad: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  loadComments: PropTypes.func,\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.article,\r\n  comments:state.comment.comments,\r\n  currentUser: state.common.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onLoad: slug =>\r\n    dispatch(ArticleActions.getArticle(slug)),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded()),\r\n  loadComments: (slug) =>  dispatch(CommentActions.getArticleComments(slug))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\r\n","import React from 'react';\r\n\r\nclass ListErrors extends React.Component {\r\n  render() {\r\n    const errors = this.props.errors;\r\n    if (errors) {\r\n      return (\r\n        <ul className=\"error-messages\">\r\n          {\r\n            Object.keys(errors).map(key => {\r\n              return (\r\n                <li key={key}>\r\n                  {key} {errors[key]}\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListErrors;\r\n","import ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport EditorActions from '../Stores/Editor/Actions';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Editor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const updateFieldEvent =\r\n      key => ev => this.props.onUpdateField(key, ev.target.value);\r\n    this.changeTitle = updateFieldEvent('title');\r\n    this.changeDescription = updateFieldEvent('description');\r\n    this.changeBody = updateFieldEvent('body');\r\n    this.changeTagInput = updateFieldEvent('tagInput');\r\n\r\n    this.watchForEnter = ev => {\r\n      if (ev.keyCode === 13) {\r\n        ev.preventDefault();\r\n        this.props.onAddTag();\r\n      }\r\n    };\r\n\r\n    this.removeTagHandler = tag => () => {\r\n      this.props.onRemoveTag(tag);\r\n    };\r\n\r\n    this.submitForm = ev => {\r\n      ev.preventDefault();\r\n      const article = {\r\n        title: this.props.title,\r\n        description: this.props.description,\r\n        body: this.props.body,\r\n        tagList: this.props.tagList\r\n      };\r\n\r\n      const slug = { slug: this.props.articleSlug };\r\n      const promise = this.props.articleSlug ?\r\n        this.props.onUpdateArticle(Object.assign(article, slug)) :\r\n        this.props.onCreateArticle(article);\r\n\r\n      this.props.onSubmit(promise);\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.match.params.slug !== nextProps.match.params.slug) {\r\n      if (nextProps.match.params.slug) {\r\n        this.props.onUnload();\r\n        return this.props.onLoad(this.props.onGetArticles(this.props.match.params.slug));\r\n      }\r\n      this.props.onLoad(null);\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.match.params.slug) {\r\n      return this.props.onLoad(this.props.onGetArticles(this.props.match.params.slug));\r\n    }\r\n    this.props.onLoad(null);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-10 offset-md-1 col-xs-12\">\r\n\r\n              <ListErrors errors={this.props.errors}></ListErrors>\r\n\r\n              <form>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Article Title\"\r\n                      value={this.props.title}\r\n                      onChange={this.changeTitle} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"What's this article about?\"\r\n                      value={this.props.description}\r\n                      onChange={this.changeDescription} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows=\"8\"\r\n                      placeholder=\"Write your article (in markdown)\"\r\n                      value={this.props.body}\r\n                      onChange={this.changeBody}>\r\n                    </textarea>\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter tags\"\r\n                      value={this.props.tagInput}\r\n                      onChange={this.changeTagInput}\r\n                      onKeyUp={this.watchForEnter} />\r\n\r\n                    <div className=\"tag-list\">\r\n                      {\r\n                        (this.props.tagList || []).map(tag => {\r\n                          return (\r\n                            <span className=\"tag-default tag-pill\" key={tag}>\r\n                              <i  className=\"ion-close-round\"\r\n                                  onClick={this.removeTagHandler(tag)}>\r\n                              </i>\r\n                              {tag}\r\n                            </span>\r\n                          );\r\n                        })\r\n                      }\r\n                    </div>\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\r\n                    type=\"button\"\r\n                    disabled={this.props.inProgress}\r\n                    onClick={this.submitForm}>\r\n                    Publish Article\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nEditor.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  inProgress: PropTypes.bool,\r\n  tagList: PropTypes.array,\r\n  errors: PropTypes.array,\r\n  onAddTag: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  onRemoveTag: PropTypes.func,\r\n  onSubmit: PropTypes.func, \r\n  onUnload: PropTypes.func,\r\n  onUpdateField: PropTypes.func,\r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.editor\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddTag: () =>\r\n    dispatch(EditorActions.addTag()),\r\n  onLoad: payload =>\r\n    dispatch(EditorActions.editorPageloaded({payload})),\r\n  onRemoveTag: tag =>\r\n    dispatch(EditorActions.removeTag({tag})),\r\n  onSubmit: payload =>\r\n    dispatch(EditorActions.articleSubmitted({payload})),\r\n  onUpdateField: (key, value) =>\r\n    dispatch(EditorActions.updateFieldEditor({key, value })),\r\n  onUpdateArticle: (slug, article) =>\r\n    dispatch(ArticleActions.updateArticle(slug, article )),\r\n  onCreateArticle: (article) =>\r\n    dispatch(ArticleActions.createArticle(article)),\r\n  onGetArticles: (article) =>\r\n    dispatch(ArticleActions.getArticles(article)),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n","import { Link } from 'react-router-dom';\r\nimport ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport AuthActions from '../Stores/Auth/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeEmail = ev => this.props.onChangeEmail(ev.target.value);\r\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value);\r\n    this.submitForm = (email, password) => ev => {\r\n      ev.preventDefault();\r\n      this.props.onSubmit(email, password);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    const email = this.props.email || '';\r\n    const password = this.props.password || '';\r\n    return (\r\n      <div className=\"auth-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 className=\"text-xs-center\">Sign In</h1>\r\n              <p className=\"text-xs-center\">\r\n                <Link to=\"/register\">\r\n                  Need an account?\r\n                </Link>\r\n              </p>\r\n\r\n              <ListErrors errors={this.props.errors} />\r\n\r\n              <form onSubmit={this.submitForm(email, password)}>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={email}\r\n                      onChange={this.changeEmail} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={password}\r\n                      onChange={this.changePassword} />\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.inProgress}>\r\n                    Sign in\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n  inProgress: PropTypes.bool,\r\n  onSubmit: PropTypes.func,\r\n  onChangePassword: PropTypes.func,\r\n  onChangeEmail: PropTypes.func,\r\n  onUnload: PropTypes.func, \r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeEmail: value =>\r\n    dispatch(AuthActions.updateFieldAuth({key: 'email', value })),\r\n  onChangePassword: value =>\r\n    dispatch(AuthActions.updateFieldAuth({key: 'password', value })),\r\n  onSubmit: (email, password) => dispatch(AuthActions.login(email, password)),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import ArticleList from './ArticleList';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport ProfileActions from '../Stores/Profile/Actions';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst EditProfileSettings = (props) => {\r\n  if (props.isUser) {\r\n    return (\r\n      <Link\r\n        to=\"/settings\"\r\n        className=\"btn btn-sm btn-outline-secondary action-btn\">\r\n        <i className=\"ion-gear-a\"></i> Edit Profile Settings\r\n      </Link>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nEditProfileSettings.propTypes = {\r\n  isUser: PropTypes.bool\r\n}\r\nconst FollowUserButton = (props) => {\r\n  if (props.isUser) {\r\n    return null;\r\n  }\r\n\r\n  let classes = 'btn btn-sm action-btn';\r\n  if (props.user.following) {\r\n    classes += ' btn-secondary';\r\n  } else {\r\n    classes += ' btn-outline-secondary';\r\n  }\r\n\r\n  const handleClick = ev => {\r\n    ev.preventDefault();\r\n    if (this.props.user.following) {\r\n      props.unfollow(props.user.username)\r\n    } else {\r\n      props.follow(props.user.username)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={classes}\r\n      onClick={handleClick}>\r\n      <i className=\"ion-plus-round\"></i>\r\n      &nbsp;\r\n      {props.user.following ? 'Unfollow' : 'Follow'} {props.user.username}\r\n    </button>\r\n  );\r\n};\r\nFollowUserButton.propTypes = {\r\n  isUser: PropTypes.bool,\r\n  user: PropTypes.object,\r\n  unfollow: PropTypes.func,\r\n  follow: PropTypes.func,\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  componentWillMount() {\r\n    this.props.onLoad(Promise.all([\r\n      this.props.onGetProfile(this.props.match.params.username),\r\n      this.props.onGetArtilesByAuthor(this.props.match.params.username)\r\n    ]));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  renderTabs() {\r\n    return (\r\n      <ul className=\"nav nav-pills outline-active\">\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link active\"\r\n            to={`/@${this.props.profile.username}`}>\r\n            My Articles\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            to={`/@${this.props.profile.username}/favorites`}>\r\n            Favorited Articles\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const profile = this.props.profile;\r\n    if (!profile) {\r\n      return null;\r\n    }\r\n\r\n    const isUser = this.props.currentUser &&\r\n      this.props.profile.username === this.props.currentUser.username;\r\n\r\n    return (\r\n      <div className=\"profile-page\">\r\n\r\n        <div className=\"user-info\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\r\n\r\n                <img src={profile.image} className=\"user-img\" alt={profile.username} />\r\n                <h4>{profile.username}</h4>\r\n                <p>{profile.bio}</p>\r\n\r\n                <EditProfileSettings isUser={isUser} />\r\n                <FollowUserButton\r\n                  isUser={isUser}\r\n                  user={profile}\r\n                  follow={this.props.onFollow}\r\n                  unfollow={this.props.onUnfollow}\r\n                  />\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\r\n\r\n              <div className=\"articles-toggle\">\r\n                {this.renderTabs()}\r\n              </div>\r\n\r\n              <ArticleList\r\n                pager={this.props.pager}\r\n                articles={this.props.articles}\r\n                articlesCount={this.props.articlesCount}\r\n                state={this.props.currentPage} />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProfile.propTypes = {\r\n  email: PropTypes.array,\r\n  password: PropTypes.object,\r\n  inProgress: PropTypes.bool,\r\n  onSubmit: PropTypes.func,\r\n  onChangePassword: PropTypes.func,\r\n  onChangeEmail: PropTypes.func,\r\n  onUnload: PropTypes.func, \r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.articleList,\r\n  currentUser: state.common.currentUser,\r\n  profile: state.profile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFollow: username => dispatch(ProfileActions.followUser({payload:username})),\r\n  onLoad: payload => dispatch(ProfileActions.profilePageLoaded({payload})),\r\n  onUnfollow: username => dispatch(ProfileActions.unfollowUser({payload: username})),\r\n  onGetProfile: username => dispatch(ProfileActions.getProfile({payload: username})),\r\n  onGetArtilesByAuthor: username => dispatch(ArticleActions.articlesByAuthorSuccess({payload: username})),\r\n  onUnload: () => dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\nexport { Profile, mapStateToProps };\r\n","import { Profile, mapStateToProps } from './Profile';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport ProfileActions from '../Stores/Profile/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass ProfileFavorites extends Profile {\r\n  componentWillMount() {\r\n    this.props.onLoad(page => this.props.onGetArticleFavoritedBy(this.props.match.params.username, page), Promise.all([\r\n      this.props.onGetProfile(this.props.match.params.username),\r\n      this.props.onGetArticleFavoritedBy(this.props.match.params.username)\r\n    ]));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  renderTabs() {\r\n    return (\r\n      <ul className=\"nav nav-pills outline-active\">\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            to={`/@${this.props.profile.username}`}>\r\n            My Articles\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link active\"\r\n            to={`/@${this.props.profile.username}/favorites`}>\r\n            Favorited Articles\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nProfileFavorites.propTypes = {\r\n  username: PropTypes.string,\r\n  onLoad: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  onGetProfile: PropTypes.func,\r\n  onGetArticleFavoritedBy: PropTypes.func, \r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onLoad: (pager, payload) =>\r\n    dispatch(ProfileActions.profilePageLoaded({ pager, payload })),\r\n  onGetProfile: (username) =>\r\n    dispatch(ProfileActions.getProfile(username)),\r\n  onGetArticleFavoritedBy: (author,page) =>\r\n    dispatch(ArticleActions.getArticleFavoritedBy(author,page)),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileFavorites);\r\n","import { Link } from 'react-router-dom';\r\nimport ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport AuthActions from '../Stores/Auth/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeEmail = ev => this.props.onChangeEmail(ev.target.value);\r\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value);\r\n    this.changeUsername = ev => this.props.onChangeUsername(ev.target.value);\r\n    this.submitForm = (username, email, password) => ev => {\r\n      ev.preventDefault();\r\n      this.props.onSubmit(username, email, password);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    const email = this.props.email;\r\n    const password = this.props.password;\r\n    const username = this.props.username;\r\n\r\n    return (\r\n      <div className=\"auth-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 className=\"text-xs-center\">Sign Up</h1>\r\n              <p className=\"text-xs-center\">\r\n                <Link to=\"/login\">\r\n                  Have an account?\r\n                </Link>\r\n              </p>\r\n\r\n              <ListErrors errors={this.props.errors} />\r\n\r\n              <form onSubmit={this.submitForm(username, email, password)}>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      value={this.props.username || ''}\r\n                      onChange={this.changeUsername} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.props.email || ''}\r\n                      onChange={this.changeEmail} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={this.props.password || ''}\r\n                      onChange={this.changePassword} />\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.inProgress}>\r\n                    Sign up\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  username: PropTypes.string,\r\n  inProgress: PropTypes.bool,\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n  errors: PropTypes.array,\r\n  onChangeEmail: PropTypes.func,\r\n  onChangePassword: PropTypes.func,\r\n  onChangeUsername: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  onUnload: PropTypes.func, \r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeEmail: value =>\r\n    dispatch(AuthActions.updateFieldAuth({ key: 'email', value })),\r\n  onChangePassword: value =>\r\n    dispatch(AuthActions.updateFieldAuth({ key: 'password', value })),\r\n  onChangeUsername: value =>\r\n    dispatch(AuthActions.updateFieldAuth({key: 'username', value })),\r\n  onSubmit: (username, email, password) => {\r\n    dispatch(AuthActions.register(username, email, password))\r\n  },\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport AuthActions from '../Stores/Auth/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass SettingsForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: '',\r\n      username: '',\r\n      bio: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n\r\n    this.updateState = field => ev => {\r\n      const state = this.state;\r\n      const newState = Object.assign({}, state, { [field]: ev.target.value });\r\n      this.setState(newState);\r\n    };\r\n\r\n    this.submitForm = ev => {\r\n      ev.preventDefault();\r\n\r\n      const user = Object.assign({}, this.state);\r\n      if (!user.password) {\r\n        delete user.password;\r\n      }\r\n\r\n      this.props.onSubmitForm(user);\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.currentUser)\r\n    if (this.props.currentUser) {\r\n      Object.assign(this.state, {\r\n        image: this.props.currentUser.image || '',\r\n        username: this.props.currentUser.username,\r\n        bio: this.props.currentUser.bio,\r\n        email: this.props.currentUser.email\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    if (nextProps.currentUser) {\r\n      this.setState(Object.assign({}, this.state, {\r\n        image: nextProps.currentUser.image || '',\r\n        username: nextProps.currentUser.username,\r\n        bio: nextProps.currentUser.bio,\r\n        email: nextProps.currentUser.email\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitForm}>\r\n        <fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"URL of profile picture\"\r\n              value={this.state.image}\r\n              onChange={this.updateState('image')} />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={this.state.username}\r\n              onChange={this.updateState('username')} />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control form-control-lg\"\r\n              rows=\"8\"\r\n              placeholder=\"Short bio about you\"\r\n              value={this.state.bio}\r\n              onChange={this.updateState('bio')}>\r\n            </textarea>\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={this.state.email}\r\n              onChange={this.updateState('email')} />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              value={this.state.password}\r\n              onChange={this.updateState('password')} />\r\n          </fieldset>\r\n\r\n          <button\r\n            className=\"btn btn-lg btn-primary pull-xs-right\"\r\n            type=\"submit\"\r\n            disabled={this.state.inProgress}>\r\n            Update Settings\r\n          </button>\r\n\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nSettingsForm.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  onSubmitForm: PropTypes.func, \r\n}\r\nclass Settings extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"settings-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n\r\n              <h1 className=\"text-xs-center\">Your Settings</h1>\r\n\r\n              <ListErrors errors={this.props.errors}></ListErrors>\r\n\r\n              <SettingsForm\r\n                currentUser={this.props.currentUser}\r\n                onSubmitForm={this.props.onSubmitForm} />\r\n\r\n              <hr />\r\n\r\n              <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={this.props.onClickLogout}>\r\n                Or click here to logout.\r\n              </button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSettings.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  errors: PropTypes.array,\r\n  onSubmitForm: PropTypes.func,\r\n  onClickLogout: PropTypes.func,\r\n  onUnload: PropTypes.func, \r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickLogout: () => dispatch(AuthActions.logout()),\r\n  onSubmitForm: user =>\r\n    dispatch(AuthActions.save(user)),\r\n  onUnload: () => dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import AuthActions from '../Stores/Auth/Actions';\r\nimport Header from './Header';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Article from '../Components/Article';\r\nimport Editor from '../Components/Editor';\r\nimport Home from '../Components/Home';\r\nimport Login from '../Components/Login';\r\nimport Profile from '../Components/Profile';\r\nimport ProfileFavorites from '../Components/ProfileFavorites';\r\nimport Register from '../Components/Register';\r\nimport Settings from '../Components/Settings';\r\nimport { push } from 'react-router-redux';\r\nimport { PropTypes } from 'prop-types'\r\nimport createStore from '../Stores'\r\nconst { store } = createStore()\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {} \r\n  }\r\n  componentDidUpdate(nextProps) {\r\n    if (nextProps.redirectTo) {\r\n      // this.context.router.replace(nextProps.redirectTo);\r\n      store.dispatch(push(nextProps.redirectTo));\r\n      this.props.onRedirect();\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token) {\r\n      this.props.setToken(token);\r\n    }\r\n    this.props.onGetCurrentUser()\r\n    this.props.onLoad(token ? store.getState().auth.currentUser : null, token);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.appLoaded) {\r\n      return (\r\n        <div>\r\n          <Header\r\n            appName={this.props.appName}\r\n            currentUser={this.props.currentUser} />\r\n            <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/editor/:slug\" component={Editor} />\r\n            <Route path=\"/editor\" component={Editor} />\r\n            <Route path=\"/article/:id\" component={Article} />\r\n            <Route path=\"/settings\" component={Settings} />\r\n            <Route path=\"/@:username/favorites\" component={ProfileFavorites} />\r\n            <Route path=\"/@:username\" component={Profile} />\r\n            </Switch>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Header\r\n          appName={this.props.appName}\r\n          currentUser={this.props.currentUser} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nApp.propTypes = {\r\n  appLoaded: PropTypes.bool,\r\n  appName: PropTypes.string,\r\n  currentUser: PropTypes.object,\r\n  redirectTo: PropTypes.string,\r\n  onLoad: PropTypes.func,\r\n  onRedirect: PropTypes.func,\r\n  setToken: PropTypes.func,\r\n  onGetCurrentUser: PropTypes.func,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    appLoaded: state.common.appLoaded,\r\n    appName: state.common.appName,\r\n    currentUser: state.common.currentUser,\r\n    redirectTo: state.common.redirectTo\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onLoad: (user, token) =>\r\n    dispatch(CommonActions.appLoad(user, token, true)),\r\n  onRedirect: () =>\r\n    dispatch(CommonActions.redirect()),\r\n  setToken: (token) => dispatch(AuthActions.setToken(token)),\r\n  onGetCurrentUser: () => dispatch(AuthActions.getCurrentUser())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport createStore from './Stores'\nimport { Route, Switch,Router } from 'react-router-dom';\n//import { ConnectedRouter } from 'react-router-redux'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\nimport * as serviceWorker from './serviceWorker';\nimport App from './Components/App';\n//import { history }  from './Stores/createStore'\nconst { store, persistor,history} = createStore()\n\nReactDOM.render((\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" component={App} />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>\n\n), document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    getTags: null,\r\n    getTagsSuccess: ['tags'],\r\n    getTagsError: ['error'],\r\n})\r\nexport const TagTypes = Types\r\nexport default Creators","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n  getArticles: ['page'],\r\n  articlesSuccess: ['payload'],\r\n  articlesError: ['error'],\r\n  getArticle: ['slug'],\r\n  articleSuccess: ['article'],\r\n  articleError: ['error'],\r\n  getArticlesByAuthor: ['author','page'],\r\n  articlesByAuthorSuccess: ['username'],\r\n  articlesByAuthorError: ['error'],\r\n  getArticlesByTag: ['tag','page'],\r\n  articlesByTagSuccess: ['payload'],\r\n  articlesByTagError: ['error'],\r\n  deleteArticle: ['slug'],\r\n  deleteArticleSuccess: null,\r\n  deleteArticleError: ['error'],\r\n  setFavouriteArticle: ['slug'],\r\n  favouriteArticleSuccess: ['payload'],\r\n  favouriteArticleError: ['error'],\r\n  getFavouritedByArticle: ['author','page'],\r\n  favouritedByArticleSuccess: null,\r\n  favouritedByArticleError: ['error'],\r\n  getFeed: ['quote'],\r\n  feedSuccess: ['feeds'],\r\n  feedError: ['error'],\r\n  unfavouriteArticle: ['slug'],\r\n  unfavouriteArticleSuccess: ['payload'],\r\n  unfavouriteArticleError: ['error'],\r\n  updateArticle: ['slug','article'],\r\n  updateArticleSuccess: ['message'],\r\n  updateArticleError: ['error'],\r\n  createArticle: ['article'],\r\n  createArticleSuccess: ['message'],\r\n  createArticleError: ['error'],\r\n  setPage: ['payload'],\r\n  applyTagFilter: ['action'],\r\n  homePageLoaded: ['action'],\r\n  changeTabs: ['action'],\r\n  profilePageLoaded: ['action']\r\n})\r\n\r\nexport const ArticleTypes = Types\r\nexport default Creators\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst FAVORITED_CLASS = 'btn btn-sm btn-primary';\r\nconst NOT_FAVORITED_CLASS = 'btn btn-sm btn-outline-primary';\r\n\r\nconst ArticlePreview = (props) => {\r\n  const article = props.article;\r\n  const favouriteButtonClass = article.favorited ?\r\n    FAVORITED_CLASS :\r\n    NOT_FAVORITED_CLASS;\r\n\r\n  const handleClick = ev => {\r\n    ev.preventDefault();\r\n    if (article.favorited) {\r\n      props.unfavorite(article.slug);\r\n    } else {\r\n      props.favorite(article.slug);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"article-preview\">\r\n      <div className=\"article-meta\">\r\n        <Link to={`/@${article.author.username}`}>\r\n          <img src={article.author.image} alt={article.author.username} />\r\n        </Link>\r\n\r\n        <div className=\"info\">\r\n          <Link className=\"author\" to={`/@${article.author.username}`}>\r\n            {article.author.username}\r\n          </Link>\r\n          <span className=\"date\">\r\n            {new Date(article.createdAt).toDateString()}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"pull-xs-right\">\r\n          <button className={favouriteButtonClass} onClick={handleClick}>\r\n            <i className=\"ion-heart\"></i> {article.favouritesCount}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to={`/article/${article.slug}`} className=\"preview-link\">\r\n        <h1>{article.title}</h1>\r\n        <p>{article.description}</p>\r\n        <span>Read more...</span>\r\n        <ul className=\"tag-list\">\r\n          {\r\n            article.tagList.map(tag => {\r\n              return (\r\n                <li className=\"tag-default tag-pill tag-outline\" key={tag}>\r\n                  {tag}\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.object,\r\n  favorite: PropTypes.func,\r\n  unfavorite: PropTypes.func,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  favorite: slug => dispatch(ArticleActions.setFavouriteArticle(slug)),\r\n  unfavorite: slug => dispatch(ArticleActions.unfavouriteArticle(slug))\r\n});\r\nexport default connect(() => ({}), mapDispatchToProps)(ArticlePreview);\r\n","import React from 'react';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst ListPagination = (props) => {\r\n  if (props.articlesCount <= 10) {\r\n    return null;\r\n  }\r\n\r\n  const range = [];\r\n  for (let i = 0; i < Math.ceil(props.articlesCount / 10); ++i) {\r\n    range.push(i);\r\n  }\r\n\r\n  const setPage = page => {\r\n    if(props.pager) {\r\n      props.onSetPage(page, props.pager(page));\r\n    }else {\r\n      props.onSetPage(page, props.onGetArticles(page))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n\r\n        {\r\n          range.map(v => {\r\n            const isCurrent = v === props.currentPage;\r\n            const onClick = ev => {\r\n              ev.preventDefault();\r\n              setPage(v);\r\n            };\r\n            return (\r\n              <li\r\n                className={ isCurrent ? 'page-item active' : 'page-item' }\r\n                onClick={onClick}\r\n                key={v.toString()}>\r\n\r\n                <a className=\"page-link\" href={\"null\"}>{v + 1}</a>\r\n\r\n              </li>\r\n            );\r\n          })\r\n        }\r\n\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nListPagination.propTypes = {\r\n  inProgress: PropTypes.bool,\r\n  pager: PropTypes.string,\r\n  articlesCount: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  onSetPage: PropTypes.func,\r\n  onGetArticles: PropTypes.func, \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSetPage: (page, payload) =>\r\n    dispatch(ArticleActions.setPage({ page, payload })),\r\n  onGetArticles: (page) =>\r\n    dispatch(ArticleActions.getArticles(page))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(ListPagination);\r\n","import ArticlePreview from './ArticlePreview';\r\nimport ListPagination from './ListPagination';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst ArticleList = (props) => {\r\n  if (!props.articles) {\r\n    return (\r\n      <div className=\"article-preview\">Loading...</div>\r\n    );\r\n  }\r\n\r\n  if (props.articles.length === 0) {\r\n    return (\r\n      <div className=\"article-preview\">\r\n        No articles are here... yet.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.articles.map(article => {\r\n          return (\r\n            <ArticlePreview article={article} key={article.slug} />\r\n          );\r\n        })\r\n      }\r\n\r\n      <ListPagination\r\n        pager={props.pager}\r\n        articlesCount={props.articlesCount}\r\n        currentPage={props.currentPage} />\r\n    </div>\r\n  );\r\n};\r\nArticleList.propTypes = {\r\n  articles: PropTypes.array,\r\n  pager: PropTypes.string,\r\n  articlesCount: PropTypes.number,\r\n  currentPage: PropTypes.number\r\n}\r\nexport default ArticleList;\r\n","import Banner from './Banner';\r\nimport MainView from './MainView';\r\nimport React from 'react';\r\nimport Tags from './Tags';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport TagActions from '../../Stores/Tag/Actions';\r\nimport CommonActions from '../../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst Promise = global.Promise;\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    //const tab = this.props.token ? 'feed' : 'all';\r\n    const articlesPromise = this.props.token ?\r\n      this.props.loadFeed:\r\n      this.props.loadArticles\r\n\r\n      Promise.all([this.props.loadTags(), articlesPromise()]);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page\">\r\n\r\n        <Banner token={this.props.token} appName={this.props.appName} />\r\n\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <MainView/>\r\n\r\n            <div className=\"col-md-3\">\r\n              <div className=\"sidebar\">\r\n\r\n                <p>Popular Tags</p>\r\n\r\n                <Tags\r\n                  tags={this.props.tags}\r\n                  onClickTag={this.props.onClickTag} />\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nHome.propTypes = {\r\n  tags: PropTypes.array,\r\n  token: PropTypes.string,\r\n  appName: PropTypes.string,\r\n  onClickTag: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  loadTags: PropTypes.func,\r\n  loadFeed: PropTypes.func,\r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.common,\r\n  appName: state.common.appName,\r\n  token: state.common.token,\r\n  tags: state.tag.tags\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickTag: (tag, pager, payload) =>\r\n    dispatch(ArticleActions.getArticles(tag, pager, payload)),\r\n  loadArticles: (pager) =>\r\n    dispatch(ArticleActions.getArticles(pager)),\r\n  loadFeed: (pager) =>\r\n    dispatch(ArticleActions.getFeed(pager)),\r\n  loadTags: () =>\r\n    dispatch(TagActions.getTags()),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"],"sourceRoot":""}