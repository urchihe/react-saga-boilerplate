{"version":3,"sources":["Components/Home/Banner.js","Components/Home/MainView.js","Components/Home/Tags.js","Stores/Common/Actions.js","Stores/Auth/Actions.js","Stores/middleware.js","Stores/createStore.js","Stores/Profile/Actions.js","Stores/Comment/Actions.js","Services/ApiService.js","Services/Api/AuthService.js","Services/Api/ArticleService.js","Services/Api/CommentService.js","Services/Api/ProfileService.js","Services/Api/TagService.js","Sagas/ArticleSaga.js","Sagas/AuthSaga.js","Sagas/CommentSaga.js","Sagas/ProfileSaga.js","Sagas/TagSaga.js","Sagas/index.js","Stores/Article/InitialState.js","Stores/Article/Reducers.js","Stores/Auth/InitialState.js","Stores/Auth/Reducers.js","Stores/Comment/InitialState.js","Stores/Comment/Reducers.js","Stores/Profile/Reducers.js","Stores/Profile/InitialState.js","Stores/Tag/Reducers.js","Stores/Tag/InitialState.js","Stores/Common/InitialState.js","Stores/Common/Reducers.js","Stores/Editor/Actions.js","Stores/Editor/Reducers.js","Stores/Editor/InitialState.js","Stores/Home/Actions.js","Stores/Home/Reducers.js","Stores/Home/InitialState.js","Stores/index.js","serviceWorker.js","Components/Header.js","Components/Article/PerformActions.js","Components/Article/ArticleMeta.js","Components/Article/CommentInput.js","Components/Article/DeleteButton.js","Components/Article/Comment.js","Components/Article/CommentList.js","Components/Article/CommentContainer.js","Components/Article/index.js","Components/ListErrors.js","Components/Editor.js","Components/Login.js","Components/Profile.js","Components/ProfileFavorites.js","Components/Register.js","Components/Settings.js","Components/App.js","index.js","Stores/Tag/Actions.js","Stores/Article/Actions.js","Components/ArticlePreview.js","Components/ListPagination.js","Components/ArticleList.js","Components/Home/index.js"],"names":["Banner","appName","token","className","toLowerCase","YourFeedTab","props","href","tab","onClick","ev","preventDefault","onTabClickGetFeed","pager","GlobalFeedTab","onTabClickGetArticles","TagFilterTab","tag","connect","state","article","common","dispatch","ArticleActions","getFeed","changeTabs","getArticles","loadArticles","articles","loading","articlesCount","currentPage","onClickTag","getArticlesByTag","articleTags","tags","map","key","page","createActions","appLoad","redirect","pageUnloaded","Types","Creators","CommonTypes","getCurrentUser","currentUserSuccess","currentUserError","login","loginSuccess","loginError","register","registerSuccess","registerError","save","saveSuccess","saveError","setToken","updateFieldAuth","asyncStart","asyncEnd","logout","logoutSuccess","logoutError","AuthTypes","promiseMiddleware","store","next","action","v","then","AuthActions","currentView","getState","viewChangeCounter","skipTracking","payload","res","currentState","auth","currentUser","error","response","body","localStorageMiddleware","type","window","localStorage","setItem","user","push","history","createBrowserHistory","myRouterMiddleware","routerMiddleware","persistConfig","storage","whitelist","followUser","followUserSuccess","followUserError","getProfile","profileSuccess","profileError","unfollowUser","unfollowUserSuccess","unfollowUserError","profilePageLoaded","ProfileTypes","createComment","createCommentSuccess","createCommentError","deleteComment","deleteCommentSuccess","deleteCommentError","getArticleComments","articleCommentsSuccess","articleCommentsError","CommentTypes","ApiService","create","baseURL","headers","timeout","addResponseTransform","ok","getItem","addRequestTransform","request","Authorization","AuthService","get","email","password","post","username","put","omitSlug","Object","assign","slug","undefined","encode","encodeURIComponent","ArticleService","limit","offset","author","delete","console","log","CommentService","comment","commentId","ProfileService","TagService","getArticlesByAuthor","deleteArticle","setFavoriteArticle","getFavouritedByArticle","getArticle","unfavoriteArticle","updateArticle","createArticle","call","data","articlesSuccess","articlesError","articlesByAuthorSuccess","articlesByAuthorError","articlesByTagSuccess","articlesByTagError","deleteArticleSuccess","deleteArticleError","favouriteArticleSuccess","favouriteArticleError","favouritedByArticleSuccess","favouritedByArticleError","feedSuccess","feedError","articleSuccess","articleError","unfavouriteArticleSuccess","unfavouriteArticleError","updateArticleSuccess","createArticleError","createArticleSuccess","CommentActions","ProfileActions","getTags","TagActions","getTagsSuccess","getTagsError","root","all","takeLatest","ArticleTypes","GET_ARTICLES","GET_ARTICLES_BY_AUTHOR","GET_ARTICLES_BY_TAG","DELETE_ARTICLE","SET_FAVOURITE_ARTICLE","GET_FAVOURITED_BY_ARTICLE","GET_FEED","GET_ARTICLE","UNFAVOURITE_ARTICLE","UPDATE_ARTICLE","CREATE_ARTICLE","GET_CURRENT_USER","LOGIN","REGISTER","SAVE","LOGOUT","CREATE_COMMENT","DELETE_COMMENT","GET_ARTICLE_COMMENTS","FOLLOW_USER","GET_PROFILE","UNFOLLOW_USER","TagTypes","GET_TAGS","INITIAL_STATE","feeds","articlesIsLoading","articleIsLoading","articlesByAuthorIsLoading","articlesByAuthorErrors","articlesByTagIsLoading","articlesByTagErrors","deleteArticleIsLoading","deleteArticleErrors","getFavouritedByIsLoading","getFavouritedByErrors","getFeedIsLoading","getFeedErrors","unfavoriteArticleIsLoading","unfavoriteArticleErrors","updateArticleIsLoading","createArticleIsLoading","createArticleErrors","redirectTo","reducer","createReducer","articlesErrors","ARTICLES_SUCCESS","ARTICLES_ERROR","errors","articleErrors","ARTICLE_SUCCESS","ARTICLE_ERROR","ARTICLES_BY_AUTHOR_SUCCESS","ARTICLES_BY_AUTHOR_ERROR","ARTICLES_BY_TAG_SUCCESS","ARTICLES_BY_TAG_ERROR","DELETE_ARTICLE_SUCCESS","DELETE_ARTICLE_ERROR","setFavouriteArticleIsLoading","setFavouriteArticleErrors","FAVOURITE_ARTICLE_SUCCESS","favorited","favoritesCount","FAVOURITE_ARTICLE_ERROR","FAVOURITED_BY_ARTICLE_SUCCESS","FAVOURITED_BY_ARTICLE_ERROR","UNFAVOURITE_ARTICLE_SUCCESS","UNFAVOURITE_ARTICLE_ERROR","FEED_SUCCESS","FEED_ERROR","updateArticleErrors","UPDATE_ARTICLE_SUCCESS","UPDATE_ARTICLE_ERROR","CREATE_ARTICLE_SUCCESS","CREATE_ARTICLE_ERROR","SET_PAGE","APPLY_TAG_FILTER","HOME_PAGE_LOADED","CHANGE_TABS","PROFILE_PAGE_LOADED","getcurrentUserIsLoading","getcurrentUserErrors","saveIsLoading","saveErrors","registerIsLoading","registerErrors","inProgress","loginIsLoading","loginErrors","CURRENT_USER_SUCCESS","CURRENT_USER_ERROR","LOGIN_SUCCESS","LOGIN_ERROR","REGISTER_SUCCESS","REGISTER_ERROR","SAVE_SUCCESS","SAVE_ERROR","SET_TOKEN","UPDATE_FIELD_AUTH","value","ASYNC_START","ASYNC_END","LOGOUT_SUCCESS","logoutIsLoading","logoutErrors","LOGOUT_ERROR","REDIRECT","comments","createCommenIsLoading","createCommenErrors","deleteCommentIsLoading","deleteCommentErrors","getArticleCommentsIsLoading","getArticleCommentsErrors","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_ERROR","createCommentErrors","DELETE_COMMENT_SUCCESS","filter","id","DELETE_COMMENT_ERROR","ARTICLE_COMMENTS_SUCCESS","ARTICLE_COMMENTS_ERROR","profile","followUserIsLoading","followUserErrors","getProfileIsLoading","getProfileErrors","unfollowUserIsLoading","unfollowUserErrors","FOLLOW_USER_SUCCESS","FOLLOW_USER_ERROR","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_ERROR","PROFILE_SUCCESS","PROFILE_ERROR","getTagsIsLoading","getTagsErrors","GET_TAGS_SUCCESS","GET_TAGS_ERROR","appLoaded","APP_LOAD","PAGE_UNLOADED","editorPageLoaded","articleSubmitted","articleSubmittedSuccess","articleSubmittedError","addTag","removeTag","updateFieldEditor","EditorTypes","articleSubmittedErrors","articleSubmittedIsLoading","title","description","tagList","EDITOR_PAGE_LOADED","articleSlug","tagInput","ARTICLE_SUBMITTED","ARTICLE_SUBMITTED_SUCCESS","ARTICLE_SUBMITTED_ERROR","ADD_TAG","concat","REMOVE_TAG","UPDATE_FIELD_EDITOR","homePageLoaded","HomeTypes","rootReducer","rootSaga","middleware","enhancers","sagaMiddleware","createSagaMiddleware","createLogger","applyMiddleware","persistedReducer","persistReducer","composeEnhancers","composeWithDevTools","createStore","persistor","persistStore","run","configureStore","combineReducers","ArticleReducer","AuthReducer","CommentReducer","ProfileReducer","TagReducer","CommonReducer","editor","EditorReducer","home","HomeReducer","router","routerReducer","Boolean","location","hostname","match","LoggedOutView","keys","length","to","LoggedInView","src","image","alt","Header","this","React","Component","onClickDelete","canModify","ArticleMeta","Date","createdAt","toDateString","CommentInput","setBody","setState","target","onSubmit","placeholder","onChange","rows","CommentAtions","show","Comment","CommentList","CommentContainer","Index","params","textValue","onLoad","onUnload","markup","__html","marked","dangerouslySetInnerHTML","commentErrors","CommonActions","ListErrors","Editor","updateFieldEvent","onUpdateField","changeTitle","changeDescription","changeBody","changeTagInput","watchForEnter","keyCode","onAddTag","removeTagHandler","onRemoveTag","submitForm","onUpdateArticle","onCreateArticle","nextProps","onGetArticle","onGetArticles","onKeyUp","disabled","EditorActions","editorPageloaded","Login","changeEmail","onChangeEmail","changePassword","onChangePassword","EditProfileSettings","isUser","FollowUserButton","classes","following","unfollow","follow","Profile","bio","renderTabs","ArticleList","mapStateToProps","ProfileFavorites","propTypes","PropTypes","string","func","onGetProfile","onGetArticleFavoritedBy","Register","changeUsername","onChangeUsername","SettingsForm","updateState","field","newState","onSubmitForm","Settings","onClickLogout","App","onGetCurrentUser","onRedirect","exact","path","component","Home","Article","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","setFavouriteArticle","unfavouriteArticle","updateArticleError","setPage","applyTagFilter","favorite","unfavorite","favouriteButtonClass","favouritesCount","onSetPage","range","i","Math","ceil","isCurrent","toString","Promise","global","articlesPromise","loadFeed","loadTags"],"mappings":"8HAAA,oBAsBeA,IAnBA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAChB,OADqC,EAAZC,MAEhB,KAGP,yBAAKC,UAAU,UACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aACXF,EAAQG,eAEX,mE,mFCPFC,EAAc,SAACC,GACnB,GAAIA,EAAMJ,MAAO,CAMf,OACE,wBAAIC,UAAU,YACZ,uBAAII,KAAM,OACNJ,UAA0B,SAAdG,EAAME,IAAiB,kBAAoB,WACvDC,QATa,SAAAC,GACnBA,EAAGC,iBACHL,EAAMM,kBAAkB,OAAQN,EAAMO,SAKpC,cAQN,OAAO,MASHC,EAAgB,SAACR,GAKrB,OACE,wBAAIH,UAAU,YACZ,uBACEI,KAAM,OACNJ,UAA0B,QAAdG,EAAME,IAAgB,kBAAoB,WACtDC,QATe,SAAAC,GACnBA,EAAGC,iBACHL,EAAMS,sBAAsB,MAAOT,EAAMO,SAIvC,iBAeAG,EAAe,SAACV,GACpB,OAAKA,EAAMW,IAIT,wBAAId,UAAU,YACZ,uBAAGI,KAAM,OAAQJ,UAAU,mBACzB,uBAAGA,UAAU,cADf,IACiCG,EAAMW,MALlC,MAiFIC,iBAnBS,SAAAC,GAAK,sBACxBA,EAAMC,QADkB,CAE3BH,IAAKE,EAAMC,QAAQH,IACnBf,MAAOiB,EAAME,OAAOnB,WAGK,SAAAoB,GAAQ,MAAK,CACtCV,kBAAmB,SAACJ,EAAKK,GACtBS,EAASC,IAAeC,QAAQX,IAChCS,EAASC,IAAeE,WAAWjB,KAEtCO,sBAAsB,SAACP,EAAIK,GACzBS,EAASC,IAAeG,YAAYb,IACpCS,EAASC,IAAeE,WAAWjB,KAErCmB,aAAc,SAACd,GAAD,OACdS,EAASC,IAAeG,YAAYb,QAGvBK,EAlEE,SAACZ,GAChB,OACE,yBAAKH,UAAU,YACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,gCAEZ,kBAACE,EAAD,CACEH,MAAOI,EAAMJ,MACbM,IAAKF,EAAME,IACXK,MAAOP,EAAMO,MACbD,kBAAmBN,EAAMM,oBAE3B,kBAACE,EAAD,CACAN,IAAKF,EAAME,IACXK,MAAOP,EAAMO,MACbE,sBAAuBT,EAAMS,wBAG7B,kBAACC,EAAD,CAAcC,IAAKX,EAAMW,QAK7B,kBAAC,IAAD,CACEJ,MAAOP,EAAMO,MACbe,SAAUtB,EAAMsB,SAChBC,QAASvB,EAAMuB,QACfC,cAAexB,EAAMwB,cACrBC,YAAazB,EAAMyB,mB,iCCnG3B,mCAgDeb,iBAAQ,iBAAO,MANH,SAAAI,GAAQ,MAAK,CACtCU,WAAY,SAACf,EAAKJ,GAAN,OACVS,EAASC,IAAeU,iBAAiBhB,EAAKJ,KAChDqB,YAAa,SAACjB,EAAKJ,GAAN,OACXS,EAASC,IAAeU,iBAAiBhB,EAAKJ,QAEnCK,EA1CF,SAACZ,GACZ,IAAM6B,EAAO7B,EAAM6B,KACnB,OAAIA,EAEA,yBAAKhC,UAAU,YAEXgC,EAAKC,KAAI,SAAAnB,GAMP,OACE,uBACEV,KAAM,OACNJ,UAAU,uBACVkC,IAAKpB,EACLR,QAVgB,SAAAC,GAClBA,EAAGC,iBACHL,EAAM0B,WAAWf,GAAK,SAAAqB,GAAI,OAAIhC,EAAM4B,YAAYjB,EAAKqB,KAAOhC,EAAM4B,YAAYjB,MAU3EA,OASX,oD,sEClCN,8C,EAE4BsB,wBAAc,CACtCC,QAAS,CAAC,OAAO,QAAQ,gBACzBC,SAAU,KACVC,aAAc,OAHVC,E,EAAAA,MAAOC,E,EAAAA,SAKFC,EAAcF,EACZC,O,wICNaL,wBAAc,CACtCO,eAAgB,KAChBC,mBAAoB,CAAC,WACrBC,iBAAkB,CAAC,SACnBC,MAAO,CAAC,QAAQ,YAChBC,aAAc,CAAC,WACfC,WAAY,CAAC,SACbC,SAAU,CAAC,WAAW,QAAQ,YAC9BC,gBAAiB,CAAC,WAClBC,cAAe,CAAC,SAChBC,KAAM,CAAC,QACPC,YAAa,CAAC,QACdC,UAAW,CAAC,SACZC,SAAU,CAAC,SACXC,gBAAiB,CAAC,UAClBC,WAAY,KACZC,SAAU,KACVC,OAAQ,KACRC,cAAe,KACfC,YAAa,CAAC,SACdvB,SAAU,OApBNE,E,EAAAA,MAAOC,E,EAAAA,SAuBFqB,EAAYtB,EACVC,I,QCvBTsB,EAAoB,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GACzC,IAoDiBC,EApDHD,IAqDgB,oBAAXC,EAAEC,KArDrB,CACEJ,EAAM7C,SAASkD,EAAYZ,cAE3B,IAAMa,EAAcN,EAAMO,WAAWrD,OAAOsD,kBACtCC,EAAeP,EAAOO,aAE5BP,EAAOQ,QAAQN,MACb,SAAAO,GACE,IAAMC,EAAeZ,EAAMO,WAAWM,KAAKC,aACtCL,GAAgBG,EAAaJ,oBAAsBF,KAGxDJ,EAAOQ,QAAUC,EACjBX,EAAM7C,SAASkD,EAAYX,YAC3BM,EAAM7C,SAAS+C,OAEjB,SAAAa,GACE,IAAMH,EAAeZ,EAAMO,WAAWrD,QACjCuD,GAAgBG,EAAaJ,oBAAsBF,KAGxDJ,EAAOa,OAAQ,EACfb,EAAOQ,QAAUK,EAAMC,SAASC,KAC3Bf,EAAOO,cACVT,EAAM7C,SAASkD,EAAYX,YAE7BM,EAAM7C,SAAS+C,WA1BrB,CAoDF,IAAmBC,EAnBjBF,EAAKC,OAGDgB,EAAyB,SAAAlB,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC1B,kBAAhBA,EAAOiB,MAA4C,qBAAhBjB,EAAOiB,KACxCjB,EAAOQ,UACTU,OAAOC,aAAaC,QAAQ,MAAOpB,EAAOQ,QAAQa,KAAKxF,OACvDsE,EAAYd,SAASW,EAAOQ,QAAQa,KAAKxF,QAElB,mBAAhBmE,EAAOiB,MAChBC,OAAOC,aAAaC,QAAQ,MAAO,IACnCjB,EAAYd,SAAS,OACK,4BAAhBW,EAAOiB,MAAuCjB,EAAOQ,SAC/DV,EAAM7C,SAASqE,YAAK,WAGtBvB,EAAKC,M,6BC3CDuB,EAAUC,cAEVC,EAAqBC,YAAiBH,GACtCI,EAAgB,CACpB3D,IAAK,OACL4D,QAASA,IACTC,UAAW,I,gCCde3D,wBAAc,CACtC4D,WAAY,CAAC,YACbC,kBAAmB,CAAC,WACpBC,gBAAiB,CAAC,SAClBC,WAAY,CAAC,YACbC,eAAgB,CAAC,WACjBC,aAAc,CAAC,SACfC,aAAc,CAAC,YACfC,oBAAqB,CAAC,WACtBC,kBAAmB,CAAC,SACpBC,kBAAmB,CAAC,YAVhBjE,E,EAAAA,MAAOC,E,EAAAA,SAYFiE,EAAelE,EACbC,I,ECbaL,wBAAc,CACtCuE,cAAe,CAAC,OAAO,WACvBC,qBAAsB,CAAC,WACvBC,mBAAoB,CAAC,SACrBC,cAAe,CAAC,OAAO,aACvBC,qBAAsB,CAAC,WACvBC,mBAAoB,CAAC,SACrBC,mBAAoB,CAAC,QACrBC,uBAAwB,CAAC,YACzBC,qBAAsB,CAAC,WATnB3E,E,EAAAA,MAAOC,E,EAAAA,SAWF2E,EAAe5E,EACbC,I,gBCPF4E,EAAaC,iBAAO,CAC/BC,QAJe,yCAKfC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,QAAS,MAGXJ,EAAWK,sBAAqB,SAAC1C,GAC3BA,EAAS2C,IACPvC,OAAOC,aAAauC,QAAQ,QAC9BxC,OAAOC,aAAauC,QAAQ,UAIlCP,EAAWQ,qBAAoB,SAACC,GAC1B1C,OAAOC,aAAauC,QAAQ,SAC9BE,EAAQN,QAAQO,cAAhB,gBAAyC3C,OAAOC,aAAauC,QAAQ,YCHlE,IAAMI,EApBb,WACE,OAAOX,EAAWY,IAAI,UAmBXD,EAhBb,SAAeE,EAAMC,GACjB,OAAOd,EAAWe,KAAK,eAAe,CAAC7C,KAAO2C,EAAMC,cAe3CH,EAZb,SAAkBK,EAASH,EAAMC,GAC7B,OAAOd,EAAWe,KAAK,SAAS,CAAE7C,KAAM8C,EAASH,QAAMC,cAW9CH,EARb,YAAuB,IAARzC,EAAO,EAAPA,KACX,OAAO8B,EAAWiB,IAAI,QAAQ/C,ICb5BgD,EAAW,SAAAtH,GAAO,OAAIuH,OAAOC,OAAO,GAAIxH,EAAS,CAAEyH,UAAMC,KAEzDC,EAASC,mBA+DR,IAAMC,EA7Db,SAAqB3G,GACnB,OAAOkF,EAAWY,IAAI,YAAa,CACjCc,MALU,GAMVC,OAAQ7G,EANE,GAMKA,EAAe,KA0DrB2G,EAtDb,SAA6BG,EAAO9G,GAClC,OAAOkF,EAAWY,IAAI,YAAa,CACjCgB,OAAQA,EACRF,MAbU,GAcVC,OAAQ7G,EAdE,GAcKA,EAAe,KAkDrB2G,EA9Cb,SAA0BhI,EAAIqB,GAC5B,OAAOkF,EAAWY,IAAI,YAAa,CACjCnH,IAAKA,EACLiI,MArBU,GAsBVC,OAAQ7G,EAtBE,GAsBKA,EAAe,KA0CrB2G,GAtCb,SAAuBJ,GACrB,OAAOrB,EAAW6B,OAAX,oBAA+BR,KAqC3BI,GAlCb,SAA4BJ,GAC1B,OAAOrB,EAAWe,KAAX,oBAA6BM,EAA7B,eAiCII,GA9Bb,SAAgCG,EAAQ9G,GACtC,OAAOkF,EAAWY,IAAX,6BAAqCW,EAAOK,GAA5C,YAnCK,MAgEDH,GA1Bb,WACE,OAAOzB,EAAWY,IAAI,kBAAkB,CACtCc,MAxCU,GAyCVC,OAAQ,KAuBCF,GAnBb,SAAoBJ,GAClB,OAAOrB,EAAWY,IAAX,oBAA4BS,KAkBxBI,GAfb,SAA2BJ,GACzB,OAAOrB,EAAW6B,OAAX,oBAA+BR,EAA/B,eAcII,GAXb,SAAuB7H,GACrB,OAAOoG,EAAWiB,IAAX,oBAA4BrH,EAAQyH,MAAO,CAChDzH,QAASsH,EAAStH,MAST6H,GALb,SAAuB7H,GAErB,OADAkI,QAAQC,IAAInI,GACLoG,EAAWe,KAAK,YAAY,CAAEnH,aChDhC,IAAMoI,GAbb,SAAuBX,EAAMY,GAE3B,OADAH,QAAQC,IAAI,CAACE,YACNjC,EAAWe,KAAX,oBAA6BM,EAA7B,aAA6C,CAAEY,aAW3CD,GARb,SAAuBX,EAAOa,GAC1B,OAAOlC,EAAW6B,OAAX,oBAA+BR,EAA/B,aAAgD,CAAEa,eAOhDF,GAJb,SAA4BX,GACxB,OAAOrB,EAAWY,IAAX,oBAA4BS,EAA5B,eCCJ,IAAMc,GAZb,SAAoBnB,GAClB,OAAOhB,EAAWe,KAAX,oBAA6BC,EAA7B,aAWImB,GARb,SAAoBnB,GAChB,OAAOhB,EAAWY,IAAX,oBAA4BI,KAO1BmB,GAJb,SAAsBnB,GAClB,OAAOhB,EAAW6B,OAAX,oBAA+Bb,EAA/B,aCLJ,IAAMoB,GAJb,WACE,OAAOpC,EAAWY,IAAI,U,YCQP1G,I,YAWAmI,I,YAWA5H,I,YAWA6H,I,YAWAC,I,YAWAC,I,YAWAxI,I,YAUAyI,I,YAUAC,I,YAUAC,I,YAUAC,IA1GV,SAAU1I,GAAV,4EACY,OADYY,EAAxB,EAAwBA,KAAxB,SACkB+H,YAAKpB,EAA2B3G,GADlD,WAEe,KADd6C,EADD,QAEQ2C,GAFR,gBAIH,OADAwB,QAAQC,IAAIpE,EAASmF,MAHlB,SAIG7B,YAAIlH,IAAegJ,gBAAgBpF,EAASmF,OAJ/C,wCAOL,OAPK,UAOC7B,YAAIlH,IAAeiJ,cAAcrF,EAASmF,OAP3C,yCAWA,SAAUT,GAAV,8EACY,OADoBT,EAAhC,EAAgCA,OAAQ9G,EAAxC,EAAwCA,KAAxC,SACkB+H,YAAKpB,EAAmCG,EAAO9G,GADjE,WAGe,KAFd6C,EADD,QAGQ2C,GAHR,gBAIH,OAJG,SAIGW,YAAIlH,IAAekJ,wBAAwBtF,EAASmF,OAJvD,wCAOL,OAPK,UAOC7B,YAAIlH,IAAemJ,sBAAsBvF,EAASmF,OAPnD,yCAWA,SAAUrI,GAAV,8EACY,OADiBhB,EAA7B,EAA6BA,IAAKqB,EAAlC,EAAkCA,KAAlC,SACkB+H,YAAKpB,EAAiChI,EAAKqB,GAD7D,WAGe,KAFd6C,EADD,QAGQ2C,GAHR,gBAIH,OAJG,SAIGW,YAAIlH,IAAeoJ,qBAAqBxF,EAASmF,OAJpD,wCAOL,OAPK,UAOC7B,YAAIlH,IAAeqJ,mBAAmBzF,EAASmF,OAPhD,yCAWA,SAAUR,GAAV,4EACY,OADcjB,EAA1B,EAA0BA,KAA1B,SACkBwB,YAAKpB,GAA6BJ,GADpD,WAGe,KAFd1D,EADD,QAGQ2C,GAHR,gBAIH,OAJG,SAIGW,YAAIlH,IAAesJ,qBAAqB1F,EAASmF,OAJpD,wCAOL,OAPK,UAOC7B,YAAIlH,IAAeuJ,mBAAmB3F,EAASmF,OAPhD,yCAWA,SAAUP,GAAV,4EACY,OADmBlB,EAA/B,EAA+BA,KAA/B,SACkBwB,YAAKpB,GAAkCJ,GADzD,WAGe,KAFd1D,EADD,QAGQ2C,GAHR,gBAIH,OAJG,SAIGW,YAAIlH,IAAewJ,wBAAwB5F,EAASmF,OAJvD,wCAOL,OAPK,UAOC7B,YAAIlH,IAAeyJ,sBAAsB7F,EAASmF,OAPnD,yCAWA,SAAUN,GAAV,8EACY,OADuBZ,EAAnC,EAAmCA,OAAQ9G,EAA3C,EAA2CA,KAA3C,SACkB+H,YAAKpB,GAAsCG,EAAQ9G,GADrE,WAGe,KAFd6C,EADD,QAGQ2C,GAHR,gBAIH,OAJG,SAIGW,YAAIlH,IAAe0J,2BAA2B9F,EAASmF,OAJ1D,wCAOL,OAPK,UAOC7B,YAAIlH,IAAe2J,yBAAyB/F,EAASmF,OAPtD,yCAWA,SAAU9I,KAAV,uEACY,OADZ,SACkB6I,YAAKpB,IADvB,WAEe,KADd9D,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIlH,IAAe4J,YAAYhG,EAASmF,OAH3C,wCAML,OANK,SAMC7B,YAAIlH,IAAe6J,UAAUjG,EAASmF,OANvC,wCAUA,SAAUL,GAAV,4EACY,OADWpB,EAAvB,EAAuBA,KAAvB,SACkBwB,YAAKpB,GAA0BJ,GADjD,WAEe,KADd1D,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIlH,IAAe8J,eAAelG,EAASmF,OAH9C,wCAML,OANK,UAMC7B,YAAIlH,IAAe+J,aAAanG,EAASmF,OAN1C,yCAUA,SAAUJ,GAAV,4EACY,OADkBrB,EAA9B,EAA8BA,KAA9B,SACkBwB,YAAKpB,GAAiCJ,GADxD,WAEe,KADd1D,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIlH,IAAegK,0BAA0BpG,EAASmF,OAHzD,wCAML,OANK,UAMC7B,YAAIlH,IAAeiK,wBAAwBrG,EAASmF,OANrD,yCAUA,SAAUH,GAAV,4EACY,OADc/I,EAA1B,EAA0BA,QAA1B,SACkBiJ,YAAKpB,GAA6B7H,GADpD,WAEe,KADd+D,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIlH,IAAekK,qBAAqBtG,EAASmF,OAHpD,wCAMH,OANG,UAMG7B,YAAIlH,IAAemK,mBAAmBvG,EAASmF,OANlD,yCAUA,SAAUF,GAAV,4EACY,OADchJ,EAA1B,EAA0BA,QAA1B,SACkBiJ,YAAKpB,GAA6B7H,GADpD,UACC+D,EADD,OAELmE,QAAQC,IAAIpE,IACQ,IAAhBA,EAAS2C,GAHR,gBAIH,OAJG,SAIGW,YAAIlH,IAAeoK,qBAAqBxG,EAASmF,OAJpD,wCAOL,OAPK,UAOC7B,YAAIlH,IAAemK,mBAAmBvG,EAASmF,OAPhD,yC,gBCxGUxH,I,YAUAG,I,YAUAG,I,YAUAG,I,YAUAO,IAxCV,SAAUhB,KAAV,uEACY,OADZ,SACkBuH,YAAKlC,GADvB,WAEe,KADdhD,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIjE,EAAYzB,mBAAmBoC,EAASmF,OAH/C,wCAML,OANK,SAMC7B,YAAIjE,EAAYxB,iBAAiBmC,EAASmF,OAN3C,wCAUA,SAAUrH,GAAV,8EACY,OADKoF,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,SAAvB,SACkB+B,YAAKlC,EAAkB,CAACE,QAAMC,aADhD,WAEe,KADdnD,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIjE,EAAYtB,aAAaiC,EAASmF,OAHzC,wCAML,OANK,UAMC7B,YAAIjE,EAAYrB,WAAWgC,EAASmF,OANrC,yCAUA,SAAUlH,GAAV,gFACY,OADQoF,EAApB,EAAoBA,SAASH,EAA7B,EAA6BA,MAAMC,EAAnC,EAAmCA,SAAnC,SACkB+B,YAAKlC,EAAqB,CAACK,WAASH,QAAMC,aAD5D,WAEe,KADdnD,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIjE,EAAYnB,gBAAgB8B,EAASmF,OAH5C,wCAML,OANK,UAMC7B,YAAIjE,EAAYlB,cAAc6B,EAASmF,OANxC,yCAUA,SAAU/G,GAAV,4EACY,OADImC,EAAhB,EAAgBA,KAAhB,SACkB2E,YAAKlC,EAAiB,CAACzC,SADzC,WAEe,KADdP,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIjE,EAAYhB,YAAY2B,EAASmF,OAHxC,wCAML,OANK,UAMC7B,YAAIjE,EAAYf,UAAU0B,EAASmF,OANpC,yCAUA,SAAUxG,KAAV,iEACH,OADG,SACG2E,YAAIjE,EAAYT,iBADnB,yE,gBCxCU+C,I,YAUAG,I,YAUAG,IApBV,SAAUN,GAAV,8EACY,OADa+B,EAAzB,EAAyBA,KAAMY,EAA/B,EAA+BA,QAA/B,SACkBY,YAAKb,GAA6BX,EAAKY,GADzD,WAEe,KADdtE,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAImD,EAAe7E,qBAAqB5B,EAASmF,OAHpD,wCAML,OANK,UAMC7B,YAAImD,EAAe5E,mBAAmB7B,EAASmF,OANhD,yCAUA,SAAUrD,GAAV,8EACY,OADa4B,EAAzB,EAAyBA,KAAMa,EAA/B,EAA+BA,UAA/B,SACkBW,YAAKb,GAA6B,CAACX,OAAMa,cAD3D,WAEe,KADdvE,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAImD,EAAe1E,qBAAqB/B,EAASmF,OAHpD,wCAML,OANK,UAMC7B,YAAImD,EAAezE,mBAAmBhC,EAASmF,OANhD,yCAUA,SAAUlD,GAAV,4EACY,OADmByB,EAA/B,EAA+BA,KAA/B,SACkBwB,YAAKb,GAAkCX,GADzD,WAEe,KADd1D,EADD,QAEQ2C,GAFR,gBAIH,OADAwB,QAAQC,IAAIpE,EAASmF,MAHlB,SAIG7B,YAAImD,EAAevE,uBAAuBlC,EAASmF,OAJtD,wCAOL,OAPK,UAOC7B,YAAImD,EAAetE,qBAAqBnC,EAASmF,OAPlD,yC,gBCpBUnE,I,YAUAG,I,YAUAG,IApBV,SAAUN,GAAV,4EACY,OADWqC,EAAvB,EAAuBA,SAAvB,SACkB6B,YAAKV,GAA0BnB,GADjD,WAEe,KADdrD,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIoD,EAAezF,kBAAkBjB,EAASmF,OAHjD,wCAMH,OANG,UAMG7B,YAAIoD,EAAexF,gBAAgBlB,EAASmF,OAN/C,yCAUA,SAAUhE,GAAV,4EACY,OADWkC,EAAvB,EAAuBA,SAAvB,SACkB6B,YAAKV,GAA2BnB,GADlD,WAEe,KADdrD,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIoD,EAAetF,eAAepB,EAASmF,OAH9C,wCAML,OANK,UAMC7B,YAAIoD,EAAerF,aAAarB,EAASmF,OAN1C,yCAUA,SAAU7D,GAAV,4EACY,OADY+B,EAAxB,EAAwBA,SAAxB,SACkB6B,YAAKV,GAA4BnB,GADnD,WAEe,KADdrD,EADD,QAEQ2C,GAFR,gBAGH,OAHG,SAGGW,YAAIoD,EAAenF,oBAAoBvB,EAASmF,OAHnD,wCAML,OANK,UAMC7B,YAAIoD,EAAelF,kBAAkBxB,EAASmF,OAN/C,yC,gBCnBUwB,IAAV,SAAUA,KAAV,uEACY,OADZ,SACkBzB,YAAKT,IADvB,WAEe,KADdzE,EADD,QAEQ2C,GAFR,gBAGJ,OAHI,SAGEW,YAAIsD,IAAWC,eAAe7G,EAASmF,KAAKnI,OAH9C,wCAML,OANK,SAMCsG,YAAIsD,IAAWE,aAAa,YAN7B,wC,gBCsBkBC,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CACRC,YAAWC,IAAaC,aAAc5K,IACtC0K,YAAWC,IAAaE,uBAAwB1C,IAChDuC,YAAWC,IAAaG,oBAAqBvK,IAC7CmK,YAAWC,IAAaI,eAAgB3C,IACxCsC,YAAWC,IAAaK,sBAAuB3C,IAC/CqC,YAAWC,IAAaM,0BAA2B3C,IACnDoC,YAAWC,IAAaO,SAAUpL,IAClC4K,YAAWC,IAAaQ,YAAa5C,IACrCmC,YAAWC,IAAaS,oBAAqB5C,IAC7CkC,YAAWC,IAAaU,eAAgB5C,IACxCiC,YAAWC,IAAaW,eAAgB5C,IAExCgC,YAAWnI,EAAUgJ,iBAAkBnK,IACvCsJ,YAAWnI,EAAUiJ,MAAOjK,IAC5BmJ,YAAWnI,EAAUkJ,SAAU/J,IAC/BgJ,YAAWnI,EAAUmJ,KAAM7J,IAC3B6I,YAAWnI,EAAUoJ,OAAQvJ,IAE7BsI,YAAW7E,EAAa+F,eAAgBxG,IACxCsF,YAAW7E,EAAagG,eAAgBtG,IACxCmF,YAAW7E,EAAaiG,qBAAsBpG,IAE9CgF,YAAWvF,EAAa4G,YAAatH,IACrCiG,YAAWvF,EAAa6G,YAAapH,IACrC8F,YAAWvF,EAAa8G,cAAelH,IAEvC2F,YAAWwB,IAASC,SAAU/B,MA5BnB,wC,yCCpCAgC,GAAgB,CAC3BlM,SAAU,GACVR,QAAS,GACT2M,MAAO,GACPC,mBAAmB,EACnBxD,cAAe,KACfyD,kBAAkB,EAClB3C,aAAc,KACd4C,2BAA2B,EAC3BC,uBAAwB,KACxBC,wBAAwB,EACxBC,oBAAqB,KACrBC,wBAAwB,EACxBC,oBAAqB,KACrBC,0BAA0B,EAC1BC,sBAAuB,KACvBC,kBAAkB,EAClBC,cAAe,KACfC,4BAA4B,EAC5BC,wBAAyB,KACzBC,wBAAwB,EACxBC,wBAAwB,EACxBC,oBAAqB,KACrBC,WAAY,KACZlN,YAAa,EACbD,cAAe,EACftB,IAAK,OACLK,MAAO,KACPsB,KAAM,GACNlB,IAAK,MCqQIiO,GAAUC,wBAAcrB,IAAD,sBACjCzB,IAAaC,cA/RW,SAACnL,GAAD,uBACtBA,EADsB,CAEzB6M,mBAAmB,EACnBoB,eAAgB,UA2RkB,gBAEjC/C,IAAagD,kBA1Re,SAAClO,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBAC1B1D,EAD0B,CAE7BC,QAASyD,EAAQzD,QACjBQ,SAAUiD,EAAQjD,SAClBE,cAAe+C,EAAQ/C,cACvBkM,mBAAmB,EACnBoB,eAAgB,UAkRkB,gBAGjC/C,IAAaiD,gBAlRa,SAACnO,EAAOoO,GAAR,uBACxBpO,EADwB,CAE3B6M,mBAAmB,EACnBoB,eAAgBG,EAChB3N,SAAUkM,GAAclM,cA2QU,gBAIjCyK,IAAaQ,aA5QU,SAAC1L,GAAD,uBACrBA,EADqB,CAExB8M,kBAAkB,EAClBuB,cAAe,UAqQmB,gBAKjCnD,IAAaoD,iBAvQc,SAACtO,EAAD,OAAUC,EAAV,EAAUA,QAAV,uBACvBD,EADuB,CAE1BS,SAAWR,EAAQQ,SACnBR,QAASA,EAAQA,QACjB6M,kBAAkB,EAClBuB,cAAe,UA6PiB,gBAMjCnD,IAAaqD,eAhQY,SAACvO,EAAD,OAASoO,EAAT,EAASA,OAAT,uBACzBpO,EADyB,CAE5B8M,kBAAkB,EAClBuB,cAAeD,EACfnO,QAAS0M,GAAc1M,aAsPa,gBAOjCiL,IAAaE,wBAtPmB,SAACpL,GAAD,uBAC5BA,EAD4B,CAE/B+M,2BAA2B,EAC3BC,uBAAwB,UA4OQ,gBAQjC9B,IAAasD,4BAjPuB,SAACxO,EAAD,OAAUS,EAAV,EAAUA,SAAV,uBAChCT,EADgC,CAEnCS,SAAUA,EAASA,SACnBsM,2BAA2B,EAC3BC,uBAAwB,UAqOQ,gBASjC9B,IAAauD,0BA3OqB,SAACzO,EAAD,OAASoO,EAAT,EAASA,OAAT,uBAC9BpO,EAD8B,CAEjC+M,2BAA2B,EAC3BC,uBAAwBoB,EACxB3N,SAAUkM,GAAclM,cA8NQ,gBAUjCyK,IAAaG,qBArOgB,SAACrL,EAAD,OAAQF,EAAR,EAAQA,IAAR,EAAaJ,MAAb,uBACzBM,EADyB,CAE5BiN,wBAAwB,EACxBC,oBAAqB,KACrBpN,IAAKA,EACLT,IAAK,QAsN2B,gBAWjC6L,IAAawD,yBA9NoB,SAAC1O,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBAC7B1D,EAD6B,CAEhCS,SAAUiD,EAAQjD,SAClBE,cAAe+C,EAAQ/C,cACvBsM,wBAAwB,EACxBC,oBAAqB,UA8MW,gBAYjChC,IAAayD,uBAvNkB,SAAC3O,EAAD,OAASoO,EAAT,EAASA,OAAT,uBAC3BpO,EAD2B,CAE9BiN,wBAAwB,EACxBC,oBAAqBkB,EACrB3N,SAAUkM,GAAclM,cAuMQ,gBAajCyK,IAAaI,gBAjNa,SAACtL,GAAD,uBACtBA,EADsB,CAEzBmN,wBAAwB,EACxBC,oBAAqB,UAiMW,gBAcjClC,IAAa0D,wBA5MoB,SAAC5O,GAAD,uBAC7BA,EAD6B,CAEhCmN,wBAAwB,EACxBC,oBAAqB,KACrBU,WAAY,SA0LoB,gBAejC5C,IAAa2D,sBAtMkB,SAAC7O,EAAD,OAASoO,EAAT,EAASA,OAAT,uBAC3BpO,EAD2B,CAE9BmN,wBAAwB,EACxBC,oBAAqBgB,EACrB3N,SAAUkM,GAAclM,SACxBqN,WAAYnB,GAAcmB,gBAkLM,gBAgBjC5C,IAAaK,uBA/LmB,SAACvL,EAAD,OAAU0H,EAAV,EAAUA,KAAV,uBAC5B1H,EAD4B,CAE/B0H,KAAMA,EACNoH,8BAA8B,EAC9BC,0BAA2B,UA2KK,gBAiBjC7D,IAAa8D,2BAzLuB,SAAChP,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBAChC1D,EADgC,CAEnCS,SAAUT,EAAMS,SAASQ,KAAI,SAAAhB,GAC3B,OAAIA,EAAQyH,OAAShE,EAAQzD,QAAQyH,KAC5B,gBACFzH,EADL,CAEEgP,UAAWvL,EAAQzD,QAAQgP,UAC3BC,eAAgBxL,EAAQzD,QAAQiP,iBAG7BjP,KAET6O,8BAA8B,EAC9BC,0BAA2B,UA2JK,gBAkBjC7D,IAAaiE,yBA1KqB,SAACnP,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBAC9B/D,EAD8B,CAEjC8O,8BAA8B,EAC9BC,0BAA2BhL,OAqJK,gBAmBjCmH,IAAaM,2BArKsB,SAACxL,GAAD,uBAC/BA,EAD+B,CAElCqN,0BAA0B,EAC1BC,sBAAuB,UA+IS,gBAoBjCpC,IAAakE,+BAhK0B,SAACpP,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBACnC1D,EADmC,CAEtCS,SAAUiD,EAAQjD,SAClB4M,0BAA0B,EAC1BC,sBAAuB,UAwIS,gBAqBjCpC,IAAamE,6BA1JwB,SAACrP,EAAD,OAASoO,EAAT,EAASA,OAAT,uBACjCpO,EADiC,CAEpCqN,0BAA0B,EAC1BC,sBAAuBc,OAkIS,gBAsBjClD,IAAaS,qBA/HkB,SAAC3L,GAAD,uBAC3BA,EAD2B,CAE9ByN,4BAA4B,EAC5BC,wBAAyB,UAsGO,gBAuBjCxC,IAAaoE,6BA1HyB,SAACtP,EAAD,OAAS0D,EAAT,EAASA,QAAT,uBAClC1D,EADkC,CAErCS,SAAUT,EAAMS,SAASQ,KAAI,SAAAhB,GAC3B,OAAIA,EAAQyH,OAAShE,EAAQzD,QAAQyH,KAC5B,gBACFzH,EADL,CAEEgP,UAAWvL,EAAQzD,QAAQgP,UAC3BC,eAAgBxL,EAAQzD,QAAQiP,iBAG7BjP,KAETwN,4BAA4B,EAC5BC,wBAAyB,UAsFO,gBAwBjCxC,IAAaqE,2BA3GuB,SAACvP,EAAD,OAASoO,EAAT,EAASA,OAAT,uBAChCpO,EADgC,CAEnCyN,4BAA4B,EAC5BC,wBAAyBU,OAgFO,gBAyBjClD,IAAaO,UAxJO,SAACzL,GAAD,uBAChBA,EADgB,CAEnBuN,kBAAkB,EAClBC,cAAe,UA4HiB,gBA0BjCtC,IAAasE,cAnJW,SAACxP,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBACpB1D,EADoB,CAEvBS,SAAUiD,EAAQjD,SAClBE,cAAe+C,EAAQ/C,cACvBkM,mBAAmB,EACnBoB,eAAgB,KAChBV,kBAAkB,EAClBC,cAAe,UAkHiB,gBA2BjCtC,IAAauE,YA1IS,SAACzP,EAAD,OAASoO,EAAT,EAASA,OAAT,uBAClBpO,EADkB,CAErBuN,kBAAkB,EAClBC,cAAeY,OA4GiB,gBA4BjClD,IAAaU,gBAzGa,SAAC5L,GAAD,uBACtBA,EADsB,CAEzB2N,wBAAwB,EACxB+B,oBAAqB,UA0EW,gBA6BjCxE,IAAayE,wBApGoB,SAAC3P,GAAD,uBAC7BA,EAD6B,CAEhC2N,wBAAwB,EACxB+B,oBAAqB,UAoEW,gBA8BjCxE,IAAa0E,sBA/FoB,SAAC5P,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBAC7B/D,EAD6B,CAEhC2N,wBAAwB,EACxBE,oBAAqB9J,OA8DW,gBA+BjCmH,IAAaW,gBA1Fa,SAAC7L,GAAD,uBACtBA,EADsB,CAEzB4N,wBAAwB,EACxBC,oBAAqB,UAwDW,gBAgCjC3C,IAAa2E,wBArFoB,SAAC7P,EAAD,OAASC,EAAT,EAASA,QAAT,uBAC7BD,EAD6B,CAEhCC,QAASA,EAAQA,QACjB6N,WAAW,YAAD,OAAc7N,EAAQA,QAAQyH,MACxCkG,wBAAwB,EACxBC,oBAAqB,UAgDW,gBAiCjC3C,IAAa4E,sBA9EoB,SAAC9P,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBAC7B/D,EAD6B,CAEhC4N,wBAAwB,EACxBC,oBAAqB9J,OA0CW,gBAkCjCmH,IAAa6E,UAzEO,SAAC/P,EAAD,OAAS0D,EAAT,EAASA,QAAT,uBAClB1D,EADkB,CAErBS,SAAUiD,EAAQjD,SAClBE,cAAe+C,EAAQ/C,cACvBC,YAAc8C,EAAQvC,UAmCY,gBAmCjC+J,IAAa8E,kBAnEc,SAAChQ,EAAD,OAASkD,EAAT,EAASA,OAAT,uBACzBlD,EADyB,CAE5BN,MAAOwD,EAAOxD,MACde,SAAUyC,EAAOQ,QAAQjD,SACzBE,cAAeuC,EAAOQ,QAAQ/C,cAC9BtB,IAAK,KACLS,IAAKoD,EAAOpD,IACZc,YAAa,OAyBqB,gBAoCjCsK,IAAa+E,kBA1Dc,SAACjQ,EAAD,OAASkD,EAAT,EAASA,OAAT,uBACzBlD,EADyB,CAE5BN,MAAOwD,EAAOxD,MACdsB,KAAMkC,EAAOQ,QAAQ,GAAG1C,KACxBP,SAAUyC,EAAOQ,QAAQ,GAAGjD,SAC5BE,cAAeuC,EAAOQ,QAAQ,GAAG/C,cACjCC,YAAa,EACbvB,IAAK6D,EAAO7D,SAesB,gBAqCjC6L,IAAagF,aAjDU,SAAClQ,EAAD,OAASkD,EAAT,EAASA,OAAT,uBACrBlD,EAAMS,SADe,CAExBpB,IAAK6D,OAU6B,gBAsCjCgI,IAAaiF,qBA9CiB,SAACnQ,EAAD,OAASkD,EAAT,EAASA,OAAT,uBAC5BlD,EAD4B,CAE/BN,MAAOwD,EAAOxD,MACde,SAAUyC,EAAOzC,SACjBE,cAAeuC,EAAOvC,cACtBC,YAAa,OAGqB,KClSvB+L,GAAgB,CACzBpI,KAAM,GACN6L,yBAAyB,EACzBC,qBAAsB,KACtBC,eAAe,EACfC,WAAY,KACZC,mBAAmB,EACnBC,eAAgB,KAChB3C,WAAY,KACZ/O,MAAO,KACP+E,YAAa,GACb4M,YAAY,EACZC,gBAAgB,EAChBC,YAAa,MC4IJ7C,GAAUC,wBAAcrB,IAAD,mBAAC,GAChC7J,EAAUgJ,kBAtJe,SAAC9L,GAAD,uBACzBA,EADyB,CAE5BoQ,yBAAyB,EACzBC,qBAAsB,UAkJY,aAAC,GAEhCvN,EAAU+N,sBAjJmB,SAAC7Q,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBAC/B1D,EAD+B,CAElCuE,KAAMb,EAAQa,KACdT,YAAaJ,EAAQa,KACrB6L,yBAAyB,EACzBC,qBAAsB,UA0Ic,aAAC,GAGhCvN,EAAUgO,oBA1IiB,SAAC9Q,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBAC7B/D,EAD6B,CAEhCoQ,yBAAyB,EACzBC,qBAAsBtM,EACtBQ,KAAMoI,GAAcpI,UAmIgB,aAAC,GAIhCzB,EAAUiJ,OApIM,SAAC/L,GAAD,uBACdA,EADc,CAEjB2Q,gBAAgB,EAChBC,YAAa,UA6HmB,aAAC,GAKhC9N,EAAUiO,eA/Ha,SAAC/Q,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBACrB1D,EADqB,CAExBuE,KAAMb,EAAQa,KACduJ,WAAY,IACZ/O,MAAO2E,EAAQa,KAAKxF,MACpB+E,YAAaJ,EAAQa,KACrBoM,gBAAgB,EAChBC,YAAa,UAmHmB,aAAC,GAMhC9N,EAAUkO,aAtHa,SAAChR,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBACrB/D,EADqB,CAExB2Q,gBAAgB,EAChBC,YAAa7M,EACbQ,KAAMoI,GAAcpI,KACpBuJ,WAAYnB,GAAcmB,WAC1B/O,MAAO4N,GAAc5N,MACrB+E,YAAa6I,GAAc7I,iBAyGK,aAAC,GAOhChB,EAAUkJ,UA7GS,SAAChM,GAAD,uBACjBA,EADiB,CAEpBwQ,mBAAmB,EACnBC,eAAgB,UAmGgB,aAAC,GAQhC3N,EAAUmO,kBAxGgB,SAACjR,EAAD,OAAU0D,EAAV,EAAUA,QAAV,uBACxB1D,EADwB,CAE3BuE,KAAMb,EAAQa,KACduJ,WAAY,IACZ/O,MAAO2E,EAAQa,KAAKxF,MACpB+E,YAAYJ,EAAQa,KACpBiM,mBAAmB,EACnBC,eAAgB,UAyFgB,aAAC,GAShC3N,EAAUoO,gBA/Fc,SAAClR,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBACtB/D,EADsB,CAEzBwQ,mBAAmB,EACnBC,eAAgB1M,EAChBQ,KAAMoI,GAAcpI,KACpBuJ,WAAYnB,GAAcmB,WAC1B/O,MAAO4N,GAAc5N,MACrB+E,YAAa6I,GAAc7I,iBA+EK,aAAC,GAUhChB,EAAUmJ,MAtFK,SAACjM,EAAD,OAAUuE,EAAV,EAAUA,KAAV,uBACbvE,EADa,CAEhBuE,KAAMA,EAAKA,KACXT,YAAaS,EAAKA,KAClB+L,eAAe,EACfC,WAAY,UAuEoB,aAAC,GAWhCzN,EAAUqO,cA/EY,SAACnR,EAAD,OAAUuE,EAAV,EAAUA,KAAV,uBACpBvE,EADoB,CAEvBuE,KAAMA,EAAKA,KACXuJ,WAAY,IACZhK,YAAaS,EAAKA,KAClB+L,eAAe,EACfC,WAAY,UA8DoB,aAAC,GAYhCzN,EAAUsO,YAvEU,SAACpR,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBAClB/D,EADkB,CAErBsQ,eAAe,EACfC,WAAYxM,EACZQ,KAAMoI,GAAcpI,KACpBuJ,WAAYnB,GAAcmB,WAC1BhK,YAAa6I,GAAc7I,iBAqDK,aAAC,GAahChB,EAAUuO,WAtCS,SAACrR,EAAD,OAASjB,EAAT,EAASA,MAAT,uBACjBiB,EADiB,CAEtBjB,MAAOA,OAuB2B,aAAC,GAchC+D,EAAUwO,mBAlCgB,SAACtR,EAAD,OAASkD,EAAT,EAASA,OAAT,uBACxBlD,EADwB,gBAE9BkD,EAAOhC,IAAMgC,EAAOqO,WAkBe,aAAC,GAehCzO,EAAU0O,aA9BW,SAACxR,GAAD,uBACnBA,EADmB,CAE1B0Q,YAAY,OAawB,aAAC,GAgBhC5N,EAAU2O,WA3BS,SAACzR,GAAD,uBACjBA,EADiB,CAExB0Q,YAAY,OASwB,aAAC,GAiBhC5N,EAAUoJ,QAnEO,SAAClM,GAAD,uBACfA,EADe,CAElBoQ,yBAAyB,EACzBC,qBAAsB,UA+CU,aAAC,GAkBhCvN,EAAU4O,gBA9Dc,SAAC1R,GAAD,uBACtBA,EADsB,CAEzB8N,WAAY,IACZ/O,MAAO,KACP+E,YAAa,GACb6N,iBAAiB,EACjBC,aAAc,KACdrN,KAAM,QAqC0B,aAAC,GAmBhCzB,EAAU+O,cArDY,SAAC7R,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBACpB/D,EADoB,CAEvB8N,WAAYnB,GAAcmB,WAC1B/O,MAAO4N,GAAc5N,MACrB+E,YAAa6I,GAAc7I,YAC3B6N,iBAAiB,EACjBC,aAAc7N,OA4BkB,aAAC,GAoBhCjB,EAAUgP,UAzBS,SAAC9R,GAAD,uBACjBA,EADiB,CAEpB8N,WAAY,UAGoB,KCzJvBnB,GAAgB,CACzBoF,SAAU,GACVC,uBAAuB,EACvBC,mBAAoB,KACpBC,wBAAwB,EACxBC,oBAAqB,KACrBC,6BAA6B,EAC7BC,yBAA0B,MCwDjBtE,GAAUC,wBAAcrB,IAAD,mBAAC,GAChCvG,EAAa+F,gBA5DW,SAACnM,GAAD,uBACxBA,EADwB,CAE3BgS,uBAAuB,EACvBC,mBAAoB,UAwDc,aAAC,GAEhC7L,EAAakM,wBAvDkB,SAACtS,EAAD,KAAU0D,QAAV,uBAC7B1D,EAD6B,CAEhCgS,uBAAuB,EACvBC,mBAAoB,UAkDY,aAAC,GAGhC7L,EAAamM,sBAlDkB,SAACvS,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBAC7B/D,EAD6B,CAEhCgS,uBAAuB,EACvBQ,oBAAqBzO,OA4CW,aAAC,GAIhCqC,EAAagG,gBA7CW,SAACpM,GAAD,uBACtBA,EADsB,CAEzBkS,wBAAwB,EACxBC,oBAAqB,UAsCW,aAAC,GAKhC/L,EAAaqM,wBAxCoB,SAACzS,EAAD,OAASuI,EAAT,EAASA,UAAT,uBAC7BvI,EAD6B,CAEhC+R,SAAU/R,EAAMsI,QAAQoK,QAAO,SAAApK,GAAO,OAAIA,EAAQqK,KAAOpK,KACzD2J,wBAAwB,EACxBC,oBAAqB,UA+BS,aAAC,GAMhC/L,EAAawM,sBAlCoB,SAAC5S,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBAC7B/D,EAD6B,CAEhCkS,wBAAwB,EACxBC,oBAAqBpO,OAyBS,aAAC,GAOhCqC,EAAaiG,sBA7BgB,SAACrM,GAAD,uBAC3BA,EAD2B,CAE9BoS,6BAA6B,EAC7BC,yBAA0B,UAmBM,aAAC,GAQhCjM,EAAayM,0BAxBoB,SAAC7S,EAAD,OAAQ+R,EAAR,EAAQA,SAAR,uBAC/B/R,EAD+B,CAElC+R,SAAUA,EACVK,6BAA6B,EAC7BC,yBAA0B,UAYM,aAAC,GAShCjM,EAAa0M,wBAlBkB,SAAC9S,EAAD,OAAQ+D,EAAR,EAAQA,MAAR,uBAC7B/D,EAD6B,CAEhCoS,6BAA6B,EAC7BC,yBAA0BtO,EAC1BgO,SAAUpF,GAAcoF,cAKQ,KCEvBhE,GAAUC,wBCjEM,CACzB+E,QAAS,GACTC,qBAAqB,EACrBC,iBAAkB,KAClBC,qBAAqB,EACrBC,iBAAkB,KAClBC,uBAAuB,EACvBC,mBAAoB,OD0DY,mBAAC,GAChC3N,EAAa4G,aA9DQ,SAACtM,GAAD,uBACrBA,EADqB,CAExBgT,qBAAqB,EACrBC,iBAAkB,UA0DgB,aAAC,GAEhCvN,EAAa4N,qBAzDe,SAACtT,EAAD,OAAU+S,EAAV,EAAUA,QAAV,uBAC1B/S,EAD0B,CAE7B+S,QAASA,EAAQA,QACjBC,qBAAqB,EACrBC,iBAAkB,UAmDc,aAAC,GAGhCvN,EAAa6N,mBApDa,SAACvT,EAAD,OAAS+D,EAAT,EAASA,MAAT,uBACxB/D,EADwB,CAE3BgT,qBAAqB,EACrBC,iBAAkBlP,OA8Cc,aAAC,GAIhC2B,EAAa8G,eA5BU,SAACxM,GAAD,uBACrBA,EADqB,CAExBoT,uBAAuB,EACvBC,mBAAoB,UAqBY,aAAC,GAKhC3N,EAAa8N,uBAvBiB,SAACxT,EAAD,OAAS+S,EAAT,EAASA,QAAT,uBAC5B/S,EAD4B,CAE/B+S,QAASA,EAAQA,QACjBK,uBAAuB,EACvBC,mBAAoB,UAcY,aAAC,GAMhC3N,EAAa+N,qBAjBe,SAACzT,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBAC1B/D,EAD0B,CAE7BoT,uBAAuB,EACvBC,mBAAoBtP,OAQY,aAAC,GAOhC2B,EAAa6G,aAlDQ,SAACvM,GAAD,uBACnBA,EADmB,CAEtBkT,qBAAqB,EACrBC,iBAAkB,UAwCc,aAAC,GAQhCzN,EAAagO,iBA7CY,SAAC1T,EAAD,OAAU+S,EAAV,EAAUA,QAAV,uBACvB/S,EADuB,CAE1B+S,QAAUA,EAAQA,QAClBG,qBAAqB,EACrBC,iBAAkB,UAiCc,aAAC,GAShCzN,EAAaiO,eAvCU,SAAC3T,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBACrB/D,EADqB,CAExBkT,qBAAqB,EACrBC,iBAAkBpP,OA2Bc,aAAC,GAUhC2B,EAAayK,qBAfe,SAACnQ,EAAD,OAASkD,EAAT,EAASA,OAAT,uBAC1BlD,EAD0B,GAE1BkD,EAAO6P,YAGsB,KE1CvBhF,GAAUC,wBCvBM,CACzBhN,KAAM,GACN4S,kBAAkB,EAClBC,cAAe,ODoBiB,mBAAC,GAChCpH,IAASC,UApBS,SAAC1M,GAAD,uBAClBA,EADkB,CAErB4T,kBAAkB,EAClBC,cAAe,UAgBmB,aAAC,GAEhCpH,IAASqH,kBAfgB,SAAC9T,EAAD,OAASgB,EAAT,EAASA,KAAT,uBACvBhB,EADuB,CAE1BgB,KAAMA,EACN4S,kBAAkB,EAClBC,cAAe,UASiB,aAAC,GAGhCpH,IAASsH,gBATc,SAAC/T,EAAD,OAAU+D,EAAV,EAAUA,MAAV,uBACrB/D,EADqB,CAExB4T,kBAAkB,EAClBC,cAAe9P,OAGiB,KEvBvB4I,GAAgB,CACzB7N,QAAS,UACTC,MAAO,KACPyE,kBAAmB,EACnBsK,WAAY,KACZhK,YAAa,GACbkQ,WAAW,EACXvQ,cAAc,G,SCgBLsK,GAAUC,wBAAcrB,IAAD,mBAAC,GAChCjL,KAAYuS,UApBM,SAACjU,EAAD,OAASuE,EAAT,EAASA,KAAMxF,EAAf,EAAeA,MAAO0E,EAAtB,EAAsBA,aAAtB,uBAClBzD,EADkB,CAErBjB,MAAOA,EACPiV,WAAW,EACXlQ,YAAaS,EACbd,aAAcA,OAcoB,aAAC,GAEhC/B,KAAYoQ,UAbO,SAAC9R,GAAD,uBACnBA,EADmB,CAEtB8N,WAAY,UASsB,aAAC,GAGhCpM,KAAYwS,eATW,SAAClU,GAAD,uBACvBA,EADuB,CAE1BwD,kBAAmBmJ,GAAcmB,WAAa,OAIZ,K,GCrBR1M,wBAAc,CACtC+S,iBAAkB,CAAC,UACnBC,iBAAkB,KAClBC,wBAAyB,CAAC,UAC1BC,sBAAuB,CAAC,SACxBC,OAAQ,KACRC,UAAW,CAAC,UACZC,kBAAmB,CAAC,YAEXC,G,GATLlT,MAUOC,G,GAVAA,SCgDFsM,GAAUC,wBClDM,CACzBhN,KAAM,GACN2T,uBAAwB,KACxBC,2BAA2B,EAC3BC,MAAO,GACPC,YAAa,GACb7Q,KAAK,GACL8Q,QAAS,KD2CuB,mBAAC,GAChCL,GAAYM,oBA/Ce,SAAChV,EAAD,OAAUkD,EAAV,EAAUA,OAAV,uBAC3BlD,EAD2B,CAE9BiV,YAAa/R,EAAOQ,QAAUR,EAAOQ,QAAQzD,QAAQyH,KAAO,GAC5DmN,MAAO3R,EAAOQ,QAAUR,EAAOQ,QAAQzD,QAAQ4U,MAAQ,GACvDC,YAAa5R,EAAOQ,QAAUR,EAAOQ,QAAQzD,QAAQ6U,YAAc,GACnE7Q,KAAMf,EAAOQ,QAAUR,EAAOQ,QAAQzD,QAAQgE,KAAO,GACrDiR,SAAU,GACVH,QAAS7R,EAAOQ,QAAUR,EAAOQ,QAAQzD,QAAQ8U,QAAU,QAuCzB,aAAC,GAEhCL,GAAYS,mBAtCe,SAACnV,GAAD,uBAC3BA,EAD2B,CAE9B0Q,YAAY,EACZkE,2BAA2B,EAC3BD,uBAAwB,UAgCU,aAAC,GAGhCD,GAAYU,2BAjCsB,SAACpV,EAAD,OAAUkD,EAAV,EAAUA,OAAV,uBAClClD,EADkC,CAErC0Q,WAAY,KACZkE,2BAA2B,EAC3BD,uBAAwBzR,EAAOQ,QAAQ0K,YA0BL,aAAC,GAIhCsG,GAAYW,yBA5BoB,SAACrV,EAAD,OAAUkD,EAAV,EAAUA,OAAV,uBAChClD,EADgC,CAEnC0Q,WAAY,KACZkE,2BAA2B,EAC3BD,uBAAwBzR,EAAOQ,QAAQ0K,YAoBL,aAAC,GAKhCsG,GAAYY,SAtBK,SAACtV,GAAD,uBACjBA,EADiB,CAEpB+U,QAAS/U,EAAM+U,QAAQQ,OAAO,CAACvV,EAAMkV,WACrCA,SAAU,QAcwB,aAAC,GAMhCR,GAAYc,YAjBQ,SAACxV,EAAD,OAASkD,EAAT,EAASA,OAAT,uBACpBlD,EADoB,CAEvB+U,QAAS/U,EAAM+U,QAAQrC,QAAO,SAAA5S,GAAG,OAAIA,IAAQoD,EAAOpD,YASlB,aAAC,GAOhC4U,GAAYe,qBAbgB,SAACzV,EAAD,OAASkD,EAAT,EAASA,OAAT,uBAC5BlD,EAD4B,gBAE9BkD,EAAOhC,IAAMgC,EAAOqO,WAIa,K,GEhDRnQ,wBAAc,CACtCsU,eAAgB,CAAC,YAERC,G,GAHLnU,MCQKuM,I,GDREtM,SCQQuM,wBCVM,CACzBhN,KAAM,IDS0B,gBAC/B2U,GAAU1F,kBAPe,SAACjQ,EAAD,OAAQkD,EAAR,EAAQA,OAAR,uBACzBlD,EADyB,CAE5BgB,KAAMkC,EAAOQ,QAAQ,GAAG1C,YEOX,cAYb,OjCNa,SAAC4U,EAAaC,GAC3B,IAAMC,EAAa,GACbC,EAAY,GAGZC,EAAiBC,cAEvBH,EAAWtR,KAAKwR,GAEDE,yBAUfH,EAAUvR,KAPC2R,kBAAe,WAAf,GAAgBxR,EAAoB5B,EAAmBmB,GAAvD,OAAkF4R,KAU7F,IAAMM,EAAmBC,YAAexR,EAAe+Q,GAGnDU,EAAmBC,8BAAoB,IAErCvT,EAAQwT,sBAAYJ,EAAkBE,EAAgB,WAAhB,EAAoBP,IAC1DU,EAAYC,YAAa1T,GAK/B,OAFAgT,EAAeW,IAAId,GAEZ,CAAE7S,QAAOyT,YAAWhS,WiC3BpBmS,CAXaC,0BAAgB,CAClC5W,QAAS6W,GACTjT,KAAMkT,GACNzO,QAAS0O,GACTjE,QAASkE,GACTnX,IAAKoX,GACLhX,OAAQiX,GACRC,OAAQC,GACRC,KAAMC,GACNC,OAAQC,MAEyB5B,K,kBCbjB6B,QACW,cAA7BtT,OAAOuT,SAASC,UAEe,UAA7BxT,OAAOuT,SAASC,UAEhBxT,OAAOuT,SAASC,SAASC,MACvB,2D,gDCbAC,GAAgB,SAAA3Y,GACpB,OAAgD,IAA3CqI,OAAOuQ,KAAK5Y,EAAM2E,aAAakU,OAEhC,wBAAIhZ,UAAU,gCAEZ,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CAAMiZ,GAAG,IAAIjZ,UAAU,YAAvB,SAKF,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CAAMiZ,GAAG,SAASjZ,UAAU,YAA5B,YAKF,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CAAMiZ,GAAG,YAAYjZ,UAAU,YAA/B,aAQD,MAMHkZ,GAAe,SAAA/Y,GACnB,OAAiD,IAA3CqI,OAAOuQ,KAAK5Y,EAAM2E,aAAakU,OAEjC,wBAAIhZ,UAAU,gCAEZ,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CAAMiZ,GAAG,IAAIjZ,UAAU,YAAvB,SAKF,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CAAMiZ,GAAG,UAAUjZ,UAAU,YAC3B,uBAAGA,UAAU,gBADf,iBAKF,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CAAMiZ,GAAG,YAAYjZ,UAAU,YAC7B,uBAAGA,UAAU,eADf,iBAKF,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CACEiZ,GAAE,YAAO9Y,EAAM2E,YAAYuD,UAC3BrI,UAAU,YACV,yBAAKmZ,IAAKhZ,EAAM2E,YAAYsU,MAAOpZ,UAAU,WAAWqZ,IAAKlZ,EAAM2E,YAAYsU,QAC9EjZ,EAAM2E,YAAYuD,YAQtB,MA4BMiR,G,2KArBX,OACE,yBAAKtZ,UAAU,uBACb,yBAAKA,UAAU,aAEb,kBAAC,KAAD,CAAMiZ,GAAG,IAAIjZ,UAAU,gBACpBuZ,KAAKpZ,MAAML,QAAQG,eAGtB,kBAAC,GAAD,CAAe6E,YAAayU,KAAKpZ,MAAM2E,cAEvC,kBAAC,GAAD,CAAcA,YAAayU,KAAKpZ,MAAM2E,oB,GAZ3B0U,IAAMC,WClCZ1Y,gBAAQ,iBAAO,MALH,SAAAI,GAAQ,MAAK,CACtCuY,cAAe,SAAAhR,GAAI,OACjBvH,EAASC,IAAeuI,cAAcjB,QAG3B3H,EAtCQ,SAACZ,GACtB,IAAMc,EAAUd,EAAMc,QAItB,OAAId,EAAMwZ,UAEN,8BAEE,kBAAC,KAAD,CACEV,GAAE,kBAAahY,EAAQyH,MACvB1I,UAAU,oCACV,uBAAGA,UAAU,aAHf,iBAMA,4BAAQA,UAAU,gCAAgCM,QAb5C,WACVH,EAAMuZ,cAAczY,EAAQyH,QAatB,uBAAG1I,UAAU,gBADf,oBASJ,kCCAW4Z,GAzBK,SAACzZ,GACnB,IAAMc,EAAUd,EAAMc,QACtB,OACE,yBAAKjB,UAAU,gBACb,kBAAC,KAAD,CAAMiZ,GAAE,YAAOhY,EAAQgI,OAAOZ,WAC5B,yBAAK8Q,IAAKlY,EAAQgI,OAAOmQ,MAAOC,IAAKpY,EAAQgI,OAAOZ,YAGtD,yBAAKrI,UAAU,QACb,kBAAC,KAAD,CAAMiZ,GAAE,YAAOhY,EAAQgI,OAAOZ,UAAYrI,UAAU,UACjDiB,EAAQgI,OAAOZ,UAElB,0BAAMrI,UAAU,QACb,IAAI6Z,KAAK5Y,EAAQ6Y,WAAWC,iBAIjC,kBAAC,GAAD,CAAgBJ,UAAWxZ,EAAMwZ,UAAW1Y,QAASA,MCjBrD+Y,G,oDACJ,WAAY7Z,GAAQ,IAAD,+BACjB,cAAMA,IACDa,MAAQ,CACXiE,KAAM,IAGR,EAAKgV,QAAU,SAAA1Z,GACb,EAAK2Z,SAAS,CAAEjV,KAAM1E,EAAG4Z,OAAO5H,SAGlC,EAAK5L,cAAgB,SAAApG,GACnBA,EAAGC,iBACH,IAAMkI,EAAO,EAAKvI,MAAMuI,KAClBY,EAAY,EAAKtI,MAAMiE,KAC7B,EAAKiV,SAAS,CAAEjV,KAAM,KACtB,EAAK9E,MAAMia,SAAS1R,EAAKY,IAfV,E,sDAoBjB,OACE,0BAAMtJ,UAAU,oBAAoBoa,SAAUb,KAAK5S,eACjD,yBAAK3G,UAAU,cACb,8BAAUA,UAAU,eAClBqa,YAAY,qBACZ9H,MAAOgH,KAAKvY,MAAMiE,KAClBqV,SAAUf,KAAKU,QACfM,KAAK,OAGT,yBAAKva,UAAU,eACb,yBACEmZ,IAAKI,KAAKpZ,MAAM2E,YAAYsU,MAC5BpZ,UAAU,qBACVqZ,IAAKE,KAAKpZ,MAAM2E,YAAYuD,WAC9B,4BACErI,UAAU,yBACVmF,KAAK,UAFP,sB,GApCiBqU,IAAMC,WAyDlB1Y,gBAAQ,iBAAO,MALH,SAAAI,GAAQ,MAAK,CACtCiZ,SAAU,SAAC1R,EAAKY,GAAN,OACRnI,EAASqZ,EAAc7T,cAAc+B,EAAKY,QAG/BvI,CAAwCiZ,IC9BxCjZ,gBAAQ,iBAAO,MALH,SAAAI,GAAQ,MAAK,CACtCb,QAAS,SAACoI,EAAMa,GAAP,OACPpI,EAASsK,EAAe3E,cAAc4B,EAAKa,QAGhCxI,EA3BM,SAACZ,GAKpB,OAAIA,EAAMsa,KAEN,0BAAMza,UAAU,eACd,uBAAGA,UAAU,cAAcM,QAPrB,WACVH,EAAMG,QAAQH,EAAMuI,KAAMvI,EAAMoJ,eAU3B,QCuBMmR,GAnCC,SAACva,GACf,IAAMmJ,EAAUnJ,EAAMmJ,QAChBmR,EAAOta,EAAM2E,mB,GACZ3E,MAAM2E,YAAYuD,WAAaiB,EAAQL,OAAOZ,SACrD,OACE,yBAAKrI,UAAU,QACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,aAAasJ,EAAQrE,OAEpC,yBAAKjF,UAAU,eACb,kBAAC,KAAD,CACEiZ,GAAE,YAAO3P,EAAQL,OAAOZ,UACxBrI,UAAU,kBACV,yBAAKmZ,IAAK7P,EAAQL,OAAOmQ,MAAOpZ,UAAU,qBAAqBqZ,IAAK/P,EAAQL,OAAOZ,YAJvF,OAOE,kBAAC,KAAD,CACE4Q,GAAE,YAAO3P,EAAQL,OAAOZ,UACxBrI,UAAU,kBACTsJ,EAAQL,OAAOZ,UAElB,0BAAMrI,UAAU,eACb,IAAI6Z,KAAKvQ,EAAQwQ,WAAWC,gBAE/B,kBAAC,GAAD,CAAcU,KAAMA,EAAM/R,KAAMvI,EAAMuI,KAAMa,UAAWD,EAAQqK,QCExDgH,GA3BK,SAACxa,GACnB,OAAGA,EAAM4S,SAASiG,OAAS,EAEvB,6BAEE7Y,EAAM4S,SAAS9Q,KAAI,SAAAqH,GACjB,OACE,kBAAC,GAAD,CACEA,QAASA,EACTxE,YAAa3E,EAAM2E,YACnB4D,KAAMvI,EAAMuI,KACZxG,IAAKoH,EAAQqK,SAQlB,+BCqBMiH,GAtCU,SAAAza,GACvB,OAAIA,EAAM2E,YAEN,yBAAK9E,UAAU,kCACb,6BACE,iCAAaoP,OAAQjP,EAAMiP,SAC3B,kBAAC,GAAD,CAAc1G,KAAMvI,EAAMuI,KAAM5D,YAAa3E,EAAM2E,eAGrD,kBAAC,GAAD,CACEiO,SAAY5S,EAAM4S,UAAY,GAC9BrK,KAAMvI,EAAMuI,KACZ5D,YAAa3E,EAAM2E,eAKvB,yBAAK9E,UAAU,kCACb,2BACE,kBAAC,KAAD,CAAMiZ,GAAG,UAAT,WADF,aAGE,kBAAC,KAAD,CAAMA,GAAG,aAAT,WAHF,wCAOA,kBAAC,GAAD,CACElG,SAAU5S,EAAM4S,SAChBrK,KAAMvI,EAAMuI,KACZ5D,YAAa3E,EAAM2E,gB,oBCxBvB+V,G,oDACJ,WAAY1a,GAAQ,IAAD,+BACjB,cAAMA,IACDa,MAAQ,CACX0H,KAAM,EAAKvI,MAAM0Y,MAAMiC,OAAOnH,GAC9BoH,UAAW,IAJI,E,iEAQdxB,KAAKvY,MAAM0H,MACX6Q,KAAKpZ,MAAM6a,OAAOzB,KAAKvY,MAAM0H,Q,6CAIhC6Q,KAAKpZ,MAAM8a,a,+BAIX,IAAK1B,KAAKpZ,MAAMc,QACd,OAAO,KAET,IAAMia,EAAS,CAAEC,OAAQC,KAAO7B,KAAKpZ,MAAMc,QAAQgE,MAAQ,KACpD0U,EAAYJ,KAAKpZ,MAAM2E,aAC5ByU,KAAKpZ,MAAM2E,YAAYuD,WAAakR,KAAKpZ,MAAMc,QAAQgI,OAAOZ,SAChE,OACE,yBAAKrI,UAAU,gBAEb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,aAEb,4BAAKuZ,KAAKpZ,MAAMc,QAAQ4U,OACxB,kBAAC,GAAD,CACE5U,QAASsY,KAAKpZ,MAAMc,QACpB0Y,UAAWA,MAKjB,yBAAK3Z,UAAU,kBAEb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,aAEb,yBAAKqb,wBAAyBH,IAE9B,wBAAIlb,UAAU,YAEVuZ,KAAKpZ,MAAMc,QAAQ8U,QAAQ9T,KAAI,SAAAnB,GAC7B,OACE,wBACEd,UAAU,mCACVkC,IAAKpB,GACJA,SAUf,6BAEA,yBAAKd,UAAU,oBAGf,yBAAKA,UAAU,OACb,kBAAC,GAAD,CACE+S,SAAUwG,KAAKpZ,MAAM4S,UAAY,GACjC3D,OAAQmK,KAAKpZ,MAAMmb,cACnB5S,KAAM6Q,KAAKpZ,MAAM0Y,MAAMiC,OAAOnH,GAC9B7O,YAAayU,KAAKpZ,MAAM2E,qB,GAxElB0U,IAAMC,WAyGX1Y,gBAdS,SAAAC,GAAK,uBACxBA,EAAMC,QADkB,GAExBD,EAAMsI,QAFkB,CAG3BxE,YAAa9D,EAAM6D,KAAKC,iBAEC,SAAA3D,GAAQ,MAAK,CACtC6Z,OAAQ,SAAAtS,GACNvH,EAASC,IAAe0I,WAAWpB,IACnCvH,EAASsK,EAAexE,mBAAmByB,KAE7CuS,SAAU,kBACR9Z,EAASoa,KAAchZ,oBAGZxB,CAA6C8Z,ICvF7CW,G,2KAvBX,GAAIjC,KAAKpZ,MAAMiP,OAAQ,CACrB,IAAMA,EAASmK,KAAKpZ,MAAMiP,OAAOA,OACjC,OACE,wBAAIpP,UAAU,kBAEVwI,OAAOuQ,KAAK3J,GAAQnN,KAAI,SAAAC,GACtB,OACE,wBAAIA,IAAKA,GACNA,EADH,IACSkN,EAAOlN,QAQ1B,OAAO,S,GAlBYsX,IAAMC,WCKzBgC,G,oDACJ,aAAe,IAAD,uBAGZ,IAAMC,EAAmB,SAAAxZ,GAAG,OAAI,SAAA3B,GAAE,OAAI,EAAKJ,MAAMwb,cAAczZ,EAAK3B,EAAG4Z,OAAO5H,SAHlE,OACZ,gBAGKqJ,YAAcF,EAAiB,SACpC,EAAKG,kBAAoBH,EAAiB,eAC1C,EAAKI,WAAaJ,EAAiB,QACnC,EAAKK,eAAiBL,EAAiB,YAEvC,EAAKM,cAAgB,SAAAzb,GACA,KAAfA,EAAG0b,UACL1b,EAAGC,iBACH,EAAKL,MAAM+b,aAIf,EAAKC,iBAAmB,SAAArb,GAAG,OAAI,WAC7B,EAAKX,MAAMic,YAAYtb,KAGzB,EAAKub,WAAa,SAAA9b,GAChBA,EAAGC,iBACH,IAAMS,EAAU,CACd4U,MAAO,EAAK1V,MAAM0V,MAClBC,YAAa,EAAK3V,MAAM2V,YACxB7Q,KAAM,EAAK9E,MAAM8E,KACjB8Q,QAAS,EAAK5V,MAAM4V,SAGhBrN,EAAO,CAAEA,KAAM,EAAKvI,MAAMuI,MAChC,EAAKvI,MAAMuI,KACT,EAAKvI,MAAMmc,gBAAgB9T,OAAOC,OAAOxH,EAASyH,IAClD,EAAKvI,MAAMoc,gBAAgBtb,IAhCnB,E,gEAoCKub,GACjB,GAAIjD,KAAKpZ,MAAM0Y,MAAMiC,OAAOpS,OAAS8T,EAAU3D,MAAMiC,OAAOpS,KAAM,CAChE,GAAI8T,EAAU3D,MAAMiC,OAAOpS,KAEzB,OADA6Q,KAAKpZ,MAAM8a,WACJ1B,KAAKpZ,MAAMsc,aAAalD,KAAKpZ,MAAM0Y,MAAMiC,OAAOpS,MAEzD6Q,KAAKpZ,MAAMuc,cAAc,S,0CAK3B,GAAInD,KAAKpZ,MAAM0Y,MAAMiC,OAAOpS,KAC1B,OAAO6Q,KAAKpZ,MAAMsc,aAAalD,KAAKpZ,MAAM0Y,MAAMiC,OAAOpS,MAEzD6Q,KAAKpZ,MAAMsc,aAAa,Q,6CAIxBlD,KAAKpZ,MAAMsc,aAAa,Q,+BAGhB,IAAD,OACP,OACE,yBAAKzc,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mCAEb,kBAAC,GAAD,CAAYoP,OAAQmK,KAAKpZ,MAAMiP,SAE/B,8BACE,kCAEE,8BAAUpP,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,OACLkV,YAAY,gBACZ9H,MAAOgH,KAAKpZ,MAAM0V,MAClByE,SAAUf,KAAKqC,eAGnB,8BAAU5b,UAAU,cAClB,2BACEA,UAAU,eACVmF,KAAK,OACLkV,YAAY,6BACZ9H,MAAOgH,KAAKpZ,MAAM2V,YAClBwE,SAAUf,KAAKsC,qBAGnB,8BAAU7b,UAAU,cAClB,8BACEA,UAAU,eACVua,KAAK,IACLF,YAAY,mCACZ9H,MAAOgH,KAAKpZ,MAAM8E,KAClBqV,SAAUf,KAAKuC,cAInB,8BAAU9b,UAAU,cAClB,2BACEA,UAAU,eACVmF,KAAK,OACLkV,YAAY,aACZ9H,MAAOgH,KAAKpZ,MAAM+V,SAClBoE,SAAUf,KAAKwC,eACfY,QAASpD,KAAKyC,gBAEhB,yBAAKhc,UAAU,aAEVuZ,KAAKpZ,MAAM4V,SAAW,IAAI9T,KAAI,SAAAnB,GAC7B,OACE,0BAAMd,UAAU,uBAAuBkC,IAAKpB,GAC1C,uBAAId,UAAU,kBACVM,QAAS,EAAK6b,iBAAiBrb,KAElCA,QAQb,4BACEd,UAAU,uCACVmF,KAAK,SACLyX,SAAUrD,KAAKpZ,MAAMuR,WACrBpR,QAASiZ,KAAK8C,YAJhB,6B,GA3HG7C,IAAMC,WAmLZ1Y,gBA1BS,SAAAC,GAAK,uBACxBA,EAAMC,QAAQA,QADU,GAExBD,EAAMoX,OAFkB,CAG3BhJ,OAAQpO,EAAMC,QAAQ4N,yBAGG,SAAA1N,GAAQ,MAAK,CACtC+a,SAAU,kBACR/a,EAAS0b,GAActH,WACzByF,OAAQ,SAAAtW,GAAO,OACbvD,EAAS0b,GAAcC,iBAAiB,CAAEpY,cAC5C0X,YAAa,SAAAtb,GAAG,OACdK,EAAS0b,GAAcrH,UAAU,CAAC1U,UACpCsZ,SAAU,SAAA1V,GAAO,OACfvD,EAAS0b,GAAczH,iBAAiB,CAAC1Q,cAC3CiX,cAAe,SAACzZ,EAAKqQ,GAAN,OACbpR,EAAS0b,GAAcpH,kBAAkB,CAACvT,MAAKqQ,YACjD+J,gBAAiB,SAAC5T,EAAMzH,GAAP,OACfE,EAASC,IAAe4I,cAAetB,EAAMzH,KAC/Csb,gBAAiB,SAAAtb,GAAO,OACtBE,EAASC,IAAe6I,cAAchJ,KACxCwb,aAAc,SAACxb,GAAD,OACZE,EAASC,IAAe0I,WAAW7I,KACrCga,SAAU,kBACR9Z,EAASoa,KAAchZ,oBAEZxB,CAA6C0a,I,SCnLtDsB,G,oDACJ,WAAY5c,GAAQ,IAAD,+BACjB,cAAMA,IACD6c,YAAc,SAAAzc,GAAE,OAAI,EAAKJ,MAAM8c,cAAc1c,EAAG4Z,OAAO5H,QAC5D,EAAK2K,eAAiB,SAAA3c,GAAE,OAAI,EAAKJ,MAAMgd,iBAAiB5c,EAAG4Z,OAAO5H,QAClE,EAAK8J,WAAa,SAACnU,EAAOC,GAAR,OAAqB,SAAA5H,GACrCA,EAAGC,iBACH,EAAKL,MAAMia,SAASlS,EAAOC,KANZ,E,oEAWjBoR,KAAKpZ,MAAM8a,a,+BAIX,IAAM/S,EAAQqR,KAAKpZ,MAAM+H,OAAS,GAC5BC,EAAWoR,KAAKpZ,MAAMgI,UAAY,GACxC,OACE,yBAAKnI,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,kBAAd,WACA,uBAAGA,UAAU,kBACX,kBAAC,KAAD,CAAMiZ,GAAG,aAAT,qBAKF,kBAAC,GAAD,CAAY7J,OAAQmK,KAAKpZ,MAAMiP,SAE/B,0BAAMgL,SAAUb,KAAK8C,WAAWnU,EAAOC,IACrC,kCAEE,8BAAUnI,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,QACLkV,YAAY,QACZ9H,MAAOrK,EACPoS,SAAUf,KAAKyD,eAGnB,8BAAUhd,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,WACLkV,YAAY,WACZ9H,MAAOpK,EACPmS,SAAUf,KAAK2D,kBAGnB,4BACEld,UAAU,uCACVmF,KAAK,SACLyX,SAAUrD,KAAKpZ,MAAMuR,YAHvB,qB,GAtDE8H,IAAMC,WAgGX1Y,gBAdS,SAAAC,GAAK,uBACxBA,EAAM6D,KADkB,CAE3BuK,OAAQpO,EAAM6D,KAAK+M,iBAGM,SAAAzQ,GAAQ,MAAK,CACtC8b,cAAe,SAAA1K,GAAK,OAClBpR,EAASkD,EAAYb,gBAAgB,CAACtB,IAAK,QAASqQ,YACtD4K,iBAAkB,SAAA5K,GAAK,OACrBpR,EAASkD,EAAYb,gBAAgB,CAACtB,IAAK,WAAYqQ,YACzD6H,SAAU,SAAClS,EAAOC,GAAR,OAAqBhH,EAASkD,EAAYvB,MAAMoF,EAAOC,KACjE8S,SAAU,kBACR9Z,EAASoa,KAAchZ,oBAEZxB,CAA6Cgc,I,SC/FtDK,GAAsB,SAACjd,GAC3B,OAAIA,EAAMkd,OAEN,kBAAC,KAAD,CACEpE,GAAG,YACHjZ,UAAU,+CACV,uBAAGA,UAAU,eAHf,0BAOG,MAMHsd,GAAmB,SAAAnd,GACvB,GAAIA,EAAMkd,OACR,OAAO,KAGT,IAAIE,EAAU,wBACVpd,EAAMoF,KAAKiY,UACbD,GAAW,iBAEXA,GAAW,yBAYb,OACE,4BACEvd,UAAWud,EACXjd,QAZgB,SAAAC,GAClBA,EAAGC,iBACCL,EAAMoF,KAAKiY,UACbrd,EAAMsd,SAAStd,EAAMoF,KAAK8C,UAE1BlI,EAAMud,OAAOvd,EAAMoF,KAAK8C,YAQxB,uBAAGrI,UAAU,mBAHf,OAKGG,EAAMoF,KAAKiY,UAAY,WAAa,SALvC,IAKkDrd,EAAMoF,KAAK8C,WAW3DsV,G,sLAEFpE,KAAKpZ,MAAM6a,OAAOzB,KAAKpZ,MAAM0Y,MAAMiC,OAAOzS,SAAUkR,KAAKpZ,MAAMO,S,yCAG9C8b,GACdA,EAAUzI,QAAQA,UACnBwF,KAAKpZ,MAAM4T,QAAQyJ,UAAYhB,EAAUzI,QAAQyJ,a,6CAKnDjE,KAAKpZ,MAAM8a,a,mCAIX,OACE,wBAAIjb,UAAU,gCACZ,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CACEA,UAAU,kBACViZ,GAAE,YAAOM,KAAKpZ,MAAM4T,QAAQ1L,WAF9B,gBAOF,wBAAIrI,UAAU,YACZ,kBAAC,KAAD,CACEA,UAAU,WACViZ,GAAE,YAAOM,KAAKpZ,MAAM4T,QAAQ1L,SAA1B,eAFJ,0B,+BAWN,IAAM0L,EAAUwF,KAAKpZ,MAAM4T,QAC3B,IAAKA,EACH,OAAO,KAGT,IAAMsJ,EAAS9D,KAAKpZ,MAAM2E,aACxByU,KAAKpZ,MAAM4T,QAAQ1L,WAAakR,KAAKpZ,MAAM2E,YAAYuD,SAEzD,OACE,yBAAKrI,UAAU,gBAEb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mCAEb,yBAAKmZ,IAAKpF,EAAQqF,MAAOpZ,UAAU,WAAWqZ,IAAKtF,EAAQ1L,WAC3D,4BAAK0L,EAAQ1L,UACb,2BAAI0L,EAAQ6J,KAEZ,kBAAC,GAAD,CAAqBP,OAAQA,IAC7B,kBAAC,GAAD,CACEA,OAAQA,EACR9X,KAAMwO,EACN2J,OAAQnE,KAAKpZ,MAAMud,OACnBD,SAAUlE,KAAKpZ,MAAMsd,eAQ/B,yBAAKzd,UAAU,aACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,mCAEb,yBAAKA,UAAU,mBACZuZ,KAAKsE,cAGR,kBAACC,GAAA,EAAD,CACEpd,MAAO6Y,KAAKpZ,MAAMO,MAClBe,SAAU8X,KAAKpZ,MAAMsB,SACrBE,cAAe4X,KAAKpZ,MAAMwB,cAC1BC,YAAa2X,KAAKpZ,MAAMyB,sB,GApFlB4X,IAAMC,WAwGtBsE,GAAkB,SAAA/c,GAAK,uBACxBA,EAAMC,QADkB,GAExBD,EAAM+S,QAFkB,GAGxB/S,EAAM6D,OAaI9D,eAAQgd,IAVI,SAAA5c,GAAQ,MAAK,CACtCuc,OAAQ,SAAArV,GAAQ,OAAIlH,EAASuK,EAAe1F,WAAWqC,KACvD2S,OAAQ,SAAC3S,EAAU3H,GACjBS,EAASuK,EAAejF,kBAAkB4B,IAC1ClH,EAASuK,EAAevF,WAAWkC,IACnClH,EAASC,IAAesI,oBAAoBrB,EAAU3H,KAExD+c,SAAU,SAAApV,GAAQ,OAAIlH,EAASuK,EAAepF,aAAa+B,KAC3D4S,SAAU,kBAAM9Z,EAASoa,KAAchZ,oBAE1BxB,CAA6C4c,I,SC9KtDK,G,sLAEFzE,KAAKpZ,MAAM6a,OAAOzB,KAAKpZ,MAAM0Y,MAAMiC,OAAOzS,Y,0CAI1CkR,KAAKpZ,MAAM8a,a,mCAIX,OACE,wBAAIjb,UAAU,gCACZ,wBAAIA,UAAU,YACZ,kBAAC,KAAD,CACEA,UAAU,WACViZ,GAAE,YAAOM,KAAKpZ,MAAM4T,QAAQ1L,WAF9B,gBAOF,wBAAIrI,UAAU,YACZ,kBAAC,KAAD,CACEA,UAAU,kBACViZ,GAAE,YAAOM,KAAKpZ,MAAM4T,QAAQ1L,SAA1B,eAFJ,4B,GArBqBsV,IA+B/BK,GAAiBC,UAAY,CAC3B5V,SAAU6V,aAAUC,OACpBnD,OAAQkD,aAAUE,KAClBnD,SAAUiD,aAAUE,KACpBC,aAAcH,aAAUE,KACxBE,wBAAyBJ,aAAUE,MAErC,IASerd,eAAQgd,IATI,SAAA5c,GAAQ,MAAK,CACtC6Z,OAAQ,SAAC3S,GACPlH,EAASuK,EAAevF,WAAWkC,IACnClH,EAASC,IAAeyI,uBAAuBxB,KAEjD4S,SAAU,kBACR9Z,EAASoa,KAAchZ,oBAGZxB,CAA6Cid,IChDtDO,G,oDACJ,WAAYpe,GAAQ,IAAD,+BACjB,cAAMA,IACD6c,YAAc,SAAAzc,GAAE,OAAI,EAAKJ,MAAM8c,cAAc1c,EAAG4Z,OAAO5H,QAC5D,EAAK2K,eAAiB,SAAA3c,GAAE,OAAI,EAAKJ,MAAMgd,iBAAiB5c,EAAG4Z,OAAO5H,QAClE,EAAKiM,eAAiB,SAAAje,GAAE,OAAI,EAAKJ,MAAMse,iBAAiBle,EAAG4Z,OAAO5H,QAClE,EAAK8J,WAAa,SAAChU,EAAUH,EAAOC,GAAlB,OAA+B,SAAA5H,GAC/CA,EAAGC,iBACH,EAAKL,MAAMia,SAAS/R,EAAUH,EAAOC,KAPtB,E,oEAYjBoR,KAAKpZ,MAAM8a,a,+BAIX,IAAM/S,EAAQqR,KAAKpZ,MAAM+H,MACnBC,EAAWoR,KAAKpZ,MAAMgI,SACtBE,EAAWkR,KAAKpZ,MAAMkI,SAE5B,OACE,yBAAKrI,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,kCACb,wBAAIA,UAAU,kBAAd,WACA,uBAAGA,UAAU,kBACX,kBAAC,KAAD,CAAMiZ,GAAG,UAAT,qBAKF,kBAAC,GAAD,CAAY7J,OAAQmK,KAAKpZ,MAAMiP,SAE/B,0BAAMgL,SAAUb,KAAK8C,WAAWhU,EAAUH,EAAOC,IAC/C,kCAEE,8BAAUnI,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,OACLkV,YAAY,WACZ9H,MAAOgH,KAAKpZ,MAAMkI,UAAY,GAC9BiS,SAAUf,KAAKiF,kBAGnB,8BAAUxe,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,QACLkV,YAAY,QACZ9H,MAAOgH,KAAKpZ,MAAM+H,OAAS,GAC3BoS,SAAUf,KAAKyD,eAGnB,8BAAUhd,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,WACLkV,YAAY,WACZ9H,MAAOgH,KAAKpZ,MAAMgI,UAAY,GAC9BmS,SAAUf,KAAK2D,kBAGnB,4BACEld,UAAU,uCACVmF,KAAK,SACLyX,SAAUrD,KAAKpZ,MAAMuR,YAHvB,qB,GAlEK8H,IAAMC,WAoHd1Y,gBAnBS,SAAAC,GAAK,uBACvBA,EAAM6D,KADiB,CAE1BuK,OAAQpO,EAAM6D,KAAK4M,oBAGK,SAAAtQ,GAAQ,MAAK,CACtC8b,cAAe,SAAA1K,GAAK,OAClBpR,EAASkD,EAAYb,gBAAgB,CAAEtB,IAAK,QAASqQ,YACvD4K,iBAAkB,SAAA5K,GAAK,OACrBpR,EAASkD,EAAYb,gBAAgB,CAAEtB,IAAK,WAAYqQ,YAC1DkM,iBAAkB,SAAAlM,GAAK,OACrBpR,EAASkD,EAAYb,gBAAgB,CAACtB,IAAK,WAAYqQ,YACzD6H,SAAU,SAAC/R,EAAUH,EAAOC,GAC1BhH,EAASkD,EAAYpB,SAASoF,EAAUH,EAAOC,KAEjD8S,SAAU,kBACR9Z,EAASoa,KAAchZ,oBAGZxB,CAA6Cwd,ICrHtDG,G,oDACJ,aAAe,IAAD,+BACZ,gBACK1d,MAAQ,CACXoY,MAAO,GACP/Q,SAAU,GACVuV,IAAK,GACL1V,MAAO,GACPC,SAAU,IAEZ,EAAKwW,YAAc,SAAAC,GAAK,OAAI,SAAAre,GAC1B,IAAMse,EAAWrW,OAAOC,OAAO,GAAI,EAAKzH,MAAvBwH,OAAA,KAAAA,CAAA,GAAiCoW,EAAQre,EAAG4Z,OAAO5H,QACpE,EAAK2H,SAAS2E,KAEhB,EAAKxC,WAAa,SAAA9b,GAChBA,EAAGC,iBACH,IAAM+E,EAAOiD,OAAOC,OAAO,GAAI,EAAKzH,OAC/BuE,EAAK4C,iBACD5C,EAAK4C,SAEd,EAAKhI,MAAM2e,aAAavZ,IAnBd,E,iEAwBRgU,KAAKpZ,MAAM2E,aACb0D,OAAOC,OAAO8Q,KAAKvY,MAAO,CACxBoY,MAAOG,KAAKpZ,MAAM2E,YAAYsU,OAAS,GACvC/Q,SAAUkR,KAAKpZ,MAAM2E,YAAYuD,UAAa,GAC9CuV,IAAKrE,KAAKpZ,MAAM2E,YAAY8Y,KAAQ,GACpC1V,MAAOqR,KAAKpZ,MAAM2E,YAAYoD,OAAS,O,0CAKzBsU,GACdA,EAAU1X,aACZ0D,OAAOC,OAAO8Q,KAAKvY,MAAO,CACxBoY,MAAOoD,EAAU1X,YAAYsU,OAAS,GACtC/Q,SAAUmU,EAAU1X,YAAYuD,UAAa,GAC7CuV,IAAKpB,EAAU1X,YAAY8Y,KAAQ,GACnC1V,MAAOsU,EAAU1X,YAAYoD,OAAS,O,+BAM1C,OACE,0BAAMkS,SAAUb,KAAK8C,YACnB,kCAEE,8BAAUrc,UAAU,cAClB,2BACEA,UAAU,eACVmF,KAAK,OACLkV,YAAY,yBACZ9H,MAAOgH,KAAKvY,MAAMoY,MAClBkB,SAAUf,KAAKoF,YAAY,YAG/B,8BAAU3e,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,OACLkV,YAAY,WACZ9H,MAAOgH,KAAKvY,MAAMqH,SAClBiS,SAAUf,KAAKoF,YAAY,eAG/B,8BAAU3e,UAAU,cAClB,8BACEA,UAAU,+BACVua,KAAK,IACLF,YAAY,sBACZ9H,MAAOgH,KAAKvY,MAAM4c,IAClBtD,SAAUf,KAAKoF,YAAY,UAI/B,8BAAU3e,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,QACLkV,YAAY,QACZ9H,MAAOgH,KAAKvY,MAAMkH,MAClBoS,SAAUf,KAAKoF,YAAY,YAG/B,8BAAU3e,UAAU,cAClB,2BACEA,UAAU,+BACVmF,KAAK,WACLkV,YAAY,eACZ9H,MAAOgH,KAAKvY,MAAMmH,SAClBmS,SAAUf,KAAKoF,YAAY,eAG/B,4BACE3e,UAAU,uCACVmF,KAAK,SACLyX,SAAUrD,KAAKvY,MAAM0Q,YAHvB,yB,GAjGiB8H,IAAMC,WAiH3BsF,G,2KAEF,OACE,yBAAK/e,UAAU,iBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kCAEb,wBAAIA,UAAU,kBAAd,iBAEA,kBAAC,GAAD,CAAYoP,OAAQmK,KAAKpZ,MAAMiP,SAE/B,kBAAC,GAAD,CACEtK,YAAayU,KAAKpZ,MAAM2E,YACxBga,aAAcvF,KAAKpZ,MAAM2e,eAE3B,6BAEA,4BACE9e,UAAU,yBACVM,QAASiZ,KAAKpZ,MAAM6e,eAFtB,oC,GAlBSxF,IAAMC,WAgDd1Y,gBAVS,SAAAC,GAAK,uBACxBA,EAAM6D,SAGgB,SAAA1D,GAAQ,MAAK,CACtC6d,cAAe,kBAAM7d,EAASkD,EAAYV,WAC1Cmb,aAAc,SAAAvZ,GAAI,OAChBpE,EAASkD,EAAYjB,KAAKmC,KAC5B0V,SAAU,kBAAM9Z,EAASoa,KAAchZ,oBAE1BxB,CAA6Cge,ICvJpD/a,GAAUwT,KAAVxT,MAEFib,G,oDACJ,aAAe,IAAD,+BACZ,gBACKje,MAAQ,GAFD,E,iEAKZ,IAAMjB,EAAQqF,OAAOC,aAAauC,QAAQ,OACtC7H,GACFwZ,KAAKpZ,MAAMoD,SAASxD,GAEtBwZ,KAAKpZ,MAAM+e,mBACX3F,KAAKpZ,MAAM6a,OAAOjb,EAAQwZ,KAAKpZ,MAAM2E,YAAYuD,SAAW,KAAMtI,K,yCAGjDyc,GACbA,EAAU1N,YACZyK,KAAKpZ,MAAMgf,WAAW3C,K,+BAMxB,OAAIjD,KAAKpZ,MAAM6U,UAEX,6BACE,kBAAC,GAAD,CACElV,QAASyZ,KAAKpZ,MAAML,QACpBgF,YAAayU,KAAKpZ,MAAM2E,cACxB,kBAAC,KAAD,KACA,kBAAC,KAAD,CAAOsa,OAAK,EAACC,KAAK,IAAIC,UAAWC,OACjC,kBAAC,KAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWvC,KACtC,kBAAC,KAAD,CAAOqC,OAAK,EAACC,KAAK,YAAYC,UAAWf,KACzC,kBAAC,KAAD,CAAOa,OAAK,EAACC,KAAK,gBAAgBC,UAAW7D,KAC7C,kBAAC,KAAD,CAAO2D,OAAK,EAACC,KAAK,UAAUC,UAAW7D,KACvC,kBAAC,KAAD,CAAO2D,OAAK,EAACC,KAAK,eAAeC,UAAWE,KAC5C,kBAAC,KAAD,CAAOH,KAAK,YAAYC,UAAWP,KACnC,kBAAC,KAAD,CAAOM,KAAK,wBAAwBC,UAAWtB,KAC/C,kBAAC,KAAD,CAAOqB,KAAK,cAAcC,UAAW3B,OAMzC,6BACE,kBAAC,GAAD,CACE7d,QAASyZ,KAAKpZ,MAAML,QACpBgF,YAAayU,KAAKpZ,MAAM2E,mB,GA9ClB0U,IAAMC,WAgFT1Y,gBAjBS,SAACC,GAAD,uBACjBA,EAAM6D,KADW,CAEpBmQ,UAAUhU,EAAME,OAAO8T,UACvBlV,QAASkB,EAAME,OAAOpB,aAGC,SAACqB,GAAD,MAAe,CACxC6Z,OAAQ,SAACzV,EAAMxF,GAAP,OACNoB,EAASoa,KAAclZ,QAAQkD,EAAMxF,GAAO,KAC9Cof,WAAY,SAAC3C,GACXxY,GAAM7C,SAASqE,YAAKgX,EAAU1N,aAC9B3N,EAASkD,EAAY/B,aAEvBiB,SAAU,SAACxD,GAAD,OAAWoB,EAASkD,EAAYd,SAASxD,KACnDmf,iBAAkB,kBAAM/d,EAASkD,EAAY1B,sBAGhC5B,CAA6Cke,I,GCzFxBzH,KAA5BxT,G,GAAAA,MAAOyT,G,GAAAA,UAAUhS,G,GAAAA,QAEzBga,IAASC,OACP,kBAAC,IAAD,CAAU1b,MAAOA,IACf,kBAAC,eAAD,CAAatC,QAAS,KAAM+V,UAAWA,IACrC,kBAAC,KAAD,CAAQhS,QAASA,IACf,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO4Z,KAAK,IAAIC,UAAWL,SAMlCU,SAASC,eAAe,SlB4GrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3b,MAAK,SAAA4b,GACJA,EAAaC,gBAEdC,OAAM,SAAAnb,GACLoE,QAAQpE,MAAMA,EAAMob,a,gCmBzI5B,8C,EAE4B/d,wBAAc,CACtCuJ,QAAS,KACTE,eAAgB,CAAC,QACjBC,aAAc,CAAC,WAHXtJ,E,EAAAA,MAAOC,E,EAAAA,SAKFgL,EAAWjL,EACTC,O,+BCRf,8C,EAE4BL,wBAAc,CACxCb,YAAa,CAAC,QACd6I,gBAAiB,CAAC,WAClBC,cAAe,CAAC,SAChBP,WAAY,CAAC,QACboB,eAAgB,CAAC,WACjBC,aAAc,CAAC,SACfzB,oBAAqB,CAAC,SAAS,QAC/BY,wBAAyB,CAAC,YAC1BC,sBAAuB,CAAC,SACxBzI,iBAAkB,CAAC,MAAM,QACzB0I,qBAAsB,CAAC,WACvBC,mBAAoB,CAAC,SACrBd,cAAe,CAAC,QAChBe,qBAAsB,KACtBC,mBAAoB,CAAC,SACrByV,oBAAqB,CAAC,QACtBxV,wBAAyB,CAAC,WAC1BC,sBAAuB,CAAC,SACxBhB,uBAAwB,CAAC,SAAS,QAClCiB,2BAA4B,CAAC,WAC7BC,yBAA0B,CAAC,SAC3B1J,QAAS,CAAC,SACV2J,YAAa,CAAC,WACdC,UAAW,CAAC,SACZoV,mBAAoB,CAAC,QACrBjV,0BAA2B,CAAC,WAC5BC,wBAAyB,CAAC,SAC1BrB,cAAe,CAAC,OAAO,WACvBsB,qBAAsB,CAAC,WACvBgV,mBAAoB,CAAC,SACrBrW,cAAe,CAAC,WAChBuB,qBAAsB,CAAC,WACvBD,mBAAoB,CAAC,SACrBgV,QAAS,CAAC,WACVC,eAAgB,CAAC,UACjB9J,eAAgB,CAAC,UACjBpV,WAAY,CAAC,UACbmF,kBAAmB,CAAC,YAtCdjE,E,EAAAA,MAAOC,E,EAAAA,SAyCFyJ,EAAe1J,EACbC,O,0EC6BA1B,eAAQ,iBAAO,MAJH,SAAAI,GAAQ,MAAK,CACtCsf,SAAU,SAAA/X,GAAI,OAAIvH,EAASC,IAAegf,oBAAoB1X,KAC9DgY,WAAY,SAAAhY,GAAI,OAAIvH,EAASC,IAAeif,mBAAmB3X,QAElD3H,EAhEQ,SAAAZ,GACrB,IAAMc,EAAUd,EAAMc,QAChB0f,EAAuB1f,EAAQgP,UALf,yBACI,iCAe1B,OACE,yBAAKjQ,UAAU,mBACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMiZ,GAAE,YAAOhY,EAAQgI,OAAOZ,WAC5B,yBAAK8Q,IAAKlY,EAAQgI,OAAOmQ,MAAOC,IAAKpY,EAAQgI,OAAOZ,YAGtD,yBAAKrI,UAAU,QACb,kBAAC,IAAD,CAAMA,UAAU,SAASiZ,GAAE,YAAOhY,EAAQgI,OAAOZ,WAC9CpH,EAAQgI,OAAOZ,UAElB,0BAAMrI,UAAU,QACb,IAAI6Z,KAAK5Y,EAAQ6Y,WAAWC,iBAIjC,yBAAK/Z,UAAU,iBACb,4BAAQA,UAAW2gB,EAAsBrgB,QA1B7B,SAAAC,GAClBA,EAAGC,iBACCS,EAAQgP,UACV9P,EAAMugB,WAAWzf,EAAQyH,MAEzBvI,EAAMsgB,SAASxf,EAAQyH,QAsBjB,uBAAG1I,UAAU,cADf,IACiCiB,EAAQ2f,mBAK7C,kBAAC,IAAD,CAAM3H,GAAE,mBAAchY,EAAQyH,MAAQ1I,UAAU,gBAC9C,4BAAKiB,EAAQ4U,OACb,2BAAI5U,EAAQ6U,aACZ,8CACA,wBAAI9V,UAAU,YAEViB,EAAQ8U,QAAQ9T,KAAI,SAAAnB,GAClB,OACE,wBAAId,UAAU,mCAAmCkC,IAAKpB,GACnDA,YCaJC,eAAQ,iBAAO,MAPH,SAAAI,GAAQ,MAAK,CACtC0f,UAAW,SAAC1e,EAAMuC,GAAP,OACTvD,EAASC,IAAemf,QAAQ,CAAEpe,OAAMuC,cAC1CgY,cAAe,SAACva,GAAD,OACbhB,EAASC,IAAeG,YAAYY,QAGzBpB,EA9DQ,SAACZ,GACtB,GAAIA,EAAMwB,eAAiB,GACzB,OAAO,KAIT,IADA,IAAMmf,EAAQ,GACLC,EAAI,EAAGA,EAAIC,KAAKC,KAAK9gB,EAAMwB,cAAgB,MAAOof,EACzDD,EAAMtb,KAAKub,GAWb,OACE,6BACE,wBAAI/gB,UAAU,cAGV8gB,EAAM7e,KAAI,SAAAkC,GACR,IAAM+c,EAAY/c,IAAMhE,EAAMyB,YAK9B,OACE,wBACE5B,UAAYkhB,EAAY,mBAAqB,YAC7C5gB,QAPY,SAAAC,GAfV,IAAA4B,EAgBJ5B,EAAGC,iBAhBC2B,EAiBIgC,EAhBfhE,EAAMO,MACPP,EAAM0gB,UAAU1e,EAAMhC,EAAMO,MAAMyB,IAElChC,EAAM0gB,UAAU1e,EAAMhC,EAAMuc,cAAcva,KAmBhCD,IAAKiC,EAAEgd,YAEP,uBAAGnhB,UAAU,YAAYI,KAAM,QAAS+D,EAAI,YCG7C2Z,IAtCK,SAAC3d,GACnB,OAAKA,EAAMsB,SAMmB,IAA1BtB,EAAMsB,SAASuX,OAEf,yBAAKhZ,UAAU,mBAAf,gCAOF,6BAEIG,EAAMsB,SAASQ,KAAI,SAAAhB,GACjB,OACE,kBAAC,EAAD,CAAgBA,QAASA,EAASiB,IAAKjB,EAAQyH,UAKrD,kBAAC,EAAD,CACEhI,MAAOP,EAAMO,MACbiB,cAAexB,EAAMwB,cACrBC,YAAazB,EAAMyB,eAzBrB,yBAAK5B,UAAU,mBAAf,gB,kKCEAohB,EAAUC,EAAOD,QAEjB7B,E,mLAEFhG,KAAKlZ,IAAMkZ,KAAKpZ,MAAMJ,MAAQ,OAAS,MACvC,IAAMuhB,EAAkB/H,KAAKpZ,MAAMJ,MAAQwZ,KAAKpZ,MAAMohB,SAAUhI,KAAKpZ,MAAMqB,aACzE4f,EAAQpV,IAAI,CAACuN,KAAKpZ,MAAMqhB,WAAYF,Q,2CAItC/H,KAAKpZ,MAAM8a,a,+BAIX,OACE,yBAAKjb,UAAU,aAEb,kBAAC,IAAD,CAAQD,MAAOwZ,KAAKpZ,MAAMJ,MAAOD,QAASyZ,KAAKpZ,MAAML,UAErD,yBAAKE,UAAU,kBACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAUK,IAAKkZ,KAAKlZ,MAEpB,yBAAKL,UAAU,YACb,yBAAKA,UAAU,WAEb,2CAEA,kBAAC,IAAD,CACEgC,KAAMuX,KAAKpZ,MAAM6B,KACjBH,WAAY0X,KAAKpZ,MAAM0B,sB,GA5BtB2X,IAAMC,WAmEV1Y,iBAlBS,SAAAC,GAAK,sBACxBA,EAAM6D,KADkB,CAE3B/E,QAASkB,EAAME,OAAOpB,QACtBkC,KAAMhB,EAAMF,IAAIkB,UAGS,SAAAb,GAAQ,MAAK,CACtCU,WAAY,SAACf,EAAKJ,GAAN,OACVS,EAASC,IAAeG,YAAYb,EAAOI,KAC7CU,aAAc,SAACd,GAAD,OACZS,EAASC,IAAeG,YAAYb,KACtC6gB,SAAU,SAAC7gB,GAAD,OACRS,EAASC,IAAeC,QAAQX,KAClC8gB,SAAU,kBACRrgB,EAASyK,IAAWD,YACtBsP,SAAU,kBACR9Z,EAASoa,IAAchZ,oBAEZxB,CAA6Cwe,K","file":"static/js/main.f3a3bf97.chunk.js","sourcesContent":["import React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst Banner = ({ appName, token }) => {\r\n  if (token) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"banner\">\r\n      <div className=\"container\">\r\n        <h1 className=\"logo-font\">\r\n          {appName.toLowerCase()}\r\n        </h1>\r\n        <p>A place to share your knowledge.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nBanner.propTypes = {\r\n  appName: PropTypes.string,\r\n  token: PropTypes.string,\r\n}\r\nexport default Banner;\r\n","import ArticleList from '../ArticleList';\r\nimport React from 'react';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst YourFeedTab = (props) => {\r\n  if (props.token) {\r\n    const clickHandler = ev => {\r\n      ev.preventDefault();\r\n      props.onTabClickGetFeed('feed', props.pager);\r\n    }\r\n\r\n    return (\r\n      <li className=\"nav-item\">\r\n        <a  href={\"null\"}\r\n            className={ props.tab === 'feed' ? 'nav-link active' : 'nav-link' }\r\n            onClick={clickHandler}>\r\n          Your Feed\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nYourFeedTab.propTypes = {\r\n  token: PropTypes.string,\r\n  tab: PropTypes.string,\r\n  onTabClickGetFeed: PropTypes.func,\r\n}\r\n\r\nconst GlobalFeedTab = (props) => {\r\n  const clickHandler = ev => {\r\n    ev.preventDefault();\r\n    props.onTabClickGetArticles('all', props.pager);\r\n  };\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a\r\n        href={\"null\"}\r\n        className={ props.tab === 'all' ? 'nav-link active' : 'nav-link' }\r\n        onClick={clickHandler}>\r\n        Global Feed\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nGlobalFeedTab.propTypes = {\r\n  tab: PropTypes.string,\r\n  onTabClickGetArticles: PropTypes.func,\r\n}\r\n\r\nconst TagFilterTab = (props) => {\r\n  if (!props.tag) {\r\n    return null;\r\n  }\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <a href={\"null\"} className=\"nav-link active\">\r\n        <i className=\"ion-pound\"></i> {props.tag}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nTagFilterTab.propTypes = {\r\n  tag: PropTypes.string,\r\n}\r\n\r\nconst MainView = (props) => {\r\n  return (\r\n    <div className=\"col-md-9\">\r\n      <div className=\"feed-toggle\">\r\n        <ul className=\"nav nav-pills outline-active\">\r\n\r\n          <YourFeedTab\r\n            token={props.token}\r\n            tab={props.tab}\r\n            pager={props.pager}\r\n            onTabClickGetFeed={props.onTabClickGetFeed} />\r\n\r\n          <GlobalFeedTab \r\n          tab={props.tab} \r\n          pager={props.pager} \r\n          onTabClickGetArticles={props.onTabClickGetArticles}\r\n           />\r\n\r\n          <TagFilterTab tag={props.tag} />\r\n\r\n        </ul>\r\n      </div>\r\n\r\n      <ArticleList\r\n        pager={props.pager}\r\n        articles={props.articles}\r\n        loading={props.loading}\r\n        articlesCount={props.articlesCount}\r\n        currentPage={props.currentPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nMainView.propTypes = {\r\n  articles: PropTypes.array,\r\n  tag: PropTypes.string,\r\n  tab: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  articlesCount: PropTypes.number,\r\n  token: PropTypes.string,\r\n  currentPage: PropTypes.number,\r\n  pager: PropTypes.number,\r\n  onTabClickGetFeed: PropTypes.func,\r\n  onTabClickGetArticles: PropTypes.func,\r\n  loadArticles: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.article,\r\n  tag: state.article.tag,\r\n  token: state.common.token,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onTabClickGetFeed: (tab, pager) => { \r\n     dispatch(ArticleActions.getFeed(pager))\r\n     dispatch(ArticleActions.changeTabs(tab))\r\n    },\r\n  onTabClickGetArticles:(tab,pager) => {\r\n    dispatch(ArticleActions.getArticles(pager)) \r\n    dispatch(ArticleActions.changeTabs(tab))\r\n  },\r\n  loadArticles: (pager) =>\r\n  dispatch(ArticleActions.getArticles(pager)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainView);\r\n","import React from 'react';\r\n//import TagActions from '../../Stores/Tag/Actions';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport { PropTypes } from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Tags = (props) => {\r\n  const tags = props.tags;\r\n  if (tags) {\r\n    return (\r\n      <div className=\"tag-list\">\r\n        {\r\n          tags.map(tag => {\r\n            const handleClick = ev => {\r\n              ev.preventDefault();\r\n              props.onClickTag(tag, page => props.articleTags(tag, page), props.articleTags(tag));\r\n            };\r\n            \r\n            return (\r\n              <a \r\n                href={\"null\"}\r\n                className=\"tag-default tag-pill\"\r\n                key={tag}\r\n                onClick={handleClick}\r\n                >\r\n                {tag}\r\n              </a>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>Loading Tags...</div>\r\n    );\r\n  }\r\n};\r\nTags.propTypes = {\r\n  tags: PropTypes.array,\r\n  onClickTag: PropTypes.func,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickTag: (tag, pager) =>\r\n    dispatch(ArticleActions.getArticlesByTag(tag, pager)),\r\n  articleTags: (tag, pager) =>\r\n    dispatch(ArticleActions.getArticlesByTag(tag, pager)),\r\n});\r\nexport default connect(() => ({}), mapDispatchToProps)(Tags);\r\n","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    appLoad: ['user','token','skipTracking'],\r\n    redirect: null,\r\n    pageUnloaded: null,\r\n})\r\nexport const CommonTypes = Types\r\nexport default Creators","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    getCurrentUser: null,\r\n    currentUserSuccess: ['payload'],\r\n    currentUserError: ['error'],\r\n    login: ['email','password'],\r\n    loginSuccess: ['payload'],\r\n    loginError: ['error'],\r\n    register: ['username','email','password'],\r\n    registerSuccess: ['payload'],\r\n    registerError: ['error'],\r\n    save: ['user'],\r\n    saveSuccess: ['user'],\r\n    saveError: ['error'],\r\n    setToken: ['token'],\r\n    updateFieldAuth: ['action'],\r\n    asyncStart: null,\r\n    asyncEnd: null,\r\n    logout: null,\r\n    logoutSuccess: null,\r\n    logoutError: ['error'],\r\n    redirect: null,\r\n\r\n})\r\nexport const AuthTypes = Types\r\nexport default Creators","import AuthActions from './Auth/Actions';\r\nimport { push } from 'react-router-redux';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action)) {\r\n    store.dispatch(AuthActions.asyncStart());\r\n\r\n    const currentView = store.getState().common.viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState().auth.currentUser\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch(AuthActions.asyncEnd());\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState().common\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch(AuthActions.asyncEnd());\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === 'LOGIN_SUCCESS' || action.type === 'REGISTER_SUCCESS') {\r\n    if (action.payload) {\r\n      window.localStorage.setItem('jwt', action.payload.user.token);\r\n      AuthActions.setToken(action.payload.user.token);\r\n    }\r\n  } else if (action.type === 'LOGOUT_SUCCESS') {\r\n    window.localStorage.setItem('jwt', '');\r\n    AuthActions.setToken(null);\r\n  }  else if (action.type === 'FAVOURITE_ARTICLE_ERROR' && !action.payload) {\r\n    store.dispatch(push('/login'))\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\r\nimport { createBrowserHistory } from 'history'\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware'\r\nimport { createLogger } from 'redux-logger'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst history = createBrowserHistory();\r\n// Build the middleware for intercepting and dispatching navigation actions\r\nconst myRouterMiddleware = routerMiddleware(history);\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  whitelist: []\r\n}\r\n\r\nexport default (rootReducer, rootSaga) => {\r\n  const middleware = []\r\n  const enhancers = []\r\n\r\n  // Connect the sagas to the redux store\r\n  const sagaMiddleware = createSagaMiddleware()\r\n\r\n  middleware.push(sagaMiddleware)\r\n  \r\n  const logger = createLogger()\r\n  const getMiddleware = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, ...middleware);\r\n    } else {\r\n      // Enable additional logging in non-production environments.\r\n      return applyMiddleware(myRouterMiddleware, promiseMiddleware, localStorageMiddleware, ...middleware, logger)\r\n    }\r\n  };\r\n\r\n  enhancers.push(getMiddleware())\r\n\r\n  // Redux persist\r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  // Redux debbugger\r\nconst composeEnhancers = composeWithDevTools({})\r\n\r\n  const store = createStore(persistedReducer, composeEnhancers(...enhancers))\r\n  const persistor = persistStore(store)\r\n\r\n  // Kick off the root saga\r\n  sagaMiddleware.run(rootSaga)\r\n\r\n  return { store, persistor, history}\r\n}","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    followUser: ['username'],\r\n    followUserSuccess: ['profile'],\r\n    followUserError: ['error'],\r\n    getProfile: ['username'],\r\n    profileSuccess: ['profile'],\r\n    profileError: ['error'],\r\n    unfollowUser: ['username'],\r\n    unfollowUserSuccess: ['profile'],\r\n    unfollowUserError: ['error'],\r\n    profilePageLoaded: ['action'],\r\n})\r\nexport const ProfileTypes = Types\r\nexport default Creators","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    createComment: ['slug','comment'],\r\n    createCommentSuccess: ['payload'],\r\n    createCommentError: ['error'],\r\n    deleteComment: ['slug','commentId'],\r\n    deleteCommentSuccess: ['comment'],\r\n    deleteCommentError: ['error'],\r\n    getArticleComments: ['slug'],\r\n    articleCommentsSuccess: ['comments'],\r\n    articleCommentsError: ['error']\r\n})\r\nexport const CommentTypes = Types\r\nexport default Creators","import { create } from 'apisauce'\r\n\r\n//const tokens = {}\r\n\r\nconst API_ROOT = 'https://conduit.productionready.io/api';\r\n\r\n\r\nexport const ApiService = create({\r\n  baseURL: API_ROOT,\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 30000,\r\n})\r\n\r\nApiService.addResponseTransform((response) => {\r\n  if (response.ok) {\r\n    if (window.localStorage.getItem('jwt')) {\r\n      window.localStorage.getItem('jwt')\r\n    }\r\n  }\r\n})\r\nApiService.addRequestTransform((request) => {\r\n  if (window.localStorage.getItem('jwt')) {\r\n    request.headers.Authorization = `Token ${window.localStorage.getItem('jwt')}`\r\n  }\r\n})\r\n","import { ApiService } from '../ApiService'\r\n\r\nfunction getCurrentUser() {\r\n  return ApiService.get('/user')\r\n}\r\n\r\nfunction login(email,password) {\r\n    return ApiService.post('/users/login',{user : email,password})\r\n}\r\n\r\nfunction register(username,email,password) {\r\n    return ApiService.post('/users',{ user: username,email,password})\r\n}\r\n\r\nfunction save({user}) {\r\n    return ApiService.put('/user',user)\r\n}\r\n\r\nfunction logout() {\r\n    return ApiService.post('/users/logout')\r\n}\r\n\r\nexport const AuthService = {\r\n    getCurrentUser,\r\n    login,\r\n    register,\r\n    save,\r\n    logout,\r\n}\r\n  ","import { ApiService } from '../ApiService'\r\n\r\nconst omitSlug = article => Object.assign({}, article, { slug: undefined })\r\nconst COUNT = 10\r\nconst encode = encodeURIComponent;\r\n\r\nfunction getArticles(page) {\r\n  return ApiService.get('/articles', {\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction getArticlesByAuthor(author,page) {\r\n  return ApiService.get('/articles', {\r\n    author: author,\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction getArticlesByTag(tag,page) {\r\n  return ApiService.get('/articles', {\r\n    tag: tag,\r\n    limit: COUNT,\r\n    offset: page ? page * COUNT : 0\r\n  })\r\n}\r\n\r\nfunction deleteArticle(slug) {\r\n  return ApiService.delete(`/articles/${slug}`)\r\n}\r\n\r\nfunction setFavoriteArticle(slug) {\r\n  return ApiService.post(`/articles/${slug}/favorite`)\r\n}\r\n\r\nfunction getFavouritedByArticle(author, page) {\r\n  return ApiService.get(`/articles?favorite=${encode(author)}&${COUNT}`)\r\n}\r\n\r\nfunction getFeed() {\r\n  return ApiService.get('/articles/feed?',{\r\n    limit: COUNT,\r\n    offset: 0\r\n  })\r\n}\r\n\r\nfunction getArticle(slug) {\r\n  return ApiService.get(`/articles/${slug}`)\r\n}\r\n\r\nfunction unfavoriteArticle(slug) {\r\n  return ApiService.delete(`/articles/${slug}/favorite`)\r\n}\r\n\r\nfunction updateArticle(article) {\r\n  return ApiService.put(`/articles/${article.slug}`,{\r\n    article: omitSlug(article)\r\n  })\r\n}\r\n\r\nfunction createArticle(article) {\r\n  console.log(article)\r\n  return ApiService.post('/articles',{ article })\r\n}\r\n\r\nexport const ArticleService = {\r\n  getArticles,\r\n  getArticlesByAuthor,\r\n  getArticlesByTag,\r\n  deleteArticle,\r\n  setFavoriteArticle,\r\n  getFavouritedByArticle,\r\n  getFeed,\r\n  getArticle,\r\n  unfavoriteArticle,\r\n  updateArticle,\r\n  createArticle\r\n}\r\n","import { ApiService } from '../ApiService'\r\n\r\n\r\nfunction createComment(slug, comment) {\r\n  console.log({comment})\r\n  return ApiService.post(`/articles/${slug}/comments`,{ comment })\r\n}\r\n\r\nfunction deleteComment(slug , commentId) {\r\n    return ApiService.delete(`/articles/${slug}/comments`, { commentId })\r\n}\r\n\r\nfunction getArticleComments(slug) {\r\n    return ApiService.get(`/articles/${slug}/comments`)\r\n}\r\n\r\nexport const CommentService = {\r\n    createComment,\r\n    deleteComment,\r\n    getArticleComments,\r\n  }\r\n  ","import { ApiService } from '../ApiService'\r\n\r\nfunction followUser(username) {\r\n  return ApiService.post(`/profiles/${username}/follow`)\r\n}\r\n\r\nfunction getProfile(username) {\r\n    return ApiService.get(`/profiles/${username}`)\r\n}\r\n\r\nfunction unfollowUser(username) {\r\n    return ApiService.delete(`/profiles/${username}/follow`)\r\n}\r\n\r\nexport const ProfileService = {\r\n    followUser,\r\n    getProfile,\r\n    unfollowUser,\r\n  }\r\n  ","import { ApiService } from '../ApiService'\r\n\r\nfunction getTags() {\r\n  return ApiService.get('/tags')\r\n}\r\n\r\nexport const TagService = {\r\n    getTags,\r\n  }","import { put, call} from 'redux-saga/effects'\r\nimport ArticleActions from '../Stores/Article/Actions'\r\nimport { ArticleService } from '../Services/Api'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get all Articles\r\nexport function* getArticles({ page }) {\r\n  const response = yield call(ArticleService.getArticles,page)\r\n  if (response.ok === true) {\r\n    console.log(response.data)\r\n    yield put(ArticleActions.articlesSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articlesError(response.data))\r\n}\r\n\r\n// get article by author\r\nexport function* getArticlesByAuthor({ author, page }) {\r\n  const response = yield call(ArticleService.getArticlesByAuthor,author,page)\r\n // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.articlesByAuthorSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articlesByAuthorError(response.data))\r\n}\r\n\r\n// get article by tag\r\nexport function* getArticlesByTag({ tag, page }) {\r\n  const response = yield call(ArticleService.getArticlesByTag, tag, page)\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.articlesByTagSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articlesByTagError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* deleteArticle({ slug }) {\r\n  const response = yield call(ArticleService.deleteArticle,slug)\r\n   // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.deleteArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.deleteArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* setFavoriteArticle({ slug }) {\r\n  const response = yield call(ArticleService.setFavoriteArticle,slug)\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.favouriteArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.favouriteArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* getFavouritedByArticle({ author, page }) {\r\n  const response = yield call(ArticleService.getFavouritedByArticle,author, page)\r\n  // const state = yield select()\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.favouritedByArticleSuccess(response.data))\r\n    return\r\n    }\r\n  yield put(ArticleActions.favouritedByArticleError(response.data))\r\n}\r\n\r\n// get user feeds\r\nexport function* getFeed() {\r\n  const response = yield call(ArticleService.getFeed)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.feedSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.feedError(response.data)) \r\n}\r\n\r\n// delete article by slug\r\nexport function* getArticle({ slug }) {\r\n  const response = yield call(ArticleService.getArticle,slug)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.articleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.articleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* unfavoriteArticle({ slug }) {\r\n  const response = yield call(ArticleService.unfavoriteArticle,slug)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.unfavouriteArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.unfavouriteArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* updateArticle({ article }) {\r\n  const response = yield call(ArticleService.updateArticle,article)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.updateArticleSuccess(response.data))\r\n    return\r\n  }\r\n    yield put(ArticleActions.createArticleError(response.data))\r\n}\r\n\r\n// delete article by slug\r\nexport function* createArticle({ article }) {\r\n  const response = yield call(ArticleService.createArticle,article)\r\n  console.log(response)\r\n  if (response.ok === true) {\r\n    yield put(ArticleActions.createArticleSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ArticleActions.createArticleError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport AuthActions from '../Stores/Auth/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { AuthService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\nexport function* getCurrentUser() {\r\n  const response = yield call(AuthService.getCurrentUser)\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.currentUserSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.currentUserError(response.data))\r\n}\r\n\r\n// login user\r\nexport function* login({email,password}) {\r\n  const response = yield call(AuthService.login,{email,password})\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.loginSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.loginError(response.data))\r\n}\r\n\r\n// register new user\r\nexport function* register({username,email,password}) {\r\n  const response = yield call(AuthService.register,{username,email,password})\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.registerSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.registerError(response.data))\r\n}\r\n\r\n// register new user\r\nexport function* save({user}) {\r\n  const response = yield call(AuthService.save,{user})\r\n  if (response.ok === true) {\r\n    yield put(AuthActions.saveSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(AuthActions.saveError(response.data))\r\n}\r\n\r\n// logout user\r\nexport function* logout() {\r\n    yield put(AuthActions.logoutSuccess())\r\n    return\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport CommentActions from '../Stores/Comment/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { CommentService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\nexport function* createComment({slug, comment}) {\r\n  const response = yield call(CommentService.createComment,slug,comment)\r\n  if (response.ok === true) {\r\n    yield put(CommentActions.createCommentSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(CommentActions.createCommentError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* deleteComment({slug, commentId}) {\r\n  const response = yield call(CommentService.deleteComment,{slug, commentId})\r\n  if (response.ok === true) {\r\n    yield put(CommentActions.deleteCommentSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(CommentActions.deleteCommentError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* getArticleComments({ slug }) {\r\n  const response = yield call(CommentService.getArticleComments,slug)\r\n  if (response.ok === true) {\r\n    console.log(response.data)\r\n    yield put(CommentActions.articleCommentsSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(CommentActions.articleCommentsError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport ProfileActions from '../Stores/Profile/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { ProfileService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\nexport function* followUser({ username }) {\r\n  const response = yield call(ProfileService.followUser,username)\r\n  if (response.ok === true) {\r\n    yield put(ProfileActions.followUserSuccess(response.data))\r\n    return\r\n  }\r\n    yield put(ProfileActions.followUserError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* getProfile({ username }) {\r\n  const response = yield call(ProfileService.getProfile, username)\r\n  if (response.ok === true) {\r\n    yield put(ProfileActions.profileSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ProfileActions.profileError(response.data))\r\n}\r\n\r\n// get the current user\r\nexport function* unfollowUser({username}) {\r\n  const response = yield call(ProfileService.unfollowUser,username)\r\n  if (response.ok === true) {\r\n    yield put(ProfileActions.unfollowUserSuccess(response.data))\r\n    return\r\n  }\r\n  yield put(ProfileActions.unfollowUserError(response.data))\r\n}","import { put, call} from 'redux-saga/effects'\r\nimport TagActions from '../Stores/Tag/Actions'\r\n//import CommonActions from 'App/Stores/Common/Actions'\r\nimport { TagService } from '../Services/Api'\r\n//import { parseErrors } from 'App/Services/ApiService'\r\n\r\n/**\r\n * A saga can contain multiple functions.\r\n *\r\n * This example saga contains only one to fetch fake user informations.\r\n * Feel free to remove it.\r\n */\r\n// get the current user\r\n\r\nexport function* getTags() {\r\n  const response = yield call(TagService.getTags)\r\n  if (response.ok === true) {\r\n   yield put(TagActions.getTagsSuccess(response.data.tags))\r\n   return\r\n  }\r\n  yield put(TagActions.getTagsError(\"uchenna\"))\r\n}","import { takeLatest, all } from 'redux-saga/effects'\r\nimport { ArticleTypes } from '../Stores/Article/Actions'\r\nimport { AuthTypes } from '../Stores/Auth/Actions'\r\nimport { ProfileTypes } from '../Stores/Profile/Actions'\r\nimport { CommentTypes } from '../Stores/Comment/Actions'\r\nimport { TagTypes } from '../Stores/Tag/Actions'\r\n\r\nimport { \r\n  getArticles,\r\n  getArticlesByAuthor,\r\n  getArticlesByTag,\r\n  deleteArticle,\r\n  setFavoriteArticle,\r\n  getFavouritedByArticle,\r\n  getFeed,\r\n  getArticle,\r\n  unfavoriteArticle,\r\n  updateArticle,\r\n  createArticle } from './ArticleSaga'\r\nimport { \r\n  getCurrentUser,\r\n  login,\r\n  register,\r\n  save, \r\n  logout } from './AuthSaga'\r\nimport { \r\n  createComment,\r\n  deleteComment,\r\n  getArticleComments } from './CommentSaga'\r\nimport { \r\n  followUser,\r\n  getProfile,\r\n  unfollowUser } from './ProfileSaga'\r\nimport { getTags } from './TagSaga'\r\n\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeLatest(ArticleTypes.GET_ARTICLES, getArticles),\r\n    takeLatest(ArticleTypes.GET_ARTICLES_BY_AUTHOR, getArticlesByAuthor),\r\n    takeLatest(ArticleTypes.GET_ARTICLES_BY_TAG, getArticlesByTag),\r\n    takeLatest(ArticleTypes.DELETE_ARTICLE, deleteArticle),\r\n    takeLatest(ArticleTypes.SET_FAVOURITE_ARTICLE, setFavoriteArticle),\r\n    takeLatest(ArticleTypes.GET_FAVOURITED_BY_ARTICLE, getFavouritedByArticle),\r\n    takeLatest(ArticleTypes.GET_FEED, getFeed),\r\n    takeLatest(ArticleTypes.GET_ARTICLE, getArticle),\r\n    takeLatest(ArticleTypes.UNFAVOURITE_ARTICLE, unfavoriteArticle),\r\n    takeLatest(ArticleTypes.UPDATE_ARTICLE, updateArticle),\r\n    takeLatest(ArticleTypes.CREATE_ARTICLE, createArticle),\r\n\r\n    takeLatest(AuthTypes.GET_CURRENT_USER, getCurrentUser),\r\n    takeLatest(AuthTypes.LOGIN, login),\r\n    takeLatest(AuthTypes.REGISTER, register),\r\n    takeLatest(AuthTypes.SAVE, save),\r\n    takeLatest(AuthTypes.LOGOUT, logout),\r\n\r\n    takeLatest(CommentTypes.CREATE_COMMENT, createComment),\r\n    takeLatest(CommentTypes.DELETE_COMMENT, deleteComment),\r\n    takeLatest(CommentTypes.GET_ARTICLE_COMMENTS, getArticleComments),\r\n\r\n    takeLatest(ProfileTypes.FOLLOW_USER, followUser),\r\n    takeLatest(ProfileTypes.GET_PROFILE, getProfile),\r\n    takeLatest(ProfileTypes.UNFOLLOW_USER, unfollowUser),\r\n\r\n    takeLatest(TagTypes.GET_TAGS, getTags),\r\n\r\n  ])\r\n}","  export const INITIAL_STATE = {\r\n    articles: [],\r\n    article: {},\r\n    feeds: [],\r\n    articlesIsLoading: false,\r\n    articlesError: null,\r\n    articleIsLoading: false,\r\n    articleError: null,\r\n    articlesByAuthorIsLoading: false,\r\n    articlesByAuthorErrors: null,\r\n    articlesByTagIsLoading: false,\r\n    articlesByTagErrors: null,\r\n    deleteArticleIsLoading: false,\r\n    deleteArticleErrors: null,\r\n    getFavouritedByIsLoading: false,\r\n    getFavouritedByErrors: null,\r\n    getFeedIsLoading: false,\r\n    getFeedErrors: null,\r\n    unfavoriteArticleIsLoading: false,\r\n    unfavoriteArticleErrors: null,\r\n    updateArticleIsLoading: false,\r\n    createArticleIsLoading: false,\r\n    createArticleErrors: null,\r\n    redirectTo: null,\r\n    currentPage: 0,\r\n    articlesCount: 0,\r\n    tab: 'feed',\r\n    pager: null,\r\n    tags: [],\r\n    tag: null\r\n  }\r\n  ","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { ArticleTypes } from './Actions'\r\n\r\nexport const getArticles = (state) => ({\r\n  ...state,\r\n  articlesIsLoading: true,\r\n  articlesErrors: null,\r\n})\r\n\r\nexport const articlesSuccess = (state, { payload }) => ({\r\n  ...state,\r\n  article: payload.article, \r\n  articles: payload.articles,\r\n  articlesCount: payload.articlesCount,\r\n  articlesIsLoading: false,\r\n  articlesErrors: null,\r\n})\r\n\r\nexport const articlesError = (state, errors) => ({\r\n  ...state,\r\n  articlesIsLoading: false,\r\n  articlesErrors: errors,\r\n  articles: INITIAL_STATE.articles,\r\n})\r\n\r\nexport const getArticle = (state) => ({\r\n  ...state,\r\n  articleIsLoading: true,\r\n  articleErrors: null,\r\n})\r\n\r\nexport const articleSuccess = (state, { article }) => ({\r\n    ...state,\r\n    articles:  article.articles,\r\n    article: article.article,\r\n    articleIsLoading: false,\r\n    articleErrors: null,\r\n  })\r\n  \r\nexport const articleError = (state, {errors}) => ({\r\n...state,\r\narticleIsLoading: false,\r\narticleErrors: errors,\r\narticle: INITIAL_STATE.article,\r\n})\r\n  \r\nexport const resetAll = () => ({\r\n  ...INITIAL_STATE,\r\n})\r\n\r\nexport const getArticlesByAuthor = (state) => ({\r\n    ...state,\r\n    articlesByAuthorIsLoading: true,\r\n    articlesByAuthorErrors: null,\r\n  })\r\n  \r\nexport const articlesByAuthorSuccess = (state, { articles }) => ({\r\n    ...state,\r\n    articles: articles.articles,\r\n    articlesByAuthorIsLoading: false,\r\n    articlesByAuthorErrors: null,\r\n})\r\n    \r\nexport const articlesByAuthorError = (state, {errors}) => ({\r\n    ...state,\r\n    articlesByAuthorIsLoading: false,\r\n    articlesByAuthorErrors: errors,\r\n    articles: INITIAL_STATE.articles,\r\n})\r\n\r\nexport const getArticlesByTag = (state,{tag, pager}) => ({\r\n    ...state,\r\n    articlesByTagIsLoading: true,\r\n    articlesByTagErrors: null,\r\n    tag: tag,\r\n    tab: ''\r\n  })\r\n  \r\nexport const articlesByTagSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    articles: payload.articles,\r\n    articlesCount: payload.articlesCount,\r\n    articlesByTagIsLoading: false,\r\n    articlesByTagErrors: null,\r\n})\r\n    \r\nexport const articlesByTagError = (state, {errors}) => ({\r\n    ...state,\r\n    articlesByTagIsLoading: false,\r\n    articlesByTagErrors: errors,\r\n    articles: INITIAL_STATE.articles,\r\n})\r\n\r\nexport const deleteArticle = (state) => ({\r\n    ...state,\r\n    deleteArticleIsLoading: true,\r\n    deleteArticleErrors: null,\r\n  })\r\n  \r\nexport const deleteArticleSuccess = (state) => ({\r\n    ...state,\r\n    deleteArticleIsLoading: false,\r\n    deleteArticleErrors: null,\r\n    redirectTo: '/',\r\n})\r\n    \r\nexport const deleteArticleError = (state, {errors}) => ({\r\n    ...state,\r\n    deleteArticleIsLoading: false,\r\n    deleteArticleErrors: errors,\r\n    articles: INITIAL_STATE.articles,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n})\r\n\r\nexport const setFavouriteArticle = (state, { slug }) => ({\r\n    ...state,\r\n    slug: slug,\r\n    setFavouriteArticleIsLoading: true,\r\n    setFavouriteArticleErrors: null,\r\n  })\r\n  \r\nexport const favouriteArticleSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    articles: state.articles.map(article => {\r\n      if (article.slug === payload.article.slug) {\r\n        return {\r\n          ...article,\r\n          favorited: payload.article.favorited,\r\n          favoritesCount: payload.article.favoritesCount\r\n        };\r\n      }\r\n      return article;\r\n    }),\r\n    setFavouriteArticleIsLoading: false,\r\n    setFavouriteArticleErrors: null,\r\n})\r\n    \r\nexport const favouriteArticleError = (state, { error }) => ({\r\n    ...state,\r\n    setFavouriteArticleIsLoading: false,\r\n    setFavouriteArticleErrors: error,\r\n})\r\n\r\nexport const getFavouritedByArticle = (state) => ({\r\n    ...state,\r\n    getFavouritedByIsLoading: true,\r\n    getFavouritedByErrors: null,\r\n  })\r\n  \r\nexport const favouritedByArticleSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    articles: payload.articles,\r\n    getFavouritedByIsLoading: false,\r\n    getFavouritedByErrors: null,\r\n})\r\n    \r\nexport const favouritedByArticleError = (state, {errors}) => ({\r\n    ...state,\r\n    getFavouritedByIsLoading: false,\r\n    getFavouritedByErrors: errors,\r\n})\r\n\r\nexport const getFeed = (state) => ({\r\n    ...state,\r\n    getFeedIsLoading: true,\r\n    getFeedErrors: null,\r\n  })\r\n  \r\nexport const feedSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    articles: payload.articles,\r\n    articlesCount: payload.articlesCount,\r\n    articlesIsLoading: false,\r\n    articlesErrors: null,\r\n    getFeedIsLoading: false,\r\n    getFeedErrors: null,\r\n})\r\n    \r\nexport const feedError = (state, {errors}) => ({\r\n    ...state,\r\n    getFeedIsLoading: false,\r\n    getFeedErrors: errors,\r\n})\r\n\r\nexport const unfavouriteArticle = (state) => ({\r\n    ...state,\r\n    unfavoriteArticleIsLoading: true,\r\n    unfavoriteArticleErrors: null,\r\n  })\r\n  \r\nexport const unfavouriteArticleSuccess = (state,{ payload }) => ({\r\n    ...state,\r\n    articles: state.articles.map(article => {\r\n      if (article.slug === payload.article.slug) {\r\n        return {\r\n          ...article,\r\n          favorited: payload.article.favorited,\r\n          favoritesCount: payload.article.favoritesCount\r\n        };\r\n      }\r\n      return article;\r\n    }),\r\n    unfavoriteArticleIsLoading: false,\r\n    unfavoriteArticleErrors: null,\r\n})\r\n    \r\nexport const unfavouriteArticleError = (state, {errors}) => ({\r\n    ...state,\r\n    unfavoriteArticleIsLoading: false,\r\n    unfavoriteArticleErrors: errors,\r\n})\r\n\r\nexport const updateArticle = (state) => ({\r\n    ...state,\r\n    updateArticleIsLoading: true,\r\n    updateArticleErrors: null,\r\n  })\r\n  \r\nexport const updateArticleSuccess = (state) => ({\r\n    ...state,\r\n    updateArticleIsLoading: false,\r\n    updateArticleErrors: null,\r\n})\r\n    \r\nexport const updateArticleleError = (state, { error }) => ({\r\n    ...state,\r\n    updateArticleIsLoading: false,\r\n    createArticleErrors: error,\r\n})\r\n\r\nexport const createArticle = (state) => ({\r\n    ...state,\r\n    createArticleIsLoading: true,\r\n    createArticleErrors: null,\r\n  })\r\n  \r\nexport const createArticleSuccess = (state,{ article }) => ({\r\n    ...state,\r\n    article: article.article,\r\n    redirectTo: `/article/${article.article.slug}`,\r\n    createArticleIsLoading: false,\r\n    createArticleErrors: null,\r\n})\r\n    \r\nexport const createArticleleError = (state, { error }) => ({\r\n    ...state,\r\n    createArticleIsLoading: false,\r\n    createArticleErrors: error,\r\n})\r\n\r\nexport const setPage = (state,{ payload }) => ({\r\n  ...state,\r\n  articles: payload.articles,\r\n  articlesCount: payload.articlesCount,\r\n  currentPage:  payload.page\r\n})\r\n\r\nexport const applyTagFilter = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  articles: action.payload.articles,\r\n  articlesCount: action.payload.articlesCount,\r\n  tab: null,\r\n  tag: action.tag,\r\n  currentPage: 0\r\n})\r\n\r\nexport const homePageLoaded = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  tags: action.payload[0].tags,\r\n  articles: action.payload[1].articles,\r\n  articlesCount: action.payload[1].articlesCount,\r\n  currentPage: 0,\r\n  tab: action.tab\r\n})\r\n\r\nexport const changeTabs = (state, {action}) => ({\r\n  ...state.articles,\r\n  tab: action\r\n})\r\nexport const profilePageLoaded = (state, {action}) => ({\r\n  ...state,\r\n  pager: action.pager,\r\n  articles: action.articles,\r\n  articlesCount: action.articlesCount,\r\n  currentPage: 0\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n  [ArticleTypes.GET_ARTICLES]: getArticles,\r\n  [ArticleTypes.ARTICLES_SUCCESS]: articlesSuccess,\r\n  [ArticleTypes.ARTICLES_ERROR]: articlesError,\r\n  [ArticleTypes.GET_ARTICLE]: getArticle,\r\n  [ArticleTypes.ARTICLE_SUCCESS]: articleSuccess,\r\n  [ArticleTypes.ARTICLE_ERROR]: articleError,\r\n  [ArticleTypes.GET_ARTICLES_BY_AUTHOR]: getArticlesByAuthor,\r\n  [ArticleTypes.ARTICLES_BY_AUTHOR_SUCCESS]: articlesByAuthorSuccess,\r\n  [ArticleTypes.ARTICLES_BY_AUTHOR_ERROR]: articlesByAuthorError,\r\n  [ArticleTypes.GET_ARTICLES_BY_TAG]: getArticlesByTag,\r\n  [ArticleTypes.ARTICLES_BY_TAG_SUCCESS]: articlesByTagSuccess,\r\n  [ArticleTypes.ARTICLES_BY_TAG_ERROR]: articlesByTagError,\r\n  [ArticleTypes.DELETE_ARTICLE]: deleteArticle,\r\n  [ArticleTypes.DELETE_ARTICLE_SUCCESS]: deleteArticleSuccess,\r\n  [ArticleTypes.DELETE_ARTICLE_ERROR]: deleteArticleError,\r\n  [ArticleTypes.SET_FAVOURITE_ARTICLE]: setFavouriteArticle,\r\n  [ArticleTypes.FAVOURITE_ARTICLE_SUCCESS]: favouriteArticleSuccess,\r\n  [ArticleTypes.FAVOURITE_ARTICLE_ERROR]: favouriteArticleError,\r\n  [ArticleTypes.GET_FAVOURITED_BY_ARTICLE]: getFavouritedByArticle,\r\n  [ArticleTypes.FAVOURITED_BY_ARTICLE_SUCCESS]: favouritedByArticleSuccess,\r\n  [ArticleTypes.FAVOURITED_BY_ARTICLE_ERROR]: favouritedByArticleError,\r\n  [ArticleTypes.UNFAVOURITE_ARTICLE]: unfavouriteArticle,\r\n  [ArticleTypes.UNFAVOURITE_ARTICLE_SUCCESS]: unfavouriteArticleSuccess,\r\n  [ArticleTypes.UNFAVOURITE_ARTICLE_ERROR]: unfavouriteArticleError,\r\n  [ArticleTypes.GET_FEED]: getFeed,\r\n  [ArticleTypes.FEED_SUCCESS]: feedSuccess,\r\n  [ArticleTypes.FEED_ERROR]: feedError,\r\n  [ArticleTypes.UPDATE_ARTICLE]: updateArticle,\r\n  [ArticleTypes.UPDATE_ARTICLE_SUCCESS]: updateArticleSuccess,\r\n  [ArticleTypes.UPDATE_ARTICLE_ERROR]: updateArticleleError,\r\n  [ArticleTypes.CREATE_ARTICLE]: createArticle,\r\n  [ArticleTypes.CREATE_ARTICLE_SUCCESS]: createArticleSuccess,\r\n  [ArticleTypes.CREATE_ARTICLE_ERROR]: createArticleleError,\r\n  [ArticleTypes.SET_PAGE]: setPage,\r\n  [ArticleTypes.APPLY_TAG_FILTER]: applyTagFilter,\r\n  [ArticleTypes.HOME_PAGE_LOADED]: homePageLoaded,\r\n  [ArticleTypes.CHANGE_TABS]: changeTabs,\r\n  [ArticleTypes.PROFILE_PAGE_LOADED]: profilePageLoaded\r\n})\r\n","export const INITIAL_STATE = {\r\n    user: {},\r\n    getcurrentUserIsLoading: false,\r\n    getcurrentUserErrors: null,\r\n    saveIsLoading: false,\r\n    saveErrors: null,\r\n    registerIsLoading: false,\r\n    registerErrors: null,\r\n    redirectTo: null,\r\n    token: null,\r\n    currentUser: {},\r\n    inProgress: false,\r\n    loginIsLoading: false,\r\n    loginErrors: null,\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { AuthTypes } from './Actions'\r\n\r\nexport const getCurrentUser = (state) => ({\r\n  ...state,\r\n  getcurrentUserIsLoading: true,\r\n  getcurrentUserErrors: null,\r\n})\r\n\r\nexport const currentUserSuccess = (state, { payload } ) => ({\r\n...state,\r\nuser: payload.user,\r\ncurrentUser: payload.user,\r\ngetcurrentUserIsLoading: false,\r\ngetcurrentUserErrors: null,\r\n})\r\n\r\nexport const currentUserError = (state, {error}) => ({\r\n...state,\r\ngetcurrentUserIsLoading: false,\r\ngetcurrentUserErrors: error,\r\nuser: INITIAL_STATE.user,\r\n})\r\n\r\nexport const login = (state) => ({\r\n    ...state,\r\n    loginIsLoading: true,\r\n    loginErrors: null,\r\n})\r\n  \r\nexport const loginSuccess = (state, { payload } ) => ({\r\n    ...state,\r\n    user: payload.user,\r\n    redirectTo: '/',\r\n    token: payload.user.token,\r\n    currentUser: payload.user,\r\n    loginIsLoading: false,\r\n    loginErrors: null,\r\n})\r\n  \r\n  export const loginError = (state, {error}) => ({\r\n    ...state,\r\n    loginIsLoading: false,\r\n    loginErrors: error,\r\n    user: INITIAL_STATE.user,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    token: INITIAL_STATE.token,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n})\r\n\r\nexport const register = (state) => ({\r\n    ...state,\r\n    registerIsLoading: true,\r\n    registerErrors: null,\r\n})\r\n  \r\nexport const registerSuccess = (state, { payload } ) => ({\r\n    ...state,\r\n    user: payload.user,\r\n    redirectTo: '/',\r\n    token: payload.user.token,\r\n    currentUser:payload.user,\r\n    registerIsLoading: false,\r\n    registerErrors: null,\r\n})\r\n  \r\nexport const registerError = (state, {error}) => ({\r\n    ...state,\r\n    registerIsLoading: false,\r\n    registerErrors: error,\r\n    user: INITIAL_STATE.user,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    token: INITIAL_STATE.token,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n})\r\n\r\nexport const save = (state, { user }) => ({\r\n    ...state,\r\n    user: user.user,\r\n    currentUser: user.user,\r\n    saveIsLoading: true,\r\n    saveErrors: null,\r\n})\r\n  \r\nexport const saveSuccess = (state, { user } ) => ({\r\n    ...state,\r\n    user: user.user,\r\n    redirectTo: '/',\r\n    currentUser: user.user,\r\n    saveIsLoading: false,\r\n    saveErrors: null,\r\n})\r\n  \r\nexport const saveError = (state, {error}) => ({\r\n    ...state,\r\n    saveIsLoading: false,\r\n    saveErrors: error,\r\n    user: INITIAL_STATE.user,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n})\r\n\r\nexport const logout = (state) => ({\r\n    ...state,\r\n    getcurrentUserIsLoading: true,\r\n    getcurrentUserErrors: null,\r\n})\r\n  \r\nexport const logoutSuccess = (state) => ({\r\n    ...state,\r\n    redirectTo: '/',\r\n    token: null,\r\n    currentUser: {},\r\n    logoutIsLoading: false,\r\n    logoutErrors: null,\r\n    user: {}\r\n})\r\n  \r\nexport const logoutError = (state, {error}) => ({\r\n    ...state,\r\n    redirectTo: INITIAL_STATE.redirectTo,\r\n    token: INITIAL_STATE.token,\r\n    currentUser: INITIAL_STATE.currentUser,\r\n    logoutIsLoading: false,\r\n    logoutErrors: error,\r\n})\r\n\r\nexport const setToken = (state, {token}) => ({\r\n    ...state,\r\n  token: token,\r\n})\r\n\r\nexport const updateFieldAuth = (state, {action}) => ({\r\n    ...state,\r\n[action.key]: action.value\r\n})\r\n\r\nexport const asyncStart = (state) => ({\r\n    ...state,\r\ninProgress: true \r\n})\r\nexport const asyncEnd = (state) => ({\r\n    ...state,\r\ninProgress: false\r\n})\r\n\r\n\r\nexport const redirect = (state) => ({\r\n    ...state,\r\n    redirectTo: null,\r\n  })\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [AuthTypes.GET_CURRENT_USER]: getCurrentUser,\r\n    [AuthTypes.CURRENT_USER_SUCCESS]: currentUserSuccess,\r\n    [AuthTypes.CURRENT_USER_ERROR]: currentUserError,\r\n    [AuthTypes.LOGIN]: login,\r\n    [AuthTypes.LOGIN_SUCCESS]: loginSuccess,\r\n    [AuthTypes.LOGIN_ERROR]: loginError,\r\n    [AuthTypes.REGISTER]: register,\r\n    [AuthTypes.REGISTER_SUCCESS]: registerSuccess,\r\n    [AuthTypes.REGISTER_ERROR]: registerError,\r\n    [AuthTypes.SAVE]: save,\r\n    [AuthTypes.SAVE_SUCCESS]: saveSuccess,\r\n    [AuthTypes.SAVE_ERROR]: saveError,\r\n    [AuthTypes.SET_TOKEN]: setToken,\r\n    [AuthTypes.UPDATE_FIELD_AUTH]: updateFieldAuth,\r\n    [AuthTypes.ASYNC_START]: asyncStart,\r\n    [AuthTypes.ASYNC_END]: asyncEnd,\r\n    [AuthTypes.LOGOUT]: logout,\r\n    [AuthTypes.LOGOUT_SUCCESS]: logoutSuccess,\r\n    [AuthTypes.LOGOUT_ERROR]: logoutError,\r\n    [AuthTypes.REDIRECT]: redirect,\r\n  })\r\n  ","export const INITIAL_STATE = {\r\n    comments: {},\r\n    createCommenIsLoading: false,\r\n    createCommenErrors: null,\r\n    deleteCommentIsLoading: false,\r\n    deleteCommentErrors: null,\r\n    getArticleCommentsIsLoading: false,\r\n    getArticleCommentsErrors: null,\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { CommentTypes } from './Actions'\r\n\r\nexport const createComment = (state) => ({\r\n  ...state,\r\n  createCommenIsLoading: true,\r\n  createCommenErrors: null,\r\n})\r\n\r\nexport const createCommentSuccess = (state, { payload }) => ({\r\n    ...state,\r\n    createCommenIsLoading: false,\r\n    createCommenErrors: null,\r\n})\r\n\r\n  export const createCommentError = (state, { error }) => ({\r\n    ...state,\r\n    createCommenIsLoading: false,\r\n    createCommentErrors: error,\r\n})\r\n\r\nexport const deleteComment = (state) => ({\r\n    ...state,\r\n    deleteCommentIsLoading: true,\r\n    deleteCommentErrors: null,\r\n  })\r\n  \r\n  export const deleteCommentSuccess = (state, {commentId}) => ({\r\n      ...state,\r\n      comments: state.comment.filter(comment => comment.id !== commentId),\r\n      deleteCommentIsLoading: false,\r\n      deleteCommentErrors: null,\r\n  })\r\n  \r\n    export const deleteCommentError = (state, {error} ) => ({\r\n      ...state,\r\n      deleteCommentIsLoading: false,\r\n      deleteCommentErrors: error,\r\n  })\r\n\r\nexport const getArticleComments = (state) => ({\r\n    ...state,\r\n    getArticleCommentsIsLoading: true,\r\n    getArticleCommentsErrors: null,\r\n})\r\n  \r\nexport const articleCommentsSuccess = (state,{comments}) => ({\r\n    ...state,\r\n    comments: comments,\r\n    getArticleCommentsIsLoading: false,\r\n    getArticleCommentsErrors: null,\r\n})\r\n  \r\nexport const articleCommentsError = (state,{error}) => ({\r\n    ...state,\r\n    getArticleCommentsIsLoading: false,\r\n    getArticleCommentsErrors: error,\r\n    comments: INITIAL_STATE.comments,\r\n})\r\n\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [CommentTypes.CREATE_COMMENT]: createComment,\r\n    [CommentTypes.CREATE_COMMENT_SUCCESS]: createCommentSuccess,\r\n    [CommentTypes.CREATE_COMMENT_ERROR]: createCommentError,\r\n    [CommentTypes.DELETE_COMMENT]: deleteComment,\r\n    [CommentTypes.DELETE_COMMENT_SUCCESS]: deleteCommentSuccess,\r\n    [CommentTypes.DELETE_COMMENT_ERROR]: deleteCommentError,\r\n    [CommentTypes.GET_ARTICLE_COMMENTS]: getArticleComments,\r\n    [CommentTypes.ARTICLE_COMMENTS_SUCCESS]: articleCommentsSuccess,\r\n    [CommentTypes.ARTICLE_COMMENTS_ERROR]: articleCommentsError,\r\n  })\r\n  ","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { ProfileTypes } from './Actions'\r\n\r\nexport const followUser = (state) => ({\r\n  ...state,\r\n  followUserIsLoading: true,\r\n  followUserErrors: null,\r\n})\r\n\r\nexport const followUserSuccess = (state, { profile }) => ({\r\n    ...state,\r\n    profile: profile.profile,\r\n    followUserIsLoading: false,\r\n    followUserErrors: null,\r\n})\r\nexport const followUserError = (state, {error}) => ({\r\n    ...state,\r\n    followUserIsLoading: false,\r\n    followUserErrors: error,\r\n})\r\n\r\nexport const getProfile = (state) => ({\r\n    ...state,\r\n    getProfileIsLoading: true,\r\n    getProfileErrors: null,\r\n})\r\n  \r\nexport const profileSuccess = (state, { profile }) => ({\r\n    ...state,\r\n    profile : profile.profile,\r\n    getProfileIsLoading: false,\r\n    getProfileErrors: null,\r\n})\r\n\r\nexport const profileError = (state, { error }) => ({\r\n    ...state,\r\n    getProfileIsLoading: false,\r\n    getProfileErrors: error,\r\n})\r\n\r\nexport const unfollowUser = (state) => ({\r\n    ...state,\r\n    unfollowUserIsLoading: true,\r\n    unfollowUserErrors: null,\r\n})\r\n  \r\nexport const unfollowUserSuccess = (state,{ profile }) => ({\r\n    ...state,\r\n    profile: profile.profile,\r\n    unfollowUserIsLoading: false,\r\n    unfollowUserErrors: null,\r\n})\r\n\r\nexport const unfollowUserError = (state, { error }) => ({\r\n    ...state,\r\n    unfollowUserIsLoading: false,\r\n    unfollowUserErrors: error,\r\n})\r\n\r\nexport const profilePageLoaded = (state, {action}) => ({\r\n    ...state,\r\n    ...action.profile\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [ProfileTypes.FOLLOW_USER]: followUser,\r\n    [ProfileTypes.FOLLOW_USER_SUCCESS]: followUserSuccess,\r\n    [ProfileTypes.FOLLOW_USER_ERROR]: followUserError,\r\n    [ProfileTypes.UNFOLLOW_USER]: unfollowUser,\r\n    [ProfileTypes.UNFOLLOW_USER_SUCCESS]: unfollowUserSuccess,\r\n    [ProfileTypes.UNFOLLOW_USER_ERROR]: unfollowUserError,\r\n    [ProfileTypes.GET_PROFILE]: getProfile,\r\n    [ProfileTypes.PROFILE_SUCCESS]: profileSuccess,\r\n    [ProfileTypes.PROFILE_ERROR]: profileError,\r\n    [ProfileTypes.PROFILE_PAGE_LOADED]: profilePageLoaded,\r\n  })\r\n  ","export const INITIAL_STATE = {\r\n    profile: {},\r\n    followUserIsLoading: false,\r\n    followUserErrors: null,\r\n    getProfileIsLoading: false,\r\n    getProfileErrors: null,\r\n    unfollowUserIsLoading: false,\r\n    unfollowUserErrors: null,\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { TagTypes } from './Actions'\r\n\r\nexport const getTags = (state) => ({\r\n  ...state,\r\n  getTagsIsLoading: true,\r\n  getTagsErrors: null,\r\n})\r\n\r\nexport const getTagsSuccess = (state, {tags}) => ({\r\n    ...state,\r\n    tags: tags,\r\n    getTagsIsLoading: false,\r\n    getTagsErrors: null,\r\n})\r\n\r\nexport const getTagsError = (state, { error }) => ({\r\n    ...state,\r\n    getTagsIsLoading: false,\r\n    getTagsErrors: error,\r\n})\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [TagTypes.GET_TAGS]: getTags,\r\n    [TagTypes.GET_TAGS_SUCCESS]: getTagsSuccess,\r\n    [TagTypes.GET_TAGS_ERROR]: getTagsError\r\n    \r\n  })\r\n  ","export const INITIAL_STATE = {\r\n    tags: [],\r\n    getTagsIsLoading: false,\r\n    getTagsErrors: null,\r\n}","export const INITIAL_STATE = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0,\r\n    redirectTo: null,\r\n    currentUser: {},\r\n    appLoaded: false,\r\n    skipTracking: false\r\n}","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { CommonTypes } from './Actions'\r\n\r\nexport const appLoad = (state, {user, token, skipTracking} ) => ({\r\n  ...state,\r\n  token: token,\r\n  appLoaded: true,\r\n  currentUser: user,\r\n  skipTracking: skipTracking\r\n})\r\n\r\nexport const redirect = (state) => ({\r\n  ...state,\r\n  redirectTo: null,\r\n})\r\n\r\nexport const pageUnloaded = (state) => ({\r\n  ...state,\r\n  viewChangeCounter: INITIAL_STATE.redirectTo + 1,\r\n})\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [CommonTypes.APP_LOAD]: appLoad,\r\n    [CommonTypes.REDIRECT]: redirect,\r\n    [CommonTypes.PAGE_UNLOADED]: pageUnloaded,\r\n  })\r\n  ","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    editorPageLoaded: ['action'],\r\n    articleSubmitted: null,\r\n    articleSubmittedSuccess: ['action'],\r\n    articleSubmittedError: ['error'],\r\n    addTag: null,\r\n    removeTag: ['action'],\r\n    updateFieldEditor: ['action'],\r\n})\r\nexport const EditorTypes = Types\r\nexport default Creators","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { EditorTypes } from './Actions'\r\n\r\nexport const editorPageLoaded = (state, { action }) => ({\r\n  ...state,\r\n  articleSlug: action.payload ? action.payload.article.slug : '',\r\n  title: action.payload ? action.payload.article.title : '',\r\n  description: action.payload ? action.payload.article.description : '',\r\n  body: action.payload ? action.payload.article.body : '',\r\n  tagInput: '',\r\n  tagList: action.payload ? action.payload.article.tagList : []\r\n \r\n})\r\nexport const articleSubmitted = (state) => ({\r\n  ...state,\r\n  inProgress: true,\r\n  articleSubmittedIsLoading: true,\r\n  articleSubmittedErrors: null,\r\n})\r\nexport const articleSubmittedSuccess = (state, { action }) => ({\r\n  ...state,\r\n  inProgress: null,\r\n  articleSubmittedIsLoading: false,\r\n  articleSubmittedErrors: action.payload.errors,\r\n})\r\nexport const articleSubmittedError = (state, { action }) => ({\r\n  ...state,\r\n  inProgress: null,\r\n  articleSubmittedIsLoading: false,\r\n  articleSubmittedErrors: action.payload.errors,\r\n})\r\n\r\nexport const addTag = (state) => ({\r\n  ...state,\r\n  tagList: state.tagList.concat([state.tagInput]),\r\n  tagInput: ''\r\n})\r\n\r\nexport const removeTag = (state, {action}) => ({\r\n  ...state,\r\n  tagList: state.tagList.filter(tag => tag !== action.tag)\r\n})\r\n\r\nexport const updateFieldEditor = (state, {action}) => ({\r\n  ...state,\r\n  [action.key]: action.value \r\n})\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [EditorTypes.EDITOR_PAGE_LOADED]: editorPageLoaded,\r\n    [EditorTypes.ARTICLE_SUBMITTED]: articleSubmitted,\r\n    [EditorTypes.ARTICLE_SUBMITTED_SUCCESS]: articleSubmittedSuccess,\r\n    [EditorTypes.ARTICLE_SUBMITTED_ERROR]: articleSubmittedError,\r\n    [EditorTypes.ADD_TAG]: addTag,\r\n    [EditorTypes.REMOVE_TAG]: removeTag,\r\n    [EditorTypes.UPDATE_FIELD_EDITOR]: updateFieldEditor,\r\n  })","export const INITIAL_STATE = {\r\n    tags: [],\r\n    articleSubmittedErrors: null,\r\n    articleSubmittedIsLoading: false,\r\n    title: '',\r\n    description: '',\r\n    body:'',\r\n    tagList: []\r\n}\r\n","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    homePageLoaded: ['action'],\r\n})\r\nexport const HomeTypes = Types\r\nexport default Creators","import { INITIAL_STATE } from './InitialState'\r\nimport { createReducer } from 'reduxsauce'\r\nimport { HomeTypes } from './Actions'\r\n\r\nexport const homePageLoaded = (state,{action}) => ({\r\n  ...state,\r\n  tags: action.payload[0].tags\r\n})\r\n\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [HomeTypes.HOME_PAGE_LOADED]: homePageLoaded,\r\n  })","export const INITIAL_STATE = {\r\n    tags: []\r\n}","import { combineReducers } from 'redux'\r\nimport configureStore from './createStore'\r\nimport rootSaga from '../Sagas'\r\nimport { reducer as ArticleReducer } from './Article/Reducers'\r\nimport { reducer as AuthReducer } from './Auth/Reducers'\r\nimport { reducer as CommentReducer } from './Comment/Reducers'\r\nimport { reducer as ProfileReducer } from './Profile/Reducers'\r\nimport { reducer as TagReducer } from './Tag/Reducers'\r\nimport { reducer as CommonReducer } from './Common/Reducers'\r\nimport { reducer as EditorReducer } from './Editor/Reducers'\r\nimport { reducer as HomeReducer } from './Home/Reducers'\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nexport default () => {\r\n  const rootReducer = combineReducers({\r\n    article: ArticleReducer,\r\n    auth: AuthReducer,\r\n    comment: CommentReducer,\r\n    profile: ProfileReducer,\r\n    tag: TagReducer,\r\n    common: CommonReducer,\r\n    editor: EditorReducer,\r\n    home: HomeReducer,\r\n    router: routerReducer,\r\n  })\r\n  return configureStore(rootReducer, rootSaga)\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types'\r\n\r\n\r\nconst LoggedOutView = props => {\r\n  if ((Object.keys(props.currentUser).length  === 0)) {\r\n    return (\r\n      <ul className=\"nav navbar-nav pull-xs-right\">\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Sign in\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Sign up\r\n          </Link>\r\n        </li>\r\n\r\n      </ul>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nLoggedOutView.propTypes = {\r\n  currentUser: PropTypes.object\r\n}\r\n\r\nconst LoggedInView = props => {\r\n  if (!(Object.keys(props.currentUser).length  === 0)) {\r\n    return (\r\n      <ul className=\"nav navbar-nav pull-xs-right\">\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            Home\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/editor\" className=\"nav-link\">\r\n            <i className=\"ion-compose\"></i>&nbsp;New Post\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/settings\" className=\"nav-link\">\r\n            <i className=\"ion-gear-a\"></i>&nbsp;Settings\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            to={`/@${props.currentUser.username}`}\r\n            className=\"nav-link\">\r\n            <img src={props.currentUser.image} className=\"user-pic\" alt={props.currentUser.image} />\r\n            {props.currentUser.username}\r\n          </Link>\r\n        </li>\r\n\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nLoggedInView.propTypes = {\r\n  currentUser: PropTypes.object\r\n}\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light\">\r\n        <div className=\"container\">\r\n\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            {this.props.appName.toLowerCase()}\r\n          </Link>\r\n\r\n          <LoggedOutView currentUser={this.props.currentUser} />\r\n\r\n          <LoggedInView currentUser={this.props.currentUser} />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  appName: PropTypes.string,\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst PerformActions = (props) => {\r\n  const article = props.article;\r\n  const del = () => {\r\n    props.onClickDelete(article.slug)\r\n  };\r\n  if (props.canModify) {\r\n    return (\r\n      <span>\r\n\r\n        <Link\r\n          to={`/editor/${article.slug}`}\r\n          className=\"btn btn-outline-secondary btn-sm\">\r\n          <i className=\"ion-edit\"></i> Edit Article\r\n        </Link>\r\n\r\n        <button className=\"btn btn-outline-danger btn-sm\" onClick={del}>\r\n          <i className=\"ion-trash-a\"></i> Delete Article\r\n        </button>\r\n\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n    </span>\r\n  );\r\n};\r\nPerformActions.propTypes = {\r\n  article: PropTypes.object,\r\n  onClickDelete: PropTypes.func,\r\n  canModify: PropTypes.bool,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickDelete: slug =>\r\n    dispatch(ArticleActions.deleteArticle(slug))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(PerformActions);\r\n","import PerformActions from './PerformActions';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst ArticleMeta = (props) => {\r\n  const article = props.article;\r\n  return (\r\n    <div className=\"article-meta\">\r\n      <Link to={`/@${article.author.username}`}>\r\n        <img src={article.author.image} alt={article.author.username} />\r\n      </Link>\r\n\r\n      <div className=\"info\">\r\n        <Link to={`/@${article.author.username}`} className=\"author\">\r\n          {article.author.username}\r\n        </Link>\r\n        <span className=\"date\">\r\n          {new Date(article.createdAt).toDateString()}\r\n        </span>\r\n      </div>\r\n\r\n      <PerformActions canModify={props.canModify} article={article} />\r\n    </div>\r\n  );\r\n};\r\nArticleMeta.propTypes = {\r\n  article: PropTypes.object,\r\n  canModify: PropTypes.bool,\r\n}\r\nexport default ArticleMeta;\r\n","import React from 'react';\r\nimport CommentAtions from '../../Stores/Comment/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass CommentInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      body: ''\r\n    };\r\n\r\n    this.setBody = ev => {\r\n      this.setState({ body: ev.target.value });\r\n    };\r\n\r\n    this.createComment = ev => {\r\n      ev.preventDefault();\r\n      const slug = this.props.slug\r\n      const comment  =  this.state.body;\r\n      this.setState({ body: '' });\r\n      this.props.onSubmit(slug,comment);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"card comment-form\" onSubmit={this.createComment}>\r\n        <div className=\"card-block\">\r\n          <textarea className=\"form-control\"\r\n            placeholder=\"Write a comment...\"\r\n            value={this.state.body}\r\n            onChange={this.setBody}\r\n            rows=\"3\">\r\n          </textarea>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <img\r\n            src={this.props.currentUser.image}\r\n            className=\"comment-author-img\"\r\n            alt={this.props.currentUser.username} />\r\n          <button\r\n            className=\"btn btn-sm btn-primary\"\r\n            type=\"submit\">\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nCommentInput.propTypes = {\r\n  comments: PropTypes.array,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (slug,comment) =>\r\n    dispatch(CommentAtions.createComment(slug,comment))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(CommentInput);\r\n","import React from 'react';\r\nimport CommentActions from '../../Stores/Comment/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst DeleteButton = (props) => {\r\n  const del = () => {\r\n    props.onClick(props.slug, props.commentId);\r\n  };\r\n\r\n  if (props.show) {\r\n    return (\r\n      <span className=\"mod-options\">\r\n        <i className=\"ion-trash-a\" onClick={del}></i>\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nDeleteButton.propTypes = {\r\n  commentId: PropTypes.integer,\r\n  show: PropTypes.bool,\r\n  slug: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: (slug, commentId) =>\r\n    dispatch(CommentActions.deleteComment(slug,commentId))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(DeleteButton);\r\n","import DeleteButton from './DeleteButton';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst Comment = (props) => {\r\n  const comment = props.comment;\r\n  const show = props.currentUser &&\r\n    this.props.currentUser.username === comment.author.username;\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-block\">\r\n        <p className=\"card-text\">{comment.body}</p>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <Link\r\n          to={`/@${comment.author.username}`}\r\n          className=\"comment-author\">\r\n          <img src={comment.author.image} className=\"comment-author-img\" alt={comment.author.username} />\r\n        </Link>\r\n        &nbsp;\r\n        <Link\r\n          to={`/@${comment.author.username}`}\r\n          className=\"comment-author\">\r\n          {comment.author.username}\r\n        </Link>\r\n        <span className=\"date-posted\">\r\n          {new Date(comment.createdAt).toDateString()}\r\n        </span>\r\n        <DeleteButton show={show} slug={props.slug} commentId={comment.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.string,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string,\r\n}\r\nexport default Comment;\r\n","import Comment from './Comment';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst CommentList = (props) => {\r\n  if(props.comments.length > 0){\r\n  return (\r\n      <div>\r\n      {\r\n        props.comments.map(comment => {\r\n          return (\r\n            <Comment\r\n              comment={comment}\r\n              currentUser={props.currentUser}\r\n              slug={props.slug}\r\n              key={comment.id} />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n    \r\n  );\r\n}else{\r\n  return <div></div>\r\n}\r\n};\r\nCommentList.propTypes = {\r\n  comments: PropTypes.object,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string\r\n}\r\nexport default CommentList;\r\n","import CommentInput from './CommentInput';\r\nimport CommentList from './CommentList';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst CommentContainer = props => {\r\n  if (props.currentUser) {\r\n    return (\r\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <div>\r\n          <list-errors errors={props.errors}></list-errors>\r\n          <CommentInput slug={props.slug} currentUser={props.currentUser} />\r\n        </div>\r\n\r\n        <CommentList\r\n          comments = {props.comments || []}\r\n          slug={props.slug}\r\n          currentUser={props.currentUser} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <p>\r\n          <Link to=\"/login\">Sign in</Link>\r\n          &nbsp;or&nbsp;\r\n          <Link to=\"/register\">sign up</Link>\r\n          &nbsp;to add comments on this article.\r\n        </p>\r\n\r\n        <CommentList\r\n          comments={props.comments}\r\n          slug={props.slug}\r\n          currentUser={props.currentUser} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nCommentContainer.propTypes = {\r\n  comments: PropTypes.object,\r\n  currentUser: PropTypes.object,\r\n  slug: PropTypes.string,\r\n}\r\nexport default CommentContainer;\r\n","import ArticleMeta from './ArticleMeta';\r\nimport CommentContainer from './CommentContainer';\r\nimport React from 'react';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport CommonActions from '../../Stores/Common/Actions';\r\nimport CommentActions from '../../Stores/Comment/Actions';\r\nimport { connect } from 'react-redux';\r\nimport marked from 'marked';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      slug: this.props.match.params.id,\r\n      textValue: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if(this.state.slug){\r\n       this.props.onLoad(this.state.slug)\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.article) {\r\n      return null;\r\n    }\r\n    const markup = { __html: marked(this.props.article.body || '') };\r\n     const canModify = this.props.currentUser &&\r\n      this.props.currentUser.username === this.props.article.author.username\r\n    return (\r\n      <div className=\"article-page\">\r\n\r\n        <div className=\"banner\">\r\n          <div className=\"container\">\r\n\r\n            <h1>{this.props.article.title}</h1>\r\n            <ArticleMeta\r\n              article={this.props.article}\r\n              canModify={canModify} />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container page\">\r\n\r\n          <div className=\"row article-content\">\r\n            <div className=\"col-xs-12\">\r\n\r\n              <div dangerouslySetInnerHTML={markup}></div>\r\n\r\n              <ul className=\"tag-list\">\r\n                {\r\n                  this.props.article.tagList.map(tag => {\r\n                    return (\r\n                      <li\r\n                        className=\"tag-default tag-pill tag-outline\"\r\n                        key={tag}>\r\n                        {tag}\r\n                      </li>\r\n                    );\r\n                  })\r\n                }\r\n              </ul>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"article-actions\">\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <CommentContainer\r\n              comments={this.props.comments || []}\r\n              errors={this.props.commentErrors}\r\n              slug={this.props.match.params.id}\r\n              currentUser={this.props.currentUser} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIndex.propTypes = {\r\n  comments: PropTypes.object,\r\n  article: PropTypes.object,\r\n  currentUser: PropTypes.object,\r\n  canModify: PropTypes.bool,\r\n  onLoad: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  loadComments: PropTypes.func,\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.article, \r\n  ...state.comment,\r\n  currentUser: state.auth.currentUser\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onLoad: slug => {\r\n    dispatch(ArticleActions.getArticle(slug))\r\n    dispatch(CommentActions.getArticleComments(slug))\r\n  },\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass ListErrors extends React.Component {\r\n  render() {\r\n    if (this.props.errors) {\r\n      const errors = this.props.errors.errors\r\n      return (\r\n        <ul className=\"error-messages\">\r\n          {\r\n            Object.keys(errors).map(key => {\r\n              return (\r\n                <li key={key}>\r\n                  {key} {errors[key]}\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nListErrors.propTypes = {\r\n  errors: PropTypes.object,\r\n}\r\nexport default ListErrors;\r\n","import ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport EditorActions from '../Stores/Editor/Actions';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Editor extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    const updateFieldEvent = key => ev => this.props.onUpdateField(key, ev.target.value);\r\n    this.changeTitle = updateFieldEvent('title');\r\n    this.changeDescription = updateFieldEvent('description');\r\n    this.changeBody = updateFieldEvent('body');\r\n    this.changeTagInput = updateFieldEvent('tagInput');\r\n\r\n    this.watchForEnter = ev => {\r\n      if (ev.keyCode === 13) {\r\n        ev.preventDefault();\r\n        this.props.onAddTag();\r\n      }\r\n    };\r\n\r\n    this.removeTagHandler = tag => () => {\r\n      this.props.onRemoveTag(tag);\r\n    };\r\n\r\n    this.submitForm = ev => {\r\n      ev.preventDefault();\r\n      const article = {\r\n        title: this.props.title,\r\n        description: this.props.description,\r\n        body: this.props.body,\r\n        tagList: this.props.tagList\r\n      };\r\n\r\n      const slug = { slug: this.props.slug };\r\n      this.props.slug ?\r\n        this.props.onUpdateArticle(Object.assign(article, slug)) :\r\n        this.props.onCreateArticle(article);\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.match.params.slug !== nextProps.match.params.slug) {\r\n      if (nextProps.match.params.slug) {\r\n        this.props.onUnload();\r\n        return this.props.onGetArticle(this.props.match.params.slug);\r\n      }\r\n      this.props.onGetArticles(null)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.slug) {\r\n      return this.props.onGetArticle(this.props.match.params.slug);\r\n    }\r\n    this.props.onGetArticle(null)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onGetArticle(null)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-10 offset-md-1 col-xs-12\">\r\n\r\n              <ListErrors errors={this.props.errors}></ListErrors>\r\n\r\n              <form>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Article Title\"\r\n                      value={this.props.title}\r\n                      onChange={this.changeTitle} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"What's this article about?\"\r\n                      value={this.props.description}\r\n                      onChange={this.changeDescription} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows=\"8\"\r\n                      placeholder=\"Write your article (in markdown)\"\r\n                      value={this.props.body}\r\n                      onChange={this.changeBody}>\r\n                    </textarea>\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter tags\"\r\n                      value={this.props.tagInput}\r\n                      onChange={this.changeTagInput}\r\n                      onKeyUp={this.watchForEnter} />\r\n\r\n                    <div className=\"tag-list\">\r\n                      {\r\n                        (this.props.tagList || []).map(tag => {\r\n                          return (\r\n                            <span className=\"tag-default tag-pill\" key={tag}>\r\n                              <i  className=\"ion-close-round\"\r\n                                  onClick={this.removeTagHandler(tag)}>\r\n                              </i>\r\n                              {tag}\r\n                            </span>\r\n                          );\r\n                        })\r\n                      }\r\n                    </div>\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\r\n                    type=\"button\"\r\n                    disabled={this.props.inProgress}\r\n                    onClick={this.submitForm}>\r\n                    Publish Article\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nEditor.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  inProgress: PropTypes.bool,\r\n  tagList: PropTypes.array,\r\n  errors: PropTypes.object,\r\n  onAddTag: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  onRemoveTag: PropTypes.func,\r\n  onSubmit: PropTypes.func, \r\n  onUnload: PropTypes.func,\r\n  onUpdateField: PropTypes.func,\r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.article.article,\r\n  ...state.editor,\r\n  errors: state.article.createArticleErrors\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddTag: () =>\r\n    dispatch(EditorActions.addTag()),\r\n  onLoad: payload =>\r\n    dispatch(EditorActions.editorPageloaded({ payload })),\r\n  onRemoveTag: tag =>\r\n    dispatch(EditorActions.removeTag({tag})),\r\n  onSubmit: payload =>\r\n    dispatch(EditorActions.articleSubmitted({payload})),\r\n  onUpdateField: (key, value) =>\r\n    dispatch(EditorActions.updateFieldEditor({key, value })),\r\n  onUpdateArticle: (slug, article) =>\r\n    dispatch(ArticleActions.updateArticle( slug, article )),\r\n  onCreateArticle: article =>\r\n    dispatch(ArticleActions.createArticle(article)),\r\n  onGetArticle: (article) =>\r\n    dispatch(ArticleActions.getArticle(article)),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n","import { Link } from 'react-router-dom';\r\nimport ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport AuthActions from '../Stores/Auth/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeEmail = ev => this.props.onChangeEmail(ev.target.value);\r\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value);\r\n    this.submitForm = (email, password) => ev => {\r\n      ev.preventDefault();\r\n      this.props.onSubmit(email, password);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    const email = this.props.email || '';\r\n    const password = this.props.password || '';\r\n    return (\r\n      <div className=\"auth-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 className=\"text-xs-center\">Sign In</h1>\r\n              <p className=\"text-xs-center\">\r\n                <Link to=\"/register\">\r\n                  Need an account?\r\n                </Link>\r\n              </p>\r\n\r\n              <ListErrors errors={this.props.errors} />\r\n\r\n              <form onSubmit={this.submitForm(email, password)}>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={email}\r\n                      onChange={this.changeEmail} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={password}\r\n                      onChange={this.changePassword} />\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.inProgress}>\r\n                    Sign in\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n  inProgress: PropTypes.bool,\r\n  onSubmit: PropTypes.func,\r\n  onChangePassword: PropTypes.func,\r\n  onChangeEmail: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  errors: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n  ...state.auth,\r\n  errors: state.auth.loginErrors\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeEmail: value =>\r\n    dispatch(AuthActions.updateFieldAuth({key: 'email', value })),\r\n  onChangePassword: value =>\r\n    dispatch(AuthActions.updateFieldAuth({key: 'password', value })),\r\n  onSubmit: (email, password) => dispatch(AuthActions.login(email, password)),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import ArticleList from './ArticleList';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport ProfileActions from '../Stores/Profile/Actions';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst EditProfileSettings = (props) => {\r\n  if (props.isUser) {\r\n    return (\r\n      <Link\r\n        to=\"/settings\"\r\n        className=\"btn btn-sm btn-outline-secondary action-btn\">\r\n        <i className=\"ion-gear-a\"></i> Edit Profile Settings\r\n      </Link>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nEditProfileSettings.propTypes = {\r\n  isUser: PropTypes.bool\r\n}\r\nconst FollowUserButton = props => {\r\n  if (props.isUser) {\r\n    return null;\r\n  }\r\n\r\n  let classes = 'btn btn-sm action-btn';\r\n  if (props.user.following) {\r\n    classes += ' btn-secondary';\r\n  } else {\r\n    classes += ' btn-outline-secondary';\r\n  }\r\n\r\n  const handleClick = ev => {\r\n    ev.preventDefault();\r\n    if (props.user.following) {\r\n      props.unfollow(props.user.username)\r\n    } else {\r\n      props.follow(props.user.username)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={classes}\r\n      onClick={handleClick}>\r\n      <i className=\"ion-plus-round\"></i>\r\n      &nbsp;\r\n      {props.user.following ? 'Unfollow' : 'Follow'} {props.user.username}\r\n    </button>\r\n  );\r\n};\r\nFollowUserButton.propTypes = {\r\n  isUser: PropTypes.bool,\r\n  user: PropTypes.object,\r\n  unfollow: PropTypes.func,\r\n  follow: PropTypes.func,\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  componentDidMount() {\r\n    this.props.onLoad(this.props.match.params.username, this.props.pager)\r\n  }\r\n\r\n  componentDidUpdate(nextProps){\r\n    if(nextProps.profile.profile){\r\n      this.props.profile.following = nextProps.profile.following\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  renderTabs() {\r\n    return (\r\n      <ul className=\"nav nav-pills outline-active\">\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link active\"\r\n            to={`/@${this.props.profile.username}`}>\r\n            My Articles\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            to={`/@${this.props.profile.username}/favorites`}>\r\n            Favorited Articles\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const profile = this.props.profile;\r\n    if (!profile) {\r\n      return null;\r\n    }\r\n\r\n    const isUser = this.props.currentUser &&\r\n      this.props.profile.username === this.props.currentUser.username;\r\n\r\n    return (\r\n      <div className=\"profile-page\">\r\n\r\n        <div className=\"user-info\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\r\n\r\n                <img src={profile.image} className=\"user-img\" alt={profile.username} />\r\n                <h4>{profile.username}</h4>\r\n                <p>{profile.bio}</p>\r\n\r\n                <EditProfileSettings isUser={isUser} />\r\n                <FollowUserButton\r\n                  isUser={isUser}\r\n                  user={profile}\r\n                  follow={this.props.follow}\r\n                  unfollow={this.props.unfollow}\r\n                  />\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\r\n\r\n              <div className=\"articles-toggle\">\r\n                {this.renderTabs()}\r\n              </div>\r\n\r\n              <ArticleList\r\n                pager={this.props.pager}\r\n                articles={this.props.articles}\r\n                articlesCount={this.props.articlesCount}\r\n                currentPage={this.props.currentPage} />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProfile.propTypes = {\r\n  email: PropTypes.array,\r\n  password: PropTypes.object,\r\n  inProgress: PropTypes.bool,\r\n  profile: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n  onChangePassword: PropTypes.func,\r\n  onChangeEmail: PropTypes.func,\r\n  onUnload: PropTypes.func, \r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.article,\r\n  ...state.profile,\r\n  ...state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  follow: username => dispatch(ProfileActions.followUser(username)),\r\n  onLoad: (username, pager) => { \r\n    dispatch(ProfileActions.profilePageLoaded(username)) \r\n    dispatch(ProfileActions.getProfile(username))\r\n    dispatch(ArticleActions.getArticlesByAuthor(username, pager))\r\n  },\r\n  unfollow: username => dispatch(ProfileActions.unfollowUser(username)),\r\n  onUnload: () => dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\nexport { Profile, mapStateToProps };\r\n","import { Profile, mapStateToProps } from './Profile';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport ProfileActions from '../Stores/Profile/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass ProfileFavorites extends Profile {\r\n  componentDidMount() {\r\n    this.props.onLoad(this.props.match.params.username)\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  renderTabs() {\r\n    return (\r\n      <ul className=\"nav nav-pills outline-active\">\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            to={`/@${this.props.profile.username}`}>\r\n            My Articles\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link active\"\r\n            to={`/@${this.props.profile.username}/favorites`}>\r\n            Favorited Articles\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nProfileFavorites.propTypes = {\r\n  username: PropTypes.string,\r\n  onLoad: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  onGetProfile: PropTypes.func,\r\n  onGetArticleFavoritedBy: PropTypes.func, \r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onLoad: (username) => {\r\n    dispatch(ProfileActions.getProfile(username))\r\n    dispatch(ArticleActions.getFavouritedByArticle(username))\r\n  },\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileFavorites);\r\n","import { Link } from 'react-router-dom';\r\nimport ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport AuthActions from '../Stores/Auth/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeEmail = ev => this.props.onChangeEmail(ev.target.value);\r\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value);\r\n    this.changeUsername = ev => this.props.onChangeUsername(ev.target.value);\r\n    this.submitForm = (username, email, password) => ev => {\r\n      ev.preventDefault();\r\n      this.props.onSubmit(username, email, password);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    const email = this.props.email;\r\n    const password = this.props.password;\r\n    const username = this.props.username;\r\n\r\n    return (\r\n      <div className=\"auth-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 className=\"text-xs-center\">Sign Up</h1>\r\n              <p className=\"text-xs-center\">\r\n                <Link to=\"/login\">\r\n                  Have an account?\r\n                </Link>\r\n              </p>\r\n\r\n              <ListErrors errors={this.props.errors} />\r\n\r\n              <form onSubmit={this.submitForm(username, email, password)}>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      value={this.props.username || ''}\r\n                      onChange={this.changeUsername} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.props.email || ''}\r\n                      onChange={this.changeEmail} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={this.props.password || ''}\r\n                      onChange={this.changePassword} />\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.inProgress}>\r\n                    Sign up\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  username: PropTypes.string,\r\n  inProgress: PropTypes.bool,\r\n  email: PropTypes.string,\r\n  password: PropTypes.string,\r\n  onChangeEmail: PropTypes.func,\r\n  onChangePassword: PropTypes.func,\r\n  onChangeUsername: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  errors: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   ...state.auth,\r\n   errors: state.auth.registerErrors \r\n  });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeEmail: value =>\r\n    dispatch(AuthActions.updateFieldAuth({ key: 'email', value })),\r\n  onChangePassword: value =>\r\n    dispatch(AuthActions.updateFieldAuth({ key: 'password', value })),\r\n  onChangeUsername: value =>\r\n    dispatch(AuthActions.updateFieldAuth({key: 'username', value })),\r\n  onSubmit: (username, email, password) => {\r\n    dispatch(AuthActions.register(username, email, password))\r\n  },\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport AuthActions from '../Stores/Auth/Actions';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nclass SettingsForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      image: '',\r\n      username: '',\r\n      bio: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n    this.updateState = field => ev => {\r\n      const newState = Object.assign({}, this.state, { [field]: ev.target.value });\r\n      this.setState(newState);\r\n    };\r\n    this.submitForm = ev => {\r\n      ev.preventDefault();\r\n      const user = Object.assign({}, this.state);\r\n      if (!user.password) {\r\n        delete user.password;\r\n      }\r\n      this.props.onSubmitForm(user);\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.currentUser) {\r\n      Object.assign(this.state, {\r\n        image: this.props.currentUser.image || '',\r\n        username: this.props.currentUser.username  || '',\r\n        bio: this.props.currentUser.bio  || '',\r\n        email: this.props.currentUser.email || ''\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    if (nextProps.currentUser) {\r\n      Object.assign(this.state, {\r\n        image: nextProps.currentUser.image || '',\r\n        username: nextProps.currentUser.username  || '',\r\n        bio: nextProps.currentUser.bio  || '',\r\n        email: nextProps.currentUser.email || ''\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitForm}>\r\n        <fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"URL of profile picture\"\r\n              value={this.state.image}\r\n              onChange={this.updateState('image')} />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={this.state.username}\r\n              onChange={this.updateState('username')} />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <textarea\r\n              className=\"form-control form-control-lg\"\r\n              rows=\"8\"\r\n              placeholder=\"Short bio about you\"\r\n              value={this.state.bio}\r\n              onChange={this.updateState('bio')}>\r\n            </textarea>\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={this.state.email}\r\n              onChange={this.updateState('email')} />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              value={this.state.password}\r\n              onChange={this.updateState('password')} />\r\n          </fieldset>\r\n\r\n          <button\r\n            className=\"btn btn-lg btn-primary pull-xs-right\"\r\n            type=\"submit\"\r\n            disabled={this.state.inProgress}>\r\n            Update Settings\r\n          </button>\r\n\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nSettingsForm.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  onSubmitForm: PropTypes.func, \r\n}\r\nclass Settings extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"settings-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n\r\n              <h1 className=\"text-xs-center\">Your Settings</h1>\r\n\r\n              <ListErrors errors={this.props.errors}></ListErrors>\r\n\r\n              <SettingsForm\r\n                currentUser={this.props.currentUser}\r\n                onSubmitForm={this.props.onSubmitForm} />\r\n\r\n              <hr />\r\n\r\n              <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={this.props.onClickLogout}>\r\n                Or click here to logout.\r\n              </button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSettings.propTypes = {\r\n  currentUser: PropTypes.object,\r\n  errors: PropTypes.array,\r\n  onSubmitForm: PropTypes.func,\r\n  onClickLogout: PropTypes.func,\r\n  onUnload: PropTypes.func, \r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.auth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickLogout: () => dispatch(AuthActions.logout()),\r\n  onSubmitForm: user =>\r\n    dispatch(AuthActions.save(user)),\r\n  onUnload: () => dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import AuthActions from '../Stores/Auth/Actions';\r\nimport Header from './Header';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CommonActions from '../Stores/Common/Actions';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Article from '../Components/Article';\r\nimport Editor from '../Components/Editor';\r\nimport Home from '../Components/Home';\r\nimport Login from '../Components/Login';\r\nimport Profile from '../Components/Profile';\r\nimport ProfileFavorites from '../Components/ProfileFavorites';\r\nimport Register from '../Components/Register';\r\nimport Settings from '../Components/Settings';\r\nimport { push } from 'react-router-redux';\r\nimport { PropTypes } from 'prop-types'\r\nimport createStore from '../Stores'\r\nconst { store } = createStore()\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {} \r\n  }\r\n  componentDidMount(){\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token) {\r\n      this.props.setToken(token);\r\n    }\r\n    this.props.onGetCurrentUser()\r\n    this.props.onLoad(token ? this.props.currentUser.username : null, token);\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (nextProps.redirectTo){\r\n      this.props.onRedirect(nextProps)\r\n    }else{\r\n\r\n    }\r\n  }\r\n  render() {\r\n    if (this.props.appLoaded) {\r\n      return (\r\n        <div>\r\n          <Header\r\n            appName={this.props.appName}\r\n            currentUser={this.props.currentUser} />\r\n            <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/editor/:slug\" component={Editor} />\r\n            <Route exact path=\"/editor\" component={Editor} />\r\n            <Route exact path=\"/article/:id\" component={Article} />\r\n            <Route path=\"/settings\" component={Settings} />\r\n            <Route path=\"/@:username/favorites\" component={ProfileFavorites} />\r\n            <Route path=\"/@:username\" component={Profile} />\r\n            </Switch>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Header\r\n            appName={this.props.appName}\r\n            currentUser={this.props.currentUser} />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n}\r\nApp.propTypes = {\r\n  appLoaded: PropTypes.bool,\r\n  appName: PropTypes.string,\r\n  currentUser: PropTypes.object,\r\n  redirectTo: PropTypes.string,\r\n  onLoad: PropTypes.func,\r\n  onRedirect: PropTypes.func,\r\n  setToken: PropTypes.func,\r\n  onGetCurrentUser: PropTypes.func,\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    ...state.auth,\r\n    appLoaded:state.common.appLoaded,\r\n    appName: state.common.appName\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onLoad: (user, token) =>\r\n    dispatch(CommonActions.appLoad(user, token, true)),\r\n  onRedirect: (nextProps) => {\r\n    store.dispatch(push(nextProps.redirectTo));\r\n    dispatch(AuthActions.redirect())\r\n  },\r\n  setToken: (token) => dispatch(AuthActions.setToken(token)),\r\n  onGetCurrentUser: () => dispatch(AuthActions.getCurrentUser())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport createStore from './Stores'\nimport { Route, Switch,Router } from 'react-router-dom';\n//import { ConnectedRouter } from 'react-router-redux'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\nimport * as serviceWorker from './serviceWorker';\nimport App from './Components/App';\n//import { history }  from './Stores/createStore'\nconst { store, persistor,history} = createStore()\n\nReactDOM.render((\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/\" component={App} />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>\n\n), document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n    getTags: null,\r\n    getTagsSuccess: ['tags'],\r\n    getTagsError: ['error'],\r\n})\r\nexport const TagTypes = Types\r\nexport default Creators","import { createActions } from 'reduxsauce'\r\n\r\nconst { Types, Creators } = createActions({\r\n  getArticles: ['page'],\r\n  articlesSuccess: ['payload'],\r\n  articlesError: ['error'],\r\n  getArticle: ['slug'],\r\n  articleSuccess: ['article'],\r\n  articleError: ['error'],\r\n  getArticlesByAuthor: ['author','page'],\r\n  articlesByAuthorSuccess: ['articles'],\r\n  articlesByAuthorError: ['error'],\r\n  getArticlesByTag: ['tag','page'],\r\n  articlesByTagSuccess: ['payload'],\r\n  articlesByTagError: ['error'],\r\n  deleteArticle: ['slug'],\r\n  deleteArticleSuccess: null,\r\n  deleteArticleError: ['error'],\r\n  setFavouriteArticle: ['slug'],\r\n  favouriteArticleSuccess: ['payload'],\r\n  favouriteArticleError: ['error'],\r\n  getFavouritedByArticle: ['author','page'],\r\n  favouritedByArticleSuccess: ['payload'],\r\n  favouritedByArticleError: ['error'],\r\n  getFeed: ['quote'],\r\n  feedSuccess: ['payload'],\r\n  feedError: ['error'],\r\n  unfavouriteArticle: ['slug'],\r\n  unfavouriteArticleSuccess: ['payload'],\r\n  unfavouriteArticleError: ['error'],\r\n  updateArticle: ['slug','article'],\r\n  updateArticleSuccess: ['message'],\r\n  updateArticleError: ['error'],\r\n  createArticle: ['article'],\r\n  createArticleSuccess: ['article'],\r\n  createArticleError: ['error'],\r\n  setPage: ['payload'],\r\n  applyTagFilter: ['action'],\r\n  homePageLoaded: ['action'],\r\n  changeTabs: ['action'],\r\n  profilePageLoaded: ['action']\r\n})\r\n\r\nexport const ArticleTypes = Types\r\nexport default Creators\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst FAVORITED_CLASS = 'btn btn-sm btn-primary';\r\nconst NOT_FAVORITED_CLASS = 'btn btn-sm btn-outline-primary';\r\n\r\nconst ArticlePreview = props => {\r\n  const article = props.article;\r\n  const favouriteButtonClass = article.favorited ? FAVORITED_CLASS : NOT_FAVORITED_CLASS;\r\n\r\n  const handleClick = ev => {\r\n    ev.preventDefault();\r\n    if (article.favorited) {\r\n      props.unfavorite(article.slug);\r\n    } else {\r\n      props.favorite(article.slug);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"article-preview\">\r\n      <div className=\"article-meta\">\r\n        <Link to={`/@${article.author.username}`}>\r\n          <img src={article.author.image} alt={article.author.username} />\r\n        </Link>\r\n\r\n        <div className=\"info\">\r\n          <Link className=\"author\" to={`/@${article.author.username}`}>\r\n            {article.author.username}\r\n          </Link>\r\n          <span className=\"date\">\r\n            {new Date(article.createdAt).toDateString()}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"pull-xs-right\">\r\n          <button className={favouriteButtonClass} onClick={handleClick}>\r\n            <i className=\"ion-heart\"></i> {article.favouritesCount}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to={`/article/${article.slug}`} className=\"preview-link\">\r\n        <h1>{article.title}</h1>\r\n        <p>{article.description}</p>\r\n        <span>Read more...</span>\r\n        <ul className=\"tag-list\">\r\n          {\r\n            article.tagList.map(tag => {\r\n              return (\r\n                <li className=\"tag-default tag-pill tag-outline\" key={tag}>\r\n                  {tag}\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nArticlePreview.propTypes = {\r\n  article: PropTypes.object,\r\n  favorite: PropTypes.func,\r\n  unfavorite: PropTypes.func,\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  favorite: slug => dispatch(ArticleActions.setFavouriteArticle(slug)),\r\n  unfavorite: slug => dispatch(ArticleActions.unfavouriteArticle(slug))\r\n});\r\nexport default connect(() => ({}), mapDispatchToProps)(ArticlePreview);\r\n","import React from 'react';\r\nimport ArticleActions from '../Stores/Article/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst ListPagination = (props) => {\r\n  if (props.articlesCount <= 10) {\r\n    return null;\r\n  }\r\n\r\n  const range = [];\r\n  for (let i = 0; i < Math.ceil(props.articlesCount / 10); ++i) {\r\n    range.push(i);\r\n  }\r\n\r\n  const setPage = page => {\r\n    if(props.pager) {\r\n      props.onSetPage(page, props.pager(page));\r\n    }else {\r\n      props.onSetPage(page, props.onGetArticles(page))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n\r\n        {\r\n          range.map(v => {\r\n            const isCurrent = v === props.currentPage;\r\n            const onClick = ev => {\r\n              ev.preventDefault();\r\n              setPage(v);\r\n            };\r\n            return (\r\n              <li\r\n                className={ isCurrent ? 'page-item active' : 'page-item' }\r\n                onClick={onClick}\r\n                key={v.toString()}>\r\n\r\n                <a className=\"page-link\" href={\"null\"}>{v + 1}</a>\r\n\r\n              </li>\r\n            );\r\n          })\r\n        }\r\n\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nListPagination.propTypes = {\r\n  inProgress: PropTypes.bool,\r\n  pager: PropTypes.string,\r\n  articlesCount: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  onSetPage: PropTypes.func,\r\n  onGetArticles: PropTypes.func, \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSetPage: (page, payload) =>\r\n    dispatch(ArticleActions.setPage({ page, payload })),\r\n  onGetArticles: (page) =>\r\n    dispatch(ArticleActions.getArticles(page))\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(ListPagination);\r\n","import ArticlePreview from './ArticlePreview';\r\nimport ListPagination from './ListPagination';\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst ArticleList = (props) => {\r\n  if (!props.articles) {\r\n    return (\r\n      <div className=\"article-preview\">Loading...</div>\r\n    );\r\n  }\r\n\r\n  if (props.articles.length === 0) {\r\n    return (\r\n      <div className=\"article-preview\">\r\n        No articles are here... yet.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.articles.map(article => {\r\n          return (\r\n            <ArticlePreview article={article} key={article.slug} />\r\n          );\r\n        })\r\n      }\r\n\r\n      <ListPagination\r\n        pager={props.pager}\r\n        articlesCount={props.articlesCount}\r\n        currentPage={props.currentPage} />\r\n    </div>\r\n  );\r\n};\r\nArticleList.propTypes = {\r\n  articles: PropTypes.array,\r\n  pager: PropTypes.string,\r\n  articlesCount: PropTypes.number,\r\n  currentPage: PropTypes.number\r\n}\r\nexport default ArticleList;\r\n","import Banner from './Banner';\r\nimport MainView from './MainView';\r\nimport React from 'react';\r\nimport Tags from './Tags';\r\nimport ArticleActions from '../../Stores/Article/Actions';\r\nimport TagActions from '../../Stores/Tag/Actions';\r\nimport CommonActions from '../../Stores/Common/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types'\r\n\r\nconst Promise = global.Promise;\r\n\r\nclass Home extends React.Component {\r\n  componentWillMount() {\r\n    this.tab = this.props.token ? 'feed' : 'all';\r\n    const articlesPromise = this.props.token ? this.props.loadFeed: this.props.loadArticles\r\n      Promise.all([this.props.loadTags(), articlesPromise()]);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-page\">\r\n\r\n        <Banner token={this.props.token} appName={this.props.appName} />\r\n\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <MainView tab={this.tab}/>\r\n\r\n            <div className=\"col-md-3\">\r\n              <div className=\"sidebar\">\r\n\r\n                <p>Popular Tags</p>\r\n\r\n                <Tags\r\n                  tags={this.props.tags}\r\n                  onClickTag={this.props.onClickTag} />\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nHome.propTypes = {\r\n  tags: PropTypes.array,\r\n  token: PropTypes.string,\r\n  appName: PropTypes.string,\r\n  onClickTag: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  onUnload: PropTypes.func,\r\n  loadTags: PropTypes.func,\r\n  loadFeed: PropTypes.func,\r\n}\r\nconst mapStateToProps = state => ({\r\n  ...state.auth,\r\n  appName: state.common.appName,\r\n  tags: state.tag.tags\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClickTag: (tag, pager) =>\r\n    dispatch(ArticleActions.getArticles(pager, tag)),\r\n  loadArticles: (pager) =>\r\n    dispatch(ArticleActions.getArticles(pager)),\r\n  loadFeed: (pager) =>\r\n    dispatch(ArticleActions.getFeed(pager)),\r\n  loadTags: () =>\r\n    dispatch(TagActions.getTags()),\r\n  onUnload: () =>\r\n    dispatch(CommonActions.pageUnloaded())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"],"sourceRoot":""}